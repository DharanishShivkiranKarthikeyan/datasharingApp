import{initializeApp as oe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";import{getAuth as se,signInWithCredential as re,GoogleAuthProvider as ie,onAuthStateChanged as ae,signOut as ce}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as de,getDocs as q,collection as F,doc as S,setDoc as T,getDoc as Y,updateDoc as j,increment as le}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import V from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();const ue={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},Z=oe(ue),D=se(Z),k=de(Z);var J;const $=(J=globalThis.crypto)==null?void 0:J.subtle;if(!$)throw new Error("Web Crypto API is not available in this environment");function he(){const s=new Uint8Array(12);for(let e=0;e<12;e++)s[e]=Math.floor(Math.random()*256);return s}function pe(s,e,t,o,n,r,a){return{content:new Uint8Array(s),content_type:e,tags:t||[],is_premium:o,price_usd:n,creator_id:new Uint8Array(r),file_type:a}}function fe(s){return s.content}async function X(s){const e=await $.digest("SHA-256",s);return new Uint8Array(e)}async function ge(s,e,t){const o=s.content,n=Math.ceil(o.length/t),r=[],a=await $.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<t;c++){const i=c*n,d=Math.min(i+n,o.length),u=o.slice(i,d),p=he(),w=await $.encrypt({name:"AES-GCM",iv:p},a,u),f={data:new Uint8Array(w),nonce:p,index:c,file_type:s.file_type};r.push(f)}return r}function me(s){const e=new Uint8Array(new Int32Array([s.index]).buffer),t=new Uint8Array([...s.data,...s.nonce,...e]);return X(t)}function W(s){return s.index}async function ye(s,e){const t=await $.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),o=await $.decrypt({name:"AES-GCM",iv:s.nonce},t,s.data);return new Uint8Array(o)}function we(s){return s.file_type}class ee{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await q(F(k,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(o=>{const n=`node-${o.id}`;this.nodes.add(n)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const o of t){const n=this.peers.get(o);if(n&&n.connected&&n.conn){const r=Date.now();await new Promise(c=>{const i=`${o}-ping-${Date.now()}`;n.conn.send({type:"ping",requestId:i}),this.pendingRequests.set(i,{resolve:c}),setTimeout(()=>{this.pendingRequests.has(i)&&(this.pendingRequests.delete(i),c())},2e3)});const a=Date.now()-r;e.push(a)}}this.averageLatency=e.length>0?e.reduce((o,n)=>o+n,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const o=indexedDB.open("dcrypt_db",3);o.onupgradeneeded=()=>{const n=o.result;n.objectStoreNames.contains("store")||n.createObjectStore("store",{keyPath:"id"}),n.objectStoreNames.contains("transactions")||n.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),n.objectStoreNames.contains("offlineQueue")||n.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),n.objectStoreNames.contains("chunkCache")||n.createObjectStore("chunkCache",{keyPath:"id"})},o.onsuccess=()=>{this.db=o.result,this.loadIdentity(),this.loadOfflineQueue(),this.loadTransactions(),console.log("IndexedDB initialized successfully"),e()},o.onerror=n=>{console.error("Failed to initialize IndexedDB:",n.target.error),t(new Error(`Failed to initialize IndexedDB: ${n.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{const e=new TextDecoder().decode(this.keypair);return this.peerId=this.isNode?`node-${e}`:e,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new V(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),new Promise((t,o)=>{this.peer.on("open",n=>{console.log(`PeerJS connection opened with ID: ${n}`),this.activeNodes.add(this.peerId),this.peer.on("connection",r=>{this.handleConnection(r)}),this.peer.on("error",r=>{var a;if(console.error("PeerJS error:",r.type,r.message),r.type==="peer-unavailable"){const c=(a=r.message.match(/Peer (.+) is unavailable/))==null?void 0:a[1];c&&this.handlePeerDisconnect(c)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),t()}),this.peer.on("error",n=>{console.error("Failed to initialize PeerJS:",n),o(n)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,o)=>{!t.connected&&this.connectionAttempts.get(o)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${o}`),this.peers.delete(o),this.connectionAttempts.delete(o),this.activeNodes.delete(o))})}connectToPeer(e){var n;if((n=this.peers.get(e))!=null&&n.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const o=this.peer.connect(e,{reliable:!0});o.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:o}),this.activeNodes.add(e),this.connectionAttempts.delete(e),o.send({type:"handshake",peerId:this.peerId})}),o.on("data",r=>{this.handlePeerData(r,e)}),o.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),o.on("error",r=>{console.warn(`Connection error with peer ${e}: ${r.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",o=>{this.handlePeerData(o,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",o=>{console.error(`Connection error with peer ${t}:`,o),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const o=this.peers.get(t);o&&o.connected&&o.conn&&o.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const n=this.pendingRequests.get(e.requestId);n&&(n.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,o){try{await this.dbPut("chunkCache",{id:e,value:t});let n=this.chunkToPeerMap.get(e)||new Set;n.add(this.peerId),this.chunkToPeerMap.set(e,n),console.log(`Stored chunk ${e} from peer ${o}`)}catch(n){console.error(`Failed to store chunk ${e} from peer ${o}:`,n)}}async publishChunk(e,t,o,n){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let r=this.chunkToPeerMap.get(e)||new Set;if(r.add(this.peerId),this.chunkToPeerMap.set(e,r),this.activeNodes.size>0){const a=Array.from(this.activeNodes).filter(i=>i.startsWith("node-"));if(a.length>0){const i=o%a.length,d=a[i],u=this.peers.get(d);u&&u.connected&&u.conn&&(u.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(d),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to node ${d}`))}const c=Array.from(this.activeNodes).filter(i=>!i.startsWith("node-")&&i!==this.peerId);if(c.length>0){const i=c[Math.floor(Math.random()*c.length)],d=this.peers.get(i);d&&d.connected&&d.conn&&(d.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(i),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to random peer ${i}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:o,totalChunks:n});this.broadcastChunk(e)}catch(r){throw console.error("publishChunk failed:",r),r}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,o){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const n=Array.isArray(e.tags)?e.tags.map(g=>typeof g!="string"?(console.warn(`Invalid tag: ${g}, converting to string`),String(g)):g).filter(g=>g.trim()!==""):[];console.log("Processed tags:",n);const r=!!e.isPremium,a=r?e.priceUsd||30:0,c=new Uint8Array(t),i=e.content_type||"",d=this.keypair instanceof Uint8Array?this.keypair:new Uint8Array(this.keypair),p=pe(c,i,n,r,a,d,o||"text/plain"),w=fe(p),f=await X(w),b=this.uint8ArrayToHex(f),m=Array.from(this.activeNodes).filter(g=>g.startsWith("node-")),y=m.length>0?m.length:1,x=await ge(p,Array.from(this.keypair),y),B=[];for(let g=0;g<x.length;g++){const O=x[g],M=await me(O),ne=this.uint8ArrayToHex(M);B.push(ne)}const P={...e,chunk_count:x.length,isPremium:r,priceUsd:r?a:0},v={metadata:P,chunks:B};this.knownObjects.set(b,v),await this.dbPut("store",{id:b,value:JSON.stringify(v)});for(let g=0;g<x.length;g++){const O=x[g],M=B[g];await this.publishChunk(M,O,g,x.length)}return this.activeNodes.size>0?this.broadcastIP(b,P,B):await this.queueOfflineOperation({type:"publishIP",ipHash:b,metadata:P,chunkHashes:B}),b}catch(n){throw console.error("publishIP failed:",n),n}}broadcastIP(e,t,o){const n={type:"ip",ipHash:e,metadata:t,chunkHashes:o,peerId:this.peerId};this.broadcast(n),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const o=[];for(const d of t.chunks){const u=await this.dbGet("chunkCache",d);if(u&&u.value){o.push({chunk:u.value,hash:d});continue}const p=this.chunkToPeerMap.get(d);if(!p||p.size===0)throw new Error(`No peers found with chunk ${d}`);const w=Array.from(p).filter(y=>y.startsWith("node-")),f=Array.from(p).filter(y=>!y.startsWith("node-"));let b=!1,m=null;for(const y of[...w,...f])if(this.activeNodes.has(y))try{const x=await this.fetchChunkFromPeer(y,d);await this.dbPut("chunkCache",{id:d,value:x}),o.push({chunk:x,hash:d}),b=!0;break}catch(x){m=x,console.error(`Failed to fetch chunk ${d} from peer ${y}:`,x);continue}if(!b)throw m||new Error(`No available peer for chunk ${d}`)}const n=o.sort((d,u)=>{const p=W(d.chunk),w=W(u.chunk);return p-w}),r=[];for(const{chunk:d}of n){const u=await ye(d,Array.from(this.keypair));r.push(u)}const a=new Uint8Array(r.reduce((d,u)=>d+u.length,0));let c=0;for(const d of r)a.set(d,c),c+=d.length;const i=we(n[0].chunk);return{data:a,fileType:i}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-${t}-${Date.now()}`,r={type:"chunkRequest",requestId:n,chunkHash:t,peerId:this.peerId};return o.conn.send(r),new Promise((a,c)=>{this.pendingRequests.set(n,{resolve:a,reject:c,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),c(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:o,chunkHash:n}=e;this.dbGet("chunkCache",n).then(r=>{if(r&&r.value){const a={type:"chunkResponse",requestId:o,chunkHash:n,chunkData:r.value,peerId:this.peerId},c=this.peers.get(t);c&&c.connected&&c.conn&&(c.conn.send(a),console.log(`Sent chunk ${n} to peer ${t}`))}else console.warn(`Chunk ${n} not found for peer ${t}`)}).catch(r=>{console.error(`Failed to retrieve chunk ${n} for peer ${t}:`,r)})}handleChunkResponse(e){const{requestId:t,chunkHash:o,chunkData:n}=e,r=this.pendingRequests.get(t);r&&(r.hash===o?r.resolve(n):r.reject(new Error(`Received chunk hash ${o} does not match requested hash ${r.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(n=>n.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const o=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${o} per node)`);for(const n of t){const r=this.hexToUint8Array(n.replace("node-","")),c=await this.getBalance(r)+o;await this.putBalance(r,c),console.log(`Awarded ${o} to node ${n}. New balance: ${c}`);const i=this.peers.get(n);i&&i.connected&&i.conn&&i.conn.send({type:"commission",amount:o,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+this.uint8ArrayToHex(e));return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+this.uint8ArrayToHex(e),value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const o=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(n=>{o.clear().onsuccess=n});for(const n of e)try{switch(n.type){case"publishChunk":await this.publishChunk(n.chunkHash,n.chunkData,n.chunkIndex,n.totalChunks);break;case"publishIP":await this.broadcastIP(n.ipHash,n.metadata,n.chunkHashes);break;default:console.warn("Unknown offline operation type:",n.type)}}catch(r){console.error(`Failed to process offline operation ${n.type}:`,r),this.offlineQueue.push(n),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:n})}}loadIdentity(){this.db&&this.dbGet("store","dcrypt_identity").then(e=>{e&&e.value&&typeof e.value=="string"&&(this.keypair=this.hexToUint8Array(e.value),console.log("Loaded identity from IndexedDB"))}).catch(e=>{console.error("Failed to load identity:",e)})}loadOfflineQueue(){this.db&&this.dbGetAll("offlineQueue").then(e=>{this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}).catch(e=>{console.error("Failed to load offline queue:",e)})}loadTransactions(){this.db&&this.dbGetAll("transactions").then(e=>{console.log("Loaded transactions:",e)}).catch(e=>{console.error("Failed to load transactions:",e)})}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).put(t);c.onsuccess=()=>o(),c.onerror=i=>n(new Error(`DB put failed: ${i.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).add(t);c.onsuccess=()=>o(),c.onerror=i=>n(new Error(`DB add failed: ${i.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const c=this.db.transaction(e,"readonly").objectStore(e).get(t);c.onsuccess=()=>o(c.result),c.onerror=i=>n(new Error(`DB get failed: ${i.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,o)=>{const a=this.db.transaction(e,"readonly").objectStore(e).getAll();a.onsuccess=()=>t(a.result),a.onerror=c=>o(new Error(`DB getAll failed: ${c.target.error.message}`))})}uint8ArrayToHex(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("")}hexToUint8Array(e){if(!e||typeof e!="string")return new Uint8Array(0);const t=e.match(/.{1,2}/g);return t?new Uint8Array(t.map(o=>parseInt(o,16))):new Uint8Array(0)}broadcast(e){this.peers.forEach((t,o)=>{t.connected&&t.conn&&t.conn.send(e)})}}function be(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(s){const e=Math.random()*16|0;return(s==="x"?e:e&3|8).toString(16)})}async function xe(){const s=[];for(let t=0;t<3;t++){const o=`node-test-${be()}`;console.log(`Initializing test peer with ID: ${o}`);const n=new V(o,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),r=new Promise((a,c)=>{n.on("open",()=>{console.log(`Test peer ${o} opened`),s.push({peer:n,peerId:o}),a()}),n.on("error",i=>{console.error(`Test peer ${o} error:`,i),c(i)}),n.on("disconnected",()=>{console.log(`Test peer ${o} disconnected`)})});try{await r}catch(a){console.error(`Failed to initialize test peer ${o}:`,a)}}return s}if(window.location.pathname==="/datasharingApp/node-instructions.html"||window.location.pathname==="/node-instructions.html"){let s;document.addEventListener("DOMContentLoaded",async()=>{Q(!0);try{const e=localStorage.getItem("nodeId");if(localStorage.getItem("role")!=="node"||!e){G("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const n=new TextEncoder().encode(e);s=new ee(n,!0),await s.initDB(),await s.initSwarm(),await s.syncUserData();const a=(await s.dbGetAll("transactions")).filter(i=>i.type==="commission").reduce((i,d)=>i+(d.amount||0),0),c=document.getElementById("nodeEarnings");c&&(c.textContent=`Total Earnings: ${a.toFixed(2)} DCT`)}catch(e){console.error("Error initializing node instructions:",e),G(`Initialization failed: ${e.message}`)}finally{Q(!1)}})}function G(s){const e=document.getElementById("toast");e&&(e.textContent=s,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function Q(s){const e=document.getElementById("loading");e&&(e.style.display=s?"flex":"none")}self.addEventListener("install",s=>{s.waitUntil(caches.open("dcrypt-v1").then(e=>e.addAll(["/","/index.html","/assets/index.js","/wasm/dcrypt_wasm.js","/wasm/dcrypt_wasm_bg.wasm"])))});self.addEventListener("fetch",s=>{s.respondWith(caches.match(s.request).then(e=>e||fetch(s.request).catch(()=>caches.match("/index.html"))))});self.addEventListener("message",async s=>{if(s.data.type==="cache_chunk"){const{chunkHash:e,data:t}=s.data,o=await caches.open("dcrypt-chunks"),n=new Blob([t],{type:"application/octet-stream"}),r=new Response(n,{headers:{"Content-Type":"application/octet-stream"}});await o.put(`/chunks/${e}`,r),console.log(`Service Worker: Cached chunk ${e}`)}});self.addEventListener("fetch",s=>{const e=new URL(s.request.url);e.pathname.startsWith("/chunks/")?s.respondWith(caches.open("dcrypt-chunks").then(t=>t.match(s.request).then(o=>o?(console.log(`Service Worker: Serving chunk ${e.pathname} from cache`),o):fetch(s.request).catch(()=>new Response("Chunk not available offline",{status:503}))))):s.respondWith(caches.match(s.request).then(t=>t||fetch(s.request).catch(()=>caches.match("/index.html"))))});let l=null,C=!1,E=0,R=[];window.handleCredentialResponse=async s=>{I(!0);try{const e=s.credential,o=(await re(D,ie.credential(e))).user;console.log("Google Sign-In successful, user UID:",o.uid),h("Signed in successfully!");const n=localStorage.getItem("pendingRole")||"user";if(localStorage.removeItem("pendingRole"),n==="user"){const r=S(k,"users",o.uid);await T(r,{role:"user",createdAt:Date.now(),balance:0},{merge:!0}),window.location.href="/datasharingApp/index.html"}else{const r=Ie();localStorage.setItem("nodeId",r),localStorage.setItem("role","node");const a=S(k,"nodes",r);await T(a,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),window.location.href="/datasharingApp/node-instructions.html"}await _(o.uid)}catch(e){console.error("Google Sign-In failed:",e),h(`Sign-in failed: ${e.message}`,!0)}finally{I(!1)}};document.addEventListener("DOMContentLoaded",()=>{var b;const s=localStorage.getItem("role"),e=localStorage.getItem("nodeId");if(window.location.pathname.includes("index.html")&&s==="node"&&e){console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html";return}const t=document.getElementById("signupButton"),o=document.getElementById("loginButton"),n=document.getElementById("logoutButton"),r=document.getElementById("userBalance"),a=document.getElementById("publishButton"),c=document.getElementById("searchButton"),i=document.getElementById("depositButton"),d=document.getElementById("withdrawButton"),u=document.getElementById("toggleHistoryButton"),p=document.getElementById("transactionHistory"),w=(b=document.getElementById("publishedItems"))==null?void 0:b.querySelector("tbody"),f=document.getElementById("buyHashButton");if(window.location.pathname.includes("index.html")){if(!t||!o||!n||!r||!a||!c||!i||!d||!u||!p||!w||!f){console.error("Required DOM elements not found:",{signupButton:!!t,loginButton:!!o,logoutButton:!!n,userBalanceElement:!!r,publishButton:!!a,searchButton:!!c,depositButton:!!i,withdrawButton:!!d,toggleHistoryButton:!!u,transactionHistory:!!p,publishedItemsTableBody:!!w,buyHashButton:!!f});return}s==="node"&&e&&(C=!0,console.log("Node detected, but should have been redirected already.")),ae(D,async m=>{if(m)console.log("User is signed in:",m.uid),t.classList.add("hidden"),o.classList.add("hidden"),n.classList.remove("hidden"),a.disabled=!1,c.disabled=!1,i.disabled=!1,d.disabled=!1,u.disabled=!1,f.disabled=!1,await _(m.uid);else{console.log("No user is signed in. Checking IndexedDB for keypair...");const y=indexedDB.open("dcrypt_db",3);y.onsuccess=async()=>{const v=y.result.transaction("store","readonly").objectStore("store").get("dcrypt_identity");v.onsuccess=async()=>{v.result&&v.result.value?(new TextEncoder().encode(v.result.value),console.log("Found keypair in IndexedDB, initializing app..."),t.classList.add("hidden"),o.classList.add("hidden"),n.classList.remove("hidden"),a.disabled=!1,c.disabled=!1,i.disabled=!1,d.disabled=!1,u.disabled=!1,f.disabled=!1,await _(v.result.value)):(console.log("No keypair found in IndexedDB."),t.classList.remove("hidden"),o.classList.remove("hidden"),n.classList.add("hidden"),a.disabled=!0,c.disabled=!0,i.disabled=!0,d.disabled=!0,u.disabled=!0,f.disabled=!0,A())},v.onerror=()=>{console.error("Failed to load keypair from IndexedDB"),t.classList.remove("hidden"),o.classList.remove("hidden"),n.classList.add("hidden"),a.disabled=!0,c.disabled=!0,i.disabled=!0,d.disabled=!0,u.disabled=!0,f.disabled=!0,A()}},y.onerror=()=>{console.error("Failed to open IndexedDB"),t.classList.remove("hidden"),o.classList.remove("hidden"),n.classList.add("hidden"),a.disabled=!0,c.disabled=!0,i.disabled=!0,d.disabled=!0,u.disabled=!0,f.disabled=!0,A()}}}),o.addEventListener("click",Be),n.addEventListener("click",K)}window.logout=K,window.publishSnippet=Se,window.buySnippet=te,window.buySnippetByHash=De,window.searchSnippets=$e,window.deposit=Ce,window.withdraw=Ae,window.toggleTransactionHistory=Te,window.flagSnippet=Ee,window.handleSignup=ke});function Ie(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(s){const e=Math.random()*16|0;return(s==="x"?e:e&3|8).toString(16)})}async function ke(){var t;const s=document.querySelectorAll('input[name="role"]');if(!s){h("Role selection not found.",!0);return}const e=(t=Array.from(s).find(o=>o.checked))==null?void 0:t.value;if(!e){h("Please select a role.",!0);return}localStorage.setItem("pendingRole",e),google.accounts.id.prompt()}async function _(s){console.log("Initializing app..."),I(!0);try{let e;const t=indexedDB.open("dcrypt_db",3);await new Promise((o,n)=>{t.onsuccess=()=>{const r=t.result,i=r.transaction("store","readonly").objectStore("store").get("dcrypt_identity");i.onsuccess=()=>{if(i.result&&i.result.value)e=new TextEncoder().encode(i.result.value),console.log("Loaded keypair from IndexedDB:",i.result.value);else if(s)e=new TextEncoder().encode(s),r.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:s});else{n(new Error("No user ID or stored keypair found"));return}o()},i.onerror=()=>n(new Error("Failed to load keypair from IndexedDB"))},t.onerror=()=>n(new Error("Failed to open IndexedDB"))}),C||(C=await ve(s)),console.log(`User is ${C?"":"not "}a node.`),R.length===0&&(console.log("Creating test peers..."),R=await xe(),console.log("Test peers created:",R.map(o=>o.peerId))),console.log("Initializing DHT..."),l=new ee(e,C),window.dht=l,await l.initDB(),console.log("IndexedDB initialized."),await l.initSwarm(),console.log("DHT initialized."),await l.syncUserData(),console.log("User data synced."),z(),console.log("Live feed updated."),N(),U()}catch(e){console.error("Error initializing application:",e),h(`Initialization failed: ${e.message}`,!0),l=null,window.dht=null,E=0,A()}finally{I(!1),Le()}}async function ve(s){try{const e=S(k,"nodes",s);return(await Y(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Be(){google.accounts.id.prompt()}async function K(){try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),h("Node signed out successfully!")):(await ce(D),h("Signed out successfully!"));const s=indexedDB.open("dcrypt_db",3);s.onsuccess=()=>{s.result.transaction("store","readwrite").objectStore("store").delete("dcrypt_identity")},l=null,window.dht=null,R=[],E=0,A()}catch(s){console.error("Sign-out failed:",s),h(`Sign-out failed: ${s.message}`,!0)}}function L(){return!!D.currentUser||localStorage.getItem("role")==="node"}async function Se(s,e,t,o,n){var r;if(!L()){h("Please sign in to publish.");return}I(!0);try{if(!l)throw new Error("DHT not initialized");if(!s)throw new Error("Title is required");let a=o||"",c="text/plain";if(n&&n.files&&n.files.length>0){const m=n.files[0];c=m.type||"application/octet-stream";const y=new FileReader;a=await new Promise((x,B)=>{y.onload=P=>x(new Uint8Array(P.target.result)),y.onerror=P=>B(new Error("Failed to read file")),y.readAsArrayBuffer(m)})}else a=new TextEncoder().encode(a);const i=document.getElementById("isPremium").checked,d=document.getElementById("priceInput"),u=i&&d&&parseFloat(d.value)||0,p={content_type:s,description:e||"",tags:t?t.split(",").map(m=>m.trim()):[],isPremium:i,priceUsd:u},w=await l.publishIP(p,a,c),f=((r=D.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId"),b=S(k,"snippets",w);await T(b,{ipHash:w,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:f},{merge:!0}),h("Snippet published successfully!"),z(),U(),N(),await H()}catch(a){console.error("publishSnippet failed:",a),h(`Publish failed: ${a.message}`,!0)}finally{I(!1)}}async function te(s){if(!L())return h("Please sign in to buy."),null;I(!0);try{if(!l)throw new Error("DHT not initialized");if(!s)throw new Error("Hash is required");const e=l.knownObjects.get(s);if(!e)throw new Error("Snippet not found");const n=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(n>0){const i=await l.getBalance(l.keypair);if(i<n)throw new Error("Insufficient balance");const d=n*.05;await l.distributeCommission(d),await l.putBalance(l.keypair,i-n),await l.dbAdd("transactions",{type:"buy",amount:n,timestamp:Date.now()})}else console.log("This snippet is free!"),await l.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:r,fileType:a}=await l.requestData(s);h("Snippet retrieved successfully!"),U(),N(),await H();const c=prompt("Please rate this snippet (1-5 stars):","5");if(c!==null){const i=parseInt(c);i>=1&&i<=5?(await Pe(s,i),h(`Rated ${i} stars!`),z()):h("Invalid rating. Please enter a number between 1 and 5.",!0)}return Ue(r,a,e.metadata.content_type),{data:r,fileType:a}}catch(e){return console.error("buySnippet failed:",e),h(`Purchase failed: ${e.message}`,!0),null}finally{I(!1)}}async function De(s){const e=s||document.getElementById("buyHashInput").value.trim();if(!e){h("Please enter a valid hash.",!0);return}await te(e)&&h("Snippet purchased and displayed below!")}async function Pe(s,e){var o;const t=((o=D.currentUser)==null?void 0:o.uid)||localStorage.getItem("nodeId");if(t)try{const n=S(k,"snippets",s,"ratings",t);await T(n,{rating:e,timestamp:Date.now()});const a=(await q(F(k,"snippets",s,"ratings"))).docs.map(d=>d.data().rating),c=a.length>0?a.reduce((d,u)=>d+u,0)/a.length:0,i=S(k,"snippets",s);await j(i,{averageRating:c.toFixed(1)})}catch(n){console.error("Failed to submit rating:",n),h(`Failed to submit rating: ${n.message}`,!0)}}async function Ee(s){var t;if(!(((t=D.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){h("Please sign in to flag content.");return}try{const o=S(k,"snippets",s);await j(o,{flagCount:le(1)}),((await Y(o)).data().flagCount||0)>=3?(await j(o,{reviewStatus:"under_review"}),h("Snippet has been flagged and is under review."),z()):h("Snippet flagged. It will be reviewed if flagged by more users.")}catch(o){console.error("Failed to flag snippet:",o),h(`Failed to flag snippet: ${o.message}`,!0)}}async function $e(s){if(!L()){h("Please sign in to search.");return}I(!0);try{if(!l)throw new Error("DHT not initialized");if(!s)throw new Error("Search query is required");console.log("Starting search with query:",s),console.log("dht.knownObjects size:",l.knownObjects.size),console.log("dht.knownObjects:",Array.from(l.knownObjects.entries()));const e=document.getElementById("publishedItems").querySelector("tbody");e.innerHTML="";const t=await q(F(k,"snippets")),o={};t.forEach(r=>{o[r.id]=r.data()}),console.log("Snippets from Firestore:",o);let n=!1;l.knownObjects.forEach((r,a)=>{const{content_type:c,description:i,tags:d}=r.metadata,u=s.toLowerCase(),p=o[a]||{averageRating:0,reviewStatus:"active"};if(console.log(`Checking snippet ${a}:`,{content_type:c,description:i,tags:d,reviewStatus:p.reviewStatus}),p.reviewStatus==="active"&&(c.toLowerCase().includes(u)||i&&i.toLowerCase().includes(u)||d&&d.some(w=>w.toLowerCase().includes(u)))){n=!0;const f=(r.metadata.isPremium||!1)&&r.metadata.priceUsd||0,b=f>0?`${f} DCT`:"Free",m=document.createElement("tr");m.innerHTML=`
          <td class="py-2 px-4">${c}</td>
          <td class="py-2 px-4">${i||"No description"}</td>
          <td class="py-2 px-4">${d.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${p.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${a}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${b})</button>
            <button onclick="window.flagSnippet('${a}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(m),console.log(`Found matching snippet ${a}`)}}),h(n?"Search completed!":"No snippets found matching your search.")}catch(e){console.error("searchSnippets failed:",e),h(`Search failed: ${e.message}`,!0)}finally{I(!1)}}async function Ce(s){if(!L()){h("Please sign in to deposit.");return}I(!0);try{if(!l)throw new Error("DHT not initialized");if(!s||s<=0)throw new Error("Invalid deposit amount");const t=await l.getBalance(l.keypair)+s;await l.putBalance(l.keypair,t),await l.dbAdd("transactions",{type:"deposit",amount:s,timestamp:Date.now()}),h(`Deposited ${s} DCT successfully!`),U(),N(),await H()}catch(e){console.error("deposit failed:",e),h(`Deposit failed: ${e.message}`,!0)}finally{I(!1)}}async function Ae(s){if(!L()){h("Please sign in to withdraw.");return}I(!0);try{if(!l)throw new Error("DHT not initialized");if(!s||s<=0)throw new Error("Invalid withdrawal amount");const e=await l.getBalance(l.keypair);if(e<s)throw new Error("Insufficient balance");await l.putBalance(l.keypair,e-s),await l.dbAdd("transactions",{type:"withdraw",amount:s,timestamp:Date.now()}),h(`Withdrew ${s} DCT successfully!`),U(),N(),await H()}catch(e){console.error("withdraw failed:",e),h(`Withdrawal failed: ${e.message}`,!0)}finally{I(!1)}}function Te(){const s=document.getElementById("transactionHistory");s.style.display==="none"?s.style.display="block":s.style.display="none"}async function H(){var e;const s=((e=D.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(s)try{const t=S(k,"users",s),o=l?await l.getBalance(l.keypair):0;await T(t,{balance:o,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function z(){var e;const s=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");s&&(s.innerHTML="",q(F(k,"snippets")).then(t=>{const o={};t.forEach(n=>{o[n.id]=n.data()}),l&&l.knownObjects.forEach((n,r)=>{const a=o[r]||{averageRating:0,reviewStatus:"active"};if(a.reviewStatus!=="active")return;const i=(n.metadata.isPremium||!1)&&n.metadata.priceUsd||0,d=i>0?`${i} DCT`:"Free",u=document.createElement("tr");u.innerHTML=`
          <td class="py-2 px-4">${n.metadata.content_type}</td>
          <td class="py-2 px-4">${n.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${n.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${a.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${d})</button>
            <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,s.appendChild(u)})}).catch(t=>{console.error("Failed to update live feed:",t),h("Failed to load live feed.",!0)}))}function U(){const s=document.getElementById("transactionList");if(s){if(!l){s.innerHTML="Not initialized.";return}l.dbGetAll("transactions").then(e=>{if(e.length===0){s.innerHTML="No transactions yet.";return}s.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}).catch(e=>{console.error("Failed to update transaction history:",e),s.innerHTML="Failed to load transactions."})}}function N(){const s=document.getElementById("userBalance");if(s){if(!l){s.textContent="Balance: 0 DCT",E=0;return}l.getBalance(l.keypair).then(e=>{E=e||0,s.textContent=`Balance: ${E} DCT`}).catch(e=>{console.error("Failed to update balance:",e),s.textContent="Balance: 0 DCT",E=0})}}function A(){var o;const s=(o=document.getElementById("publishedItems"))==null?void 0:o.querySelector("tbody"),e=document.getElementById("transactionList"),t=document.getElementById("userBalance");s&&(s.innerHTML=""),e&&(e.innerHTML="No transactions yet."),t&&(t.textContent="Balance: 0 DCT"),E=0}function h(s,e=!1){const t=document.getElementById("toast");t&&(t.textContent=s,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function I(s){const e=document.getElementById("loading");e&&(e.style.display=s?"flex":"none")}function Le(){const s=document.getElementById("isPremium"),e=document.getElementById("priceInput");s&&e&&s.addEventListener("change",t=>{console.log("Premium toggle:",t.target.checked),e.classList.toggle("hidden",!t.target.checked),t.target.checked||(e.value="")})}function Ue(s,e,t){const o=document.getElementById("snippetDisplay");if(!o)return;o.innerHTML="";const n=document.createElement("div");n.className="p-4 bg-gray-800 rounded-lg mt-4";const r=document.createElement("h3");if(r.className="text-lg font-semibold mb-2",r.textContent=t||"Snippet Content",n.appendChild(r),e.startsWith("text")){const a=new TextDecoder().decode(s),c=document.createElement("pre");c.className="text-sm text-gray-300 whitespace-pre-wrap",c.textContent=a,n.appendChild(c)}else if(e.startsWith("image")){const a=new Blob([s],{type:e}),c=URL.createObjectURL(a),i=document.createElement("img");i.src=c,i.className="max-w-full h-auto rounded",i.onload=()=>URL.revokeObjectURL(c),n.appendChild(i)}else{const a=new Blob([s],{type:e}),c=URL.createObjectURL(a),i=document.createElement("a");i.href=c,i.download=t||"downloaded_file",i.className="text-blue-400 hover:underline",i.textContent="Download File",i.onclick=()=>setTimeout(()=>URL.revokeObjectURL(c),1e3),n.appendChild(i)}o.appendChild(n)}
