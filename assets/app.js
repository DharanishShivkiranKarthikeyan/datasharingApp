import{getAuth as ue,GoogleAuthProvider as Q,signInWithPopup as he,onAuthStateChanged as pe,signInWithRedirect as ne,signOut as fe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as ge,getDocs as z,collection as j,doc as D,setDoc as A,updateDoc as G,increment as me,getDoc as oe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import se from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as ye}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();const we="modulepreload",be=function(n){return"/datasharingApp/"+n},K={},xe=function(e,t,s){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const c=document.querySelector("meta[property=csp-nonce]"),a=(c==null?void 0:c.nonce)||(c==null?void 0:c.getAttribute("nonce"));o=Promise.allSettled(t.map(i=>{if(i=be(i),i in K)return;K[i]=!0;const l=i.endsWith(".css"),u=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${u}`))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":we,l||(p.as="script"),p.crossOrigin="",p.href=i,a&&p.setAttribute("nonce",a),document.head.appendChild(p),l)return new Promise((y,b)=>{p.addEventListener("load",y),p.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${i}`)))})}))}function r(c){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=c,window.dispatchEvent(a),!a.defaultPrevented)throw c}return o.then(c=>{for(const a of c||[])a.status==="rejected"&&r(a.reason);return e().catch(r)})},Ie={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},re=ye(Ie),ie=ue(re),O=ge(re),ke=Object.freeze(Object.defineProperty({__proto__:null,auth:ie,db:O},Symbol.toStringTag,{value:"Module"}));var te;const C=(te=globalThis.crypto)==null?void 0:te.subtle;if(!C)throw new Error("Web Crypto API is not available in this environment");function ve(){const n=new Uint8Array(12);for(let e=0;e<12;e++)n[e]=Math.floor(Math.random()*256);return n}function Se(n,e,t,s,o,r,c){return{content:new Uint8Array(n),content_type:e,tags:t||[],is_premium:s,price_usd:o,creator_id:new Uint8Array(r),file_type:c}}function Be(n){return n.content}async function ae(n){const e=await C.digest("SHA-256",n);return new Uint8Array(e)}async function Pe(n,e,t){const s=n.content,o=Math.ceil(s.length/t),r=[],c=await C.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["encrypt"]);for(let a=0;a<t;a++){const i=a*o,l=Math.min(i+o,s.length),u=s.slice(i,l),p=ve(),y=await C.encrypt({name:"AES-GCM",iv:p},c,u),b={data:new Uint8Array(y),nonce:p,index:a,file_type:n.file_type};r.push(b)}return r}function Ee(n){const e=new Uint8Array(new Int32Array([n.index]).buffer),t=new Uint8Array([...n.data,...n.nonce,...e]);return ae(t)}function J(n){return n.index}async function De(n,e){const t=await C.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),s=await C.decrypt({name:"AES-GCM",iv:n.nonce},t,n.data);return new Uint8Array(s)}function $e(n){return n.file_type}class ce{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await z(j(O,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(s=>{const o=`node-${s.id}`;this.nodes.add(o)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const s of t){const o=this.peers.get(s);if(o&&o.connected&&o.conn){const r=Date.now();await new Promise(a=>{const i=`${s}-ping-${Date.now()}`;o.conn.send({type:"ping",requestId:i}),this.pendingRequests.set(i,{resolve:a}),setTimeout(()=>{this.pendingRequests.has(i)&&(this.pendingRequests.delete(i),a())},2e3)});const c=Date.now()-r;e.push(c)}}this.averageLatency=e.length>0?e.reduce((s,o)=>s+o,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const s=indexedDB.open("dcrypt_db",3);s.onupgradeneeded=()=>{const o=s.result;o.objectStoreNames.contains("store")||o.createObjectStore("store",{keyPath:"id"}),o.objectStoreNames.contains("transactions")||o.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),o.objectStoreNames.contains("offlineQueue")||o.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),o.objectStoreNames.contains("chunkCache")||o.createObjectStore("chunkCache",{keyPath:"id"})},s.onsuccess=()=>{this.db=s.result,this.loadIdentity(),this.loadOfflineQueue(),this.loadTransactions(),console.log("IndexedDB initialized successfully"),e()},s.onerror=o=>{console.error("Failed to initialize IndexedDB:",o.target.error),t(new Error(`Failed to initialize IndexedDB: ${o.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{const e=new TextDecoder().decode(this.keypair);return this.peerId=this.isNode?`node-${e}`:e,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new se(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),new Promise((t,s)=>{this.peer.on("open",o=>{console.log(`PeerJS connection opened with ID: ${o}`),this.activeNodes.add(this.peerId),this.peer.on("connection",r=>{this.handleConnection(r)}),this.peer.on("error",r=>{var c;if(console.error("PeerJS error:",r.type,r.message),r.type==="peer-unavailable"){const a=(c=r.message.match(/Peer (.+) is unavailable/))==null?void 0:c[1];a&&this.handlePeerDisconnect(a)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),t()}),this.peer.on("error",o=>{console.error("Failed to initialize PeerJS:",o),s(o)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,s)=>{!t.connected&&this.connectionAttempts.get(s)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${s}`),this.peers.delete(s),this.connectionAttempts.delete(s),this.activeNodes.delete(s))})}connectToPeer(e){var o;if((o=this.peers.get(e))!=null&&o.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const s=this.peer.connect(e,{reliable:!0});s.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:s}),this.activeNodes.add(e),this.connectionAttempts.delete(e),s.send({type:"handshake",peerId:this.peerId})}),s.on("data",r=>{this.handlePeerData(r,e)}),s.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),s.on("error",r=>{console.warn(`Connection error with peer ${e}: ${r.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",s=>{this.handlePeerData(s,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",s=>{console.error(`Connection error with peer ${t}:`,s),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const s=this.peers.get(t);s&&s.connected&&s.conn&&s.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const o=this.pendingRequests.get(e.requestId);o&&(o.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,s){try{await this.dbPut("chunkCache",{id:e,value:t});let o=this.chunkToPeerMap.get(e)||new Set;o.add(this.peerId),this.chunkToPeerMap.set(e,o),console.log(`Stored chunk ${e} from peer ${s}`)}catch(o){console.error(`Failed to store chunk ${e} from peer ${s}:`,o)}}async publishChunk(e,t,s,o){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let r=this.chunkToPeerMap.get(e)||new Set;if(r.add(this.peerId),this.chunkToPeerMap.set(e,r),this.activeNodes.size>0){const c=Array.from(this.activeNodes).filter(i=>i.startsWith("node-"));if(c.length>0){const i=s%c.length,l=c[i],u=this.peers.get(l);u&&u.connected&&u.conn&&(u.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(l),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to node ${l}`))}const a=Array.from(this.activeNodes).filter(i=>!i.startsWith("node-")&&i!==this.peerId);if(a.length>0){const i=a[Math.floor(Math.random()*a.length)],l=this.peers.get(i);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(i),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to random peer ${i}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:s,totalChunks:o});this.broadcastChunk(e)}catch(r){throw console.error("publishChunk failed:",r),r}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,s){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const o=Array.isArray(e.tags)?e.tags.map(g=>typeof g!="string"?(console.warn(`Invalid tag: ${g}, converting to string`),String(g)):g).filter(g=>g.trim()!==""):[];console.log("Processed tags:",o);const r=!!e.isPremium,c=r?e.priceUsd||30:0,a=new Uint8Array(t),i=e.content_type||"",l=this.keypair instanceof Uint8Array?this.keypair:new Uint8Array(this.keypair),p=Se(a,i,o,r,c,l,s||"text/plain"),y=Be(p),b=await ae(y),m=this.uint8ArrayToHex(b),x=Array.from(this.activeNodes).filter(g=>g.startsWith("node-")),w=x.length>0?x.length:1,f=await Pe(p,Array.from(this.keypair),w),I=[];for(let g=0;g<f.length;g++){const E=f[g],_=await Ee(E),de=this.uint8ArrayToHex(_);I.push(de)}const k={...e,chunk_count:f.length,isPremium:r,priceUsd:r?c:0},B={metadata:k,chunks:I};this.knownObjects.set(m,B),await this.dbPut("store",{id:m,value:JSON.stringify(B)});for(let g=0;g<f.length;g++){const E=f[g],_=I[g];await this.publishChunk(_,E,g,f.length)}return this.activeNodes.size>0?this.broadcastIP(m,k,I):await this.queueOfflineOperation({type:"publishIP",ipHash:m,metadata:k,chunkHashes:I}),m}catch(o){throw console.error("publishIP failed:",o),o}}broadcastIP(e,t,s){const o={type:"ip",ipHash:e,metadata:t,chunkHashes:s,peerId:this.peerId};this.broadcast(o),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const s=[];for(const l of t.chunks){const u=await this.dbGet("chunkCache",l);if(u&&u.value){s.push({chunk:u.value,hash:l});continue}const p=this.chunkToPeerMap.get(l);if(!p||p.size===0)throw new Error(`No peers found with chunk ${l}`);const y=Array.from(p).filter(w=>w.startsWith("node-")),b=Array.from(p).filter(w=>!w.startsWith("node-"));let m=!1,x=null;for(const w of[...y,...b])if(this.activeNodes.has(w))try{const f=await this.fetchChunkFromPeer(w,l);await this.dbPut("chunkCache",{id:l,value:f}),s.push({chunk:f,hash:l}),m=!0;break}catch(f){x=f,console.error(`Failed to fetch chunk ${l} from peer ${w}:`,f);continue}if(!m)throw x||new Error(`No available peer for chunk ${l}`)}const o=s.sort((l,u)=>{const p=J(l.chunk),y=J(u.chunk);return p-y}),r=[];for(const{chunk:l}of o){const u=await De(l,Array.from(this.keypair));r.push(u)}const c=new Uint8Array(r.reduce((l,u)=>l+u.length,0));let a=0;for(const l of r)c.set(l,a),a+=l.length;const i=$e(o[0].chunk);return{data:c,fileType:i}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const s=this.peers.get(e);if(!s||!s.connected||!s.conn)throw new Error(`Peer ${e} is not connected`);const o=`${e}-${t}-${Date.now()}`,r={type:"chunkRequest",requestId:o,chunkHash:t,peerId:this.peerId};return s.conn.send(r),new Promise((c,a)=>{this.pendingRequests.set(o,{resolve:c,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),a(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:s,chunkHash:o}=e;this.dbGet("chunkCache",o).then(r=>{if(r&&r.value){const c={type:"chunkResponse",requestId:s,chunkHash:o,chunkData:r.value,peerId:this.peerId},a=this.peers.get(t);a&&a.connected&&a.conn&&(a.conn.send(c),console.log(`Sent chunk ${o} to peer ${t}`))}else console.warn(`Chunk ${o} not found for peer ${t}`)}).catch(r=>{console.error(`Failed to retrieve chunk ${o} for peer ${t}:`,r)})}handleChunkResponse(e){const{requestId:t,chunkHash:s,chunkData:o}=e,r=this.pendingRequests.get(t);r&&(r.hash===s?r.resolve(o):r.reject(new Error(`Received chunk hash ${s} does not match requested hash ${r.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(o=>o.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const s=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${s} per node)`);for(const o of t){const r=this.hexToUint8Array(o.replace("node-","")),a=await this.getBalance(r)+s;await this.putBalance(r,a),console.log(`Awarded ${s} to node ${o}. New balance: ${a}`);const i=this.peers.get(o);i&&i.connected&&i.conn&&i.conn.send({type:"commission",amount:s,newBalance:a,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+this.uint8ArrayToHex(e));return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+this.uint8ArrayToHex(e),value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const s=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(o=>{s.clear().onsuccess=o});for(const o of e)try{switch(o.type){case"publishChunk":await this.publishChunk(o.chunkHash,o.chunkData,o.chunkIndex,o.totalChunks);break;case"publishIP":await this.broadcastIP(o.ipHash,o.metadata,o.chunkHashes);break;default:console.warn("Unknown offline operation type:",o.type)}}catch(r){console.error(`Failed to process offline operation ${o.type}:`,r),this.offlineQueue.push(o),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:o})}}loadIdentity(){this.db&&this.dbGet("store","dcrypt_identity").then(e=>{e&&e.value&&typeof e.value=="string"&&(this.keypair=this.hexToUint8Array(e.value),console.log("Loaded identity from IndexedDB"))}).catch(e=>{console.error("Failed to load identity:",e)})}loadOfflineQueue(){this.db&&this.dbGetAll("offlineQueue").then(e=>{this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}).catch(e=>{console.error("Failed to load offline queue:",e)})}loadTransactions(){this.db&&this.dbGetAll("transactions").then(e=>{console.log("Loaded transactions:",e)}).catch(e=>{console.error("Failed to load transactions:",e)})}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).put(t);a.onsuccess=()=>s(),a.onerror=i=>o(new Error(`DB put failed: ${i.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).add(t);a.onsuccess=()=>s(),a.onerror=i=>o(new Error(`DB add failed: ${i.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const a=this.db.transaction(e,"readonly").objectStore(e).get(t);a.onsuccess=()=>s(a.result),a.onerror=i=>o(new Error(`DB get failed: ${i.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,s)=>{const c=this.db.transaction(e,"readonly").objectStore(e).getAll();c.onsuccess=()=>t(c.result),c.onerror=a=>s(new Error(`DB getAll failed: ${a.target.error.message}`))})}uint8ArrayToHex(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("")}hexToUint8Array(e){if(!e||typeof e!="string")return new Uint8Array(0);const t=e.match(/.{1,2}/g);return t?new Uint8Array(t.map(s=>parseInt(s,16))):new Uint8Array(0)}broadcast(e){this.peers.forEach((t,s)=>{t.connected&&t.conn&&t.conn.send(e)})}}function Ae(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}async function Ce(){const n=[];for(let t=0;t<3;t++){const s=`node-test-${Ae()}`;console.log(`Initializing test peer with ID: ${s}`);const o=new se(s,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),r=new Promise((c,a)=>{o.on("open",()=>{console.log(`Test peer ${s} opened`),n.push({peer:o,peerId:s}),c()}),o.on("error",i=>{console.error(`Test peer ${s} error:`,i),a(i)}),o.on("disconnected",()=>{console.log(`Test peer ${s} disconnected`)})});try{await r}catch(c){console.error(`Failed to initialize test peer ${s}:`,c)}}return n}(window.location.pathname==="/datasharingApp/signup.html"||window.location.pathname==="/signup.html")&&document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("signupButton");if(!n){console.error("Sign-up button not found");return}n.addEventListener("click",Te)});async function Te(){Y(!0);try{const n=new Q,t=(await he(ie,n)).user;if(console.log("Signed up user UID:",t.uid),document.querySelector('input[name="role"]:checked').value==="node"){const r=D(O,"nodes",t.uid);await A(r,{uid:t.uid,createdAt:Date.now(),status:"active"}),console.log("User registered as a node"),W("Signed up as a node successfully!"),window.location.href="/datasharingApp/node-instructions.html"}else{const r=D(O,"users",t.uid);await A(r,{uid:t.uid,createdAt:Date.now(),balance:0},{merge:!0}),console.log("User registered as a regular user"),W("Signed up successfully!"),window.location.href="/datasharingApp/index.html"}}catch(n){console.error("Sign-up failed:",n),W(`Sign-up failed: ${n.message}`)}finally{Y(!1)}}function W(n){const e=document.getElementById("toast");e&&(e.textContent=n,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function Y(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}if(window.location.pathname==="/datasharingApp/node-instructions.html"||window.location.pathname==="/node-instructions.html"){let n;document.addEventListener("DOMContentLoaded",async()=>{Z(!0);try{const e=localStorage.getItem("nodeId");if(localStorage.getItem("role")!=="node"||!e){V("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const o=new TextEncoder().encode(e);n=new ce(o,!0),await n.initDB(),await n.initSwarm(),await n.syncUserData();const c=(await n.dbGetAll("transactions")).filter(i=>i.type==="commission").reduce((i,l)=>i+(l.amount||0),0),a=document.getElementById("nodeEarnings");a&&(a.textContent=`Total Earnings: ${c.toFixed(2)} DCT`)}catch(e){console.error("Error initializing node instructions:",e),V(`Initialization failed: ${e.message}`)}finally{Z(!1)}})}function V(n){const e=document.getElementById("toast");e&&(e.textContent=n,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function Z(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}self.addEventListener("install",n=>{n.waitUntil(caches.open("dcrypt-v1").then(e=>e.addAll(["/","/index.html","/assets/index.js","/wasm/dcrypt_wasm.js","/wasm/dcrypt_wasm_bg.wasm"])))});self.addEventListener("fetch",n=>{n.respondWith(caches.match(n.request).then(e=>e||fetch(n.request).catch(()=>caches.match("/index.html"))))});self.addEventListener("message",async n=>{if(n.data.type==="cache_chunk"){const{chunkHash:e,data:t}=n.data,s=await caches.open("dcrypt-chunks"),o=new Blob([t],{type:"application/octet-stream"}),r=new Response(o,{headers:{"Content-Type":"application/octet-stream"}});await s.put(`/chunks/${e}`,r),console.log(`Service Worker: Cached chunk ${e}`)}});self.addEventListener("fetch",n=>{const e=new URL(n.request.url);e.pathname.startsWith("/chunks/")?n.respondWith(caches.open("dcrypt-chunks").then(t=>t.match(n.request).then(s=>s?(console.log(`Service Worker: Serving chunk ${e.pathname} from cache`),s):fetch(n.request).catch(()=>new Response("Chunk not available offline",{status:503}))))):n.respondWith(caches.match(n.request).then(t=>t||fetch(n.request).catch(()=>caches.match("/index.html"))))});let P=null,v=null,d=null,L=!1,$=0,q=[],T=!1;async function Le(){try{const n=await xe(()=>Promise.resolve().then(()=>ke),void 0);P=n.auth,v=n.db,console.log("Firebase services initialized successfully")}catch(n){throw console.error("Failed to initialize Firebase services:",n),h("Failed to initialize Firebase. Please try again later.",!0),n}}document.addEventListener("DOMContentLoaded",async()=>{var w;console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname);try{await Le()}catch(f){console.error("Firebase initialization failed, aborting setup:",f);return}const n=localStorage.getItem("role"),e=localStorage.getItem("nodeId");if((window.location.pathname.includes("index.html")||window.location.pathname==="/"||window.location.pathname==="/datasharingApp/")&&n==="node"&&e){console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html";return}const s=document.getElementById("signupButton"),o=document.getElementById("loginButton"),r=document.getElementById("logoutButton"),c=document.getElementById("userBalance"),a=document.getElementById("publishButton"),i=document.getElementById("searchButton"),l=document.getElementById("depositButton"),u=document.getElementById("withdrawButton"),p=document.getElementById("toggleHistoryButton"),y=document.getElementById("transactionHistory"),b=(w=document.getElementById("publishedItems"))==null?void 0:w.querySelector("tbody"),m=document.getElementById("buyHashButton");s&&o&&r&&c&&a&&i&&l&&u&&p&&y&&b&&m?(console.log("On index.html, setting up UI and event listeners"),n==="node"&&e&&(L=!0,console.log("Node detected, but should have been redirected already.")),console.log("Setting up onAuthStateChanged listener"),pe(P,async f=>{if(f){console.log("User is signed in:",f.uid),s.classList.add("hidden"),o.classList.add("hidden"),r.classList.remove("hidden"),a.disabled=!1,i.disabled=!1,l.disabled=!1,u.disabled=!1,p.disabled=!1,m.disabled=!1;const I=localStorage.getItem("pendingRole")||"user";localStorage.removeItem("pendingRole");const k=window.location.pathname;if(I==="user"){const B=D(v,"users",f.uid);if(await A(B,{role:"user",createdAt:Date.now(),balance:0},{merge:!0}),!k.includes("index.html")&&k!=="/datasharingApp/"){console.log("Redirecting to index.html for user role"),window.location.href="/datasharingApp/index.html";return}}else{const B=Ue();localStorage.setItem("nodeId",B),localStorage.setItem("role","node");const g=D(v,"nodes",B);if(await A(g,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!k.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html";return}}await ee(f.uid)}else{console.log("No user is signed in. Checking IndexedDB for keypair...");const I=indexedDB.open("dcrypt_db",3);I.onupgradeneeded=k=>{const B=k.target.result;B.objectStoreNames.contains("store")||(B.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store"))},I.onsuccess=async()=>{const E=I.result.transaction("store","readonly").objectStore("store").get("dcrypt_identity");E.onsuccess=async()=>{E.result&&E.result.value?(new TextEncoder().encode(E.result.value),console.log("Found keypair in IndexedDB, initializing app..."),s.classList.add("hidden"),o.classList.add("hidden"),r.classList.remove("hidden"),a.disabled=!1,i.disabled=!1,l.disabled=!1,u.disabled=!1,p.disabled=!1,m.disabled=!1,await ee(E.result.value)):(console.log("No keypair found in IndexedDB."),s.classList.remove("hidden"),o.classList.remove("hidden"),r.classList.add("hidden"),a.disabled=!0,i.disabled=!0,l.disabled=!0,u.disabled=!0,p.disabled=!0,m.disabled=!0,U())},E.onerror=()=>{console.error("Failed to load keypair from IndexedDB"),s.classList.remove("hidden"),o.classList.remove("hidden"),r.classList.add("hidden"),a.disabled=!0,i.disabled=!0,l.disabled=!0,u.disabled=!0,p.disabled=!0,m.disabled=!0,U()}},I.onerror=()=>{console.error("Failed to open IndexedDB"),s.classList.remove("hidden"),o.classList.remove("hidden"),r.classList.add("hidden"),a.disabled=!0,i.disabled=!0,l.disabled=!0,u.disabled=!0,p.disabled=!0,m.disabled=!0,U()}}},f=>{console.error("onAuthStateChanged error:",f),h("Failed to monitor authentication state.",!0)}),console.log("Attaching event listener to loginButton"),o.addEventListener("click",f=>{f.preventDefault(),console.log("Login button clicked"),Ne()}),console.log("Attaching event listener to logoutButton"),r.addEventListener("click",f=>{f.preventDefault(),console.log("Logout button clicked"),X()})):console.log("Not on index.html, skipping index.html-specific setup"),window.logout=X,window.publishSnippet=Fe,window.buySnippet=le,window.buySnippetByHash=qe,window.searchSnippets=je,window.deposit=He,window.withdraw=Me,window.toggleTransactionHistory=_e,window.flagSnippet=ze,window.handleSignup=Re});function Ue(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}async function Re(){var s;if(console.log("handleSignup function called"),T){console.log("Signup already in progress, ignoring additional clicks");return}T=!0;const n=document.getElementById("signupButton");n?(n.disabled=!0,n.textContent="Signing Up...",console.log("Signup button disabled and text updated")):console.warn("Signup button not found");const e=document.querySelectorAll('input[name="role"]');if(!e||e.length===0){console.error("Role inputs not found"),h("Role selection not found.",!0),T=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google");return}const t=(s=Array.from(e).find(o=>o.checked))==null?void 0:s.value;if(!t){console.error("No role selected"),h("Please select a role.",!0),T=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google");return}console.log("Selected role:",t),localStorage.setItem("pendingRole",t);try{const o=new Q;console.log("GoogleAuthProvider created"),console.log("Initiating signInWithRedirect for signup"),await ne(P,o),console.log("signInWithRedirect completed for signup")}catch(o){console.error("Handling user signup with OAuth..."),console.error("Signup failed:",o),h(`Sign-up failed: ${o.message}`,!0),T=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google")}}async function Ne(){console.log("signIn function called");try{if(!P)throw console.error("Firebase Auth is not initialized"),new Error("Firebase Auth is not initialized");const n=new Q;console.log("GoogleAuthProvider created for signIn"),console.log("Initiating signInWithRedirect"),await ne(P,n),console.log("signInWithRedirect completed")}catch(n){console.error("Handling user login with OAuth..."),console.error("Login failed:",n),h(`Login failed: ${n.message}`,!0)}}async function X(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),h("Node signed out successfully!")):(await fe(P),h("Signed out successfully!"));const n=indexedDB.open("dcrypt_db",3);n.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("store")||(t.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store"))},n.onsuccess=()=>{n.result.transaction("store","readwrite").objectStore("store").delete("dcrypt_identity")},d=null,window.dht=null,q=[],$=0,U()}catch(n){console.error("Sign-out failed:",n),h(`Sign-out failed: ${n.message}`,!0)}}function R(){return!!P.currentUser||localStorage.getItem("role")==="node"}async function Fe(n,e,t,s,o){var r;if(!R()){h("Please sign in to publish.");return}S(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Title is required");let c=s||"",a="text/plain";if(o&&o.files&&o.files.length>0){const x=o.files[0];a=x.type||"application/octet-stream";const w=new FileReader;c=await new Promise((f,I)=>{w.onload=k=>f(new Uint8Array(k.target.result)),w.onerror=k=>I(new Error("Failed to read file")),w.readAsArrayBuffer(x)})}else c=new TextEncoder().encode(c);const i=document.getElementById("isPremium").checked,l=document.getElementById("priceInput"),u=i&&l&&parseFloat(l.value)||0,p={content_type:n,description:e||"",tags:t?t.split(",").map(x=>x.trim()):[],isPremium:i,priceUsd:u},y=await d.publishIP(p,c,a),b=((r=P.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId"),m=D(v,"snippets",y);await A(m,{ipHash:y,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:b},{merge:!0}),h("Snippet published successfully!"),M(),N(),F(),await H()}catch(c){console.error("publishSnippet failed:",c),h(`Publish failed: ${c.message}`,!0)}finally{S(!1)}}async function le(n){if(!R())return h("Please sign in to buy."),null;S(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Hash is required");const e=d.knownObjects.get(n);if(!e)throw new Error("Snippet not found");const o=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(o>0){const i=await d.getBalance(d.keypair);if(i<o)throw new Error("Insufficient balance");const l=o*.05;await d.distributeCommission(l),await d.putBalance(d.keypair,i-o),await d.dbAdd("transactions",{type:"buy",amount:o,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:r,fileType:c}=await d.requestData(n);h("Snippet retrieved successfully!"),N(),F(),await H();const a=prompt("Please rate this snippet (1-5 stars):","5");if(a!==null){const i=parseInt(a);i>=1&&i<=5?(await Oe(n,i),h(`Rated ${i} stars!`),M()):h("Invalid rating. Please enter a number between 1 and 5.",!0)}return Ge(r,c,e.metadata.content_type),{data:r,fileType:c}}catch(e){return console.error("buySnippet failed:",e),h(`Purchase failed: ${e.message}`,!0),null}finally{S(!1)}}async function qe(n){const e=n||document.getElementById("buyHashInput").value.trim();if(!e){h("Please enter a valid hash.",!0);return}await le(e)&&h("Snippet purchased and displayed below!")}async function Oe(n,e){var s;const t=((s=P.currentUser)==null?void 0:s.uid)||localStorage.getItem("nodeId");if(t)try{const o=D(v,"snippets",n,"ratings",t);await A(o,{rating:e,timestamp:Date.now()});const c=(await z(j(v,"snippets",n,"ratings"))).docs.map(l=>l.data().rating),a=c.length>0?c.reduce((l,u)=>l+u,0)/c.length:0,i=D(v,"snippets",n);await G(i,{averageRating:a.toFixed(1)})}catch(o){console.error("Failed to submit rating:",o),h(`Failed to submit rating: ${o.message}`,!0)}}async function ze(n){var t;if(!(((t=P.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){h("Please sign in to flag content.");return}try{const s=D(v,"snippets",n);await G(s,{flagCount:me(1)}),((await oe(s)).data().flagCount||0)>=3?(await G(s,{reviewStatus:"under_review"}),h("Snippet has been flagged and is under review."),M()):h("Snippet flagged. It will be reviewed if flagged by more users.")}catch(s){console.error("Failed to flag snippet:",s),h(`Failed to flag snippet: ${s.message}`,!0)}}async function je(n){if(!R()){h("Please sign in to search.");return}S(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Search query is required");console.log("Starting search with query:",n),console.log("dht.knownObjects size:",d.knownObjects.size),console.log("dht.knownObjects:",Array.from(d.knownObjects.entries()));const e=document.getElementById("publishedItems").querySelector("tbody");e.innerHTML="";const t=await z(j(v,"snippets")),s={};t.forEach(r=>{s[r.id]=r.data()}),console.log("Snippets from Firestore:",s);let o=!1;d.knownObjects.forEach((r,c)=>{const{content_type:a,description:i,tags:l}=r.metadata,u=n.toLowerCase(),p=s[c]||{averageRating:0,reviewStatus:"active"};if(console.log(`Checking snippet ${c}:`,{content_type:a,description:i,tags:l,reviewStatus:p.reviewStatus}),p.reviewStatus==="active"&&(a.toLowerCase().includes(u)||i&&i.toLowerCase().includes(u)||l&&l.some(y=>y.toLowerCase().includes(u)))){o=!0;const b=(r.metadata.isPremium||!1)&&r.metadata.priceUsd||0,m=b>0?`${b} DCT`:"Free",x=document.createElement("tr");x.innerHTML=`
          <td class="py-2 px-4">${a}</td>
          <td class="py-2 px-4">${i||"No description"}</td>
          <td class="py-2 px-4">${l.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${p.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${c}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${m})</button>
            <button onclick="window.flagSnippet('${c}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(x),console.log(`Found matching snippet ${c}`)}}),h(o?"Search completed!":"No snippets found matching your search.")}catch(e){console.error("searchSnippets failed:",e),h(`Search failed: ${e.message}`,!0)}finally{S(!1)}}async function He(n){if(!R()){h("Please sign in to deposit.");return}S(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+n;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:n,timestamp:Date.now()}),h(`Deposited ${n} DCT successfully!`),N(),F(),await H()}catch(e){console.error("deposit failed:",e),h(`Deposit failed: ${e.message}`,!0)}finally{S(!1)}}async function Me(n){if(!R()){h("Please sign in to withdraw.");return}S(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<n)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-n),await d.dbAdd("transactions",{type:"withdraw",amount:n,timestamp:Date.now()}),h(`Withdrew ${n} DCT successfully!`),N(),F(),await H()}catch(e){console.error("withdraw failed:",e),h(`Withdrawal failed: ${e.message}`,!0)}finally{S(!1)}}function _e(){const n=document.getElementById("transactionHistory");n&&(n.style.display=n.style.display==="none"?"block":"none")}async function H(){var e;const n=((e=P.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(n)try{const t=D(v,"users",n),s=d?await d.getBalance(d.keypair):0;await A(t,{balance:s,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function M(){var e;const n=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");n&&(n.innerHTML="",z(j(v,"snippets")).then(t=>{const s={};t.forEach(o=>{s[o.id]=o.data()}),d&&d.knownObjects.forEach((o,r)=>{const c=s[r]||{averageRating:0,reviewStatus:"active"};if(c.reviewStatus!=="active")return;const i=(o.metadata.isPremium||!1)&&o.metadata.priceUsd||0,l=i>0?`${i} DCT`:"Free",u=document.createElement("tr");u.innerHTML=`
          <td class="py-2 px-4">${o.metadata.content_type}</td>
          <td class="py-2 px-4">${o.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${o.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${c.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${l})</button>
            <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,n.appendChild(u)})}).catch(t=>{console.error("Failed to update live feed:",t),h("Failed to load live feed.",!0)}))}function N(){const n=document.getElementById("transactionList");if(n){if(!d){n.innerHTML="Not initialized.";return}d.dbGetAll("transactions").then(e=>{if(e.length===0){n.innerHTML="No transactions yet.";return}n.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}).catch(e=>{console.error("Failed to update transaction history:",e),n.innerHTML="Failed to load transactions."})}}function F(){const n=document.getElementById("userBalance");if(n){if(!d){n.textContent="Balance: 0 DCT",$=0;return}d.getBalance(d.keypair).then(e=>{$=e||0,n.textContent=`Balance: ${$} DCT`}).catch(e=>{console.error("Failed to update balance:",e),n.textContent="Balance: 0 DCT",$=0})}}function U(){var s;const n=(s=document.getElementById("publishedItems"))==null?void 0:s.querySelector("tbody"),e=document.getElementById("transactionList"),t=document.getElementById("userBalance");n&&(n.innerHTML=""),e&&(e.innerHTML="No transactions yet."),t&&(t.textContent="Balance: 0 DCT"),$=0}function h(n,e=!1){const t=document.getElementById("toast");t&&(t.textContent=n,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function S(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}function We(){const n=document.getElementById("isPremium"),e=document.getElementById("priceInput");n&&e&&n.addEventListener("change",t=>{console.log("Premium toggle:",t.target.checked),e.classList.toggle("hidden",!t.target.checked),t.target.checked||(e.value="")})}function Ge(n,e,t){const s=document.getElementById("snippetDisplay");if(!s)return;s.innerHTML="";const o=document.createElement("div");o.className="p-4 bg-gray-800 rounded-lg mt-4";const r=document.createElement("h3");if(r.className="text-lg font-semibold mb-2",r.textContent=t||"Snippet Content",o.appendChild(r),e.startsWith("text")){const c=new TextDecoder().decode(n),a=document.createElement("pre");a.className="text-sm text-gray-300 whitespace-pre-wrap",a.textContent=c,o.appendChild(a)}else if(e.startsWith("image")){const c=new Blob([n],{type:e}),a=URL.createObjectURL(c),i=document.createElement("img");i.src=a,i.className="max-w-full h-auto rounded",i.onload=()=>URL.revokeObjectURL(a),o.appendChild(i)}else{const c=new Blob([n],{type:e}),a=URL.createObjectURL(c),i=document.createElement("a");i.href=a,i.download=t||"downloaded_file",i.className="text-blue-400 hover:underline",i.textContent="Download File",i.onclick=()=>setTimeout(()=>URL.revokeObjectURL(a),1e3),o.appendChild(i)}s.appendChild(o)}async function ee(n){console.log("Initializing app..."),S(!0);try{let e;const t=indexedDB.open("dcrypt_db",3);t.onupgradeneeded=s=>{const o=s.target.result;o.objectStoreNames.contains("store")||(o.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store"))},await new Promise((s,o)=>{t.onsuccess=()=>{const r=t.result,i=r.transaction("store","readonly").objectStore("store").get("dcrypt_identity");i.onsuccess=()=>{if(i.result&&i.result.value)e=new TextEncoder().encode(i.result.value),console.log("Loaded keypair from IndexedDB:",i.result.value);else if(n)e=new TextEncoder().encode(n),r.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:n});else{o(new Error("No user ID or stored keypair found"));return}s()},i.onerror=()=>o(new Error("Failed to load keypair from IndexedDB"))},t.onerror=()=>o(new Error("Failed to open IndexedDB"))}),L||(L=await Qe(n)),console.log(`User is ${L?"":"not "}a node.`),q.length===0&&(console.log("Creating test peers..."),q=await Ce(),console.log("Test peers created:",q.map(s=>s.peerId))),console.log("Initializing DHT..."),d=new ce(e,L),window.dht=d,await d.initDB(),console.log("IndexedDB initialized."),await d.initSwarm(),console.log("DHT initialized."),await d.syncUserData(),console.log("User data synced."),M(),console.log("Live feed updated."),F(),N()}catch(e){console.error("Error initializing application:",e),h(`Initialization failed: ${e.message}`,!0),d=null,window.dht=null,$=0,U()}finally{S(!1),We()}}async function Qe(n){try{const e=D(v,"nodes",n);return(await oe(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}
