import{getAuth as me,onAuthStateChanged as Y,setPersistence as ye,browserLocalPersistence as we,GoogleAuthProvider as re,signInWithPopup as ie,signOut as be}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as ke,getDocs as L,collection as H,doc as v,setDoc as x,updateDoc as C,increment as O,getDoc as K,query as M,where as Q,onSnapshot as Ie}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import{getStorage as Se}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-storage.js";import ve from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import Z from"https://cdn.jsdelivr.net/npm/kademlia@0.2.2/+esm";import f from"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import{initializeApp as Pe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();const Be="modulepreload",De=function(i){return"/datasharingApp/"+i},X={},Ee=function(e,t,o){let n=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),a=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));n=Promise.allSettled(t.map(c=>{if(c=De(c),c in X)return;X[c]=!0;const d=c.endsWith(".css"),p=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${p}`))return;const h=document.createElement("link");if(h.rel=d?"stylesheet":Be,d||(h.as="script"),h.crossOrigin="",h.href=c,a&&h.setAttribute("nonce",a),document.head.appendChild(h),d)return new Promise((g,b)=>{h.addEventListener("load",g),h.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(r){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=r,window.dispatchEvent(a),!a.defaultPrevented)throw r}return n.then(r=>{for(const a of r||[])a.status==="rejected"&&s(a.reason);return e().catch(s)})},xe={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},J=Pe(xe),Te=Se(J),Ne=me(J),ae=ke(J),$e=Object.freeze(Object.defineProperty({__proto__:null,auth:Ne,db:ae,storage:Te},Symbol.toStringTag,{value:"Module"}));var se;const P=(se=globalThis.crypto)==null?void 0:se.subtle;if(!P)throw new Error("Web Crypto API is not available in this environment");function He(){const i=new Uint8Array(12);for(let e=0;e<12;e++)i[e]=Math.floor(Math.random()*256);return i}function Ce(i,e,t,o,n,s,r){return{content:new Uint8Array(i),content_type:e,tags:t||[],is_premium:o,price_usd:n,creator_id:new Uint8Array(s),file_type:r}}function Ae(i){return i.content}async function ce(i){const e=await P.digest("SHA-256",i);return new Uint8Array(e)}function Re(i){const e=new Uint8Array(new Int32Array([i.index]).buffer),t=new Uint8Array([...i.data,...i.nonce,...e]);return ce(t)}function ee(i){return i.index}function de(i){return new TextEncoder().encode(i).buffer}async function Fe(i,e,t){const o=i.content,n=Math.ceil(o.length/t),s=[];Array.isArray(e)&&(e=e.join(""));const r=await P.digest("SHA-256",de(e)),a=await P.importKey("raw",r,{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<t;c++){const d=c*n,p=Math.min(d+n,o.length),h=o.slice(d,p),g=He(),b=await P.encrypt({name:"AES-GCM",iv:g},a,h),m={data:new Uint8Array(b),nonce:g,index:c,file_type:i.file_type};s.push(m)}return s}async function qe(i,e){Array.isArray(e)&&(e=e.join(""));const t=await P.digest("SHA-256",de(e)),o=await P.importKey("raw",t,{name:"AES-GCM"},!1,["decrypt"]),n=await P.decrypt({name:"AES-GCM",iv:i.nonce},o,i.data);return new Uint8Array(n)}function Ue(i){return i.file_type}class le{constructor(e,t=!1){this.peers=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.bootstrapNodes=new Set,this.kademlia=null,this.peerId=this.isNode?`node-${this.keypair}`:e;const o=f.SHA256(this.peerId).toString(f.enc.Hex);this.kademliaId=o.substring(0,40),this.isNode?this.kademlia=new Z(this.kademliaId,{k:20}):this.kademlia=new Z(this.kademliaId,{k:20}),console.log("DHT initialized with keypair:",e,"isNode:",t),this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await L(H(ae,"nodes"));if(this.nodes.clear(),t.forEach(o=>this.nodes.add(`node-${o.id}`)),console.log("Fetched nodes:",Array.from(this.nodes)),this.nodes.size>0){const o=await this.selectBootstrapNode();o&&(this.bootstrapNodes.add(o),await this.queryBootstrapNode(o))}}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear()}};await e(),setInterval(e,5*60*1e3),this.isNode&&(setInterval(()=>this.refreshRoutingTable(),10*60*1e3),setInterval(()=>this.republishData(),6*60*60*1e3),setInterval(()=>this.cleanupDHTStore(),24*60*60*1e3))}async selectBootstrapNode(){const e=Array.from(this.nodes).filter(n=>n!==this.peerId);if(e.length===0)return null;let t=1/0,o=null;for(const n of e.slice(0,5)){const s=await this.measureLatencyToPeer(n);s!==null&&s<t&&(t=s,o=n)}return o||(o=e[Math.floor(Math.random()*e.length)]),o}async queryBootstrapNode(e){try{await this.connectToPeer(e);const t=this.peers.get(e);if(t&&t.connected&&t.conn){const o=`${e}-getKnownNodes-${Date.now()}`;return t.conn.send({type:"getKnownNodes",requestId:o,peerId:this.peerId}),new Promise((n,s)=>{this.pendingRequests.set(o,{resolve:r=>{r.forEach(a=>{if(a!==this.peerId&&(this.bootstrapNodes.add(a),this.isNode)){const c=f.SHA256(a).toString(f.enc.Hex).substring(0,40);this.kademlia.addNode(a,c)}}),console.log("Received known nodes from bootstrap:",r),n()},reject:s}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),s(new Error("Bootstrap query timed out")))},1e4)})}}catch(t){console.error("Failed to query bootstrap node:",t)}}async measureLatencyToPeer(e){const t=this.peers.get(e);if(t&&t.connected&&t.conn){const o=Date.now();try{await new Promise((s,r)=>{const a=`${e}-ping-${Date.now()}`;t.conn.send({type:"ping",requestId:a}),this.pendingRequests.set(a,{resolve:s,reject:r}),setTimeout(()=>{this.pendingRequests.has(a)&&(this.pendingRequests.delete(a),r(new Error("Ping timeout")))},2e3)});const n=Date.now()-o;if(this.isNode){const s=f.SHA256(e).toString(f.enc.Hex).substring(0,40);this.kademlia.setNodeLatency(s,n)}return n}catch(n){return console.warn(`Failed to measure latency for peer ${e}:`,n),null}}return null}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const o of t){const n=await this.measureLatencyToPeer(o);n!==null&&e.push(n)}this.averageLatency=e.length>0?e.reduce((o,n)=>o+n,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async refreshRoutingTable(){if(this.isNode)try{const e=f.SHA256(String(Math.random())).toString(f.enc.Hex).substring(0,40),t=await this.kademlia.findNodes(e);for(const o of t)await this.connectToPeer(o.id);console.log("Refreshed routing table")}catch(e){console.error("Failed to refresh routing table:",e)}}async initDB(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db",6);let s;n.onupgradeneeded=r=>{s=n.result,s.objectStoreNames.contains("store")||s.createObjectStore("store",{keyPath:"id"}),s.objectStoreNames.contains("transactions")||s.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),s.objectStoreNames.contains("offlineQueue")||s.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),s.objectStoreNames.contains("chunkCache")||s.createObjectStore("chunkCache",{keyPath:"id"}),s.objectStoreNames.contains("dhtStore")||s.createObjectStore("dhtStore",{keyPath:"id"}),console.log("DHT database upgraded to version",6)},n.onsuccess=()=>{this.db=n.result,console.log("DHT IndexedDB opened at version",this.db.version),e()},n.onerror=r=>t(new Error(`Failed to open IndexedDB: ${r.target.error.message}`))})}async loadKnownObjects(){if(!this.db)throw new Error("IndexedDB not initialized");try{const o=this.db.transaction("store","readonly").objectStore("store").getAll();o.onsuccess=()=>{o.result.forEach(n=>{if(n.id!=="dcrypt_identity")try{const{metadata:s,chunks:r}=JSON.parse(n.value);this.knownObjects.set(n.id,{metadata:s,chunks:r})}catch(s){console.error("Failed to parse known object:",n.id,s)}}),console.log("Loaded known objects from IndexedDB")}}catch(e){console.error("Failed to load known objects:",e)}}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.keypair,balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{return console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new ve(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,config:{iceServers:[{urls:"stun:stun.l.google.com:19302"},{url:"turn:192.158.29.39:3478?transport=tcp",credential:"JZEOEt2V3Qb0y27GRntt2u2PAYA=",username:"28224511:1379330808"}]},debug:3}),await new Promise((e,t)=>{this.peer.on("open",o=>{console.log(`PeerJS connection opened with ID: ${o}`),this.activeNodes.add(this.peerId),this.peer.on("connection",n=>this.handleConnection(n)),this.peer.on("error",n=>{var s;if(console.error("PeerJS error:",n.type,n.message),n.type==="peer-unavailable"){const r=(s=n.message.match(/Peer (.+) is unavailable/))==null?void 0:s[1];r&&this.handlePeerDisconnect(r)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),window.addEventListener("beforeunload",()=>{this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed on page unload"))}),setInterval(()=>this.discoverPeers(),3e3),setInterval(()=>this.measureLatency(),6e4),e()}),this.peer.on("error",o=>t(o))})}catch(e){throw console.error("initSwarm failed:",e),e}}async discoverPeers(){console.log("Discovering peers...");const e=[...Array.from(this.nodes),...Array.from(this.bootstrapNodes),...Array.from(this.activeNodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to.");return}if(this.isNode){const t=await this.kademlia.findNodes(this.kademliaId);e.push(...t.map(o=>o.id))}e.forEach(t=>{this.peers.has(t)?this.peers.get(t).connected||this.connectToPeer(t):(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.size>50&&Array.from(this.peers.entries()).filter(([o,n])=>!n.connected).sort((o,n)=>(this.connectionAttempts.get(n[0])||0)-(this.connectionAttempts.get(o[0])||0)).slice(0,this.peers.size-50).forEach(([o])=>{if(this.peers.delete(o),this.connectionAttempts.delete(o),this.activeNodes.delete(o),this.isNode){const n=f.SHA256(o).toString(f.enc.Hex).substring(0,40);this.kademlia.removeNode(n)}})}async connectToPeer(e,t=1){var n;if((n=this.peers.get(e))!=null&&n.connected)return;console.log(`Connecting to peer: ${e} (Attempt ${t}/3)`);const o=this.peer.connect(e,{reliable:!0});o.on("open",()=>{if(console.log(`Connection opened with peer: ${e}`),this.peers.set(e,{connected:!0,conn:o}),this.activeNodes.add(e),this.isNode){const s=f.SHA256(e).toString(f.enc.Hex).substring(0,40);this.kademlia.addNode(e,s)}o.send({type:"handshake",peerId:this.peerId})}),o.on("data",s=>{console.log(`Received data from peer ${e}:`,s),this.handlePeerData(s,e)}),o.on("close",()=>{console.log(`Connection closed with peer ${e}`),this.handlePeerDisconnect(e)}),o.on("error",s=>{console.error(`Connection error with peer ${e}:`,s),t<3?setTimeout(()=>this.connectToPeer(e,t+1),5e3*t):(console.log(`Max attempts reached for peer ${e}. Marking as unreachable.`),this.handlePeerDisconnect(e))})}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t} at ${Date.now()}`),e.on("open",()=>{if(console.log(`Connection opened with peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),this.isNode){const o=f.SHA256(t).toString(f.enc.Hex).substring(0,40);this.kademlia.addNode(t,o)}}),e.on("data",o=>{console.log(`Received data from peer ${t}:`,o),this.handlePeerData(o,t)}),e.on("close",()=>{console.log(`Connection closed with peer ${t}`),this.handlePeerDisconnect(t)}),e.on("error",o=>{console.error(`Connection error with peer ${t}:`,o),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);if(t){if(t.connected=!1,t.conn=null,this.activeNodes.delete(e),this.isNode){const o=f.SHA256(e).toString(f.enc.Hex).substring(0,40);this.kademlia.removeNode(o)}console.log(`Peer disconnected: ${e}. Will reconnect on next discovery.`)}}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"metadataRequest":this.handleMetadataRequest(e,t);break;case"metadataResponse":this.handleMetadataResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":peer=this.peers.get(t),peer&&peer.connected&&peer.conn&&peer.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const o=this.pendingRequests.get(e.requestId);o&&(o.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;case"getKnownNodes":if(peer=this.peers.get(t),peer&&peer.connected&&peer.conn){const r=Array.from(this.activeNodes);peer.conn.send({type:"knownNodesResponse",requestId:e.requestId,nodes:r,peerId:this.peerId})}break;case"knownNodesResponse":const n=this.pendingRequests.get(e.requestId);n&&(n.resolve(e.nodes),this.pendingRequests.delete(e.requestId));break;case"storeDHT":this.storeDHTFromPeer(e.key,e.value,e.ttl,t);break;case"findDHT":this.handleFindDHT(e,t);break;case"findDHTResponse":const s=this.pendingRequests.get(e.requestId);s&&(s.resolve({value:e.value,nodes:e.nodes}),this.pendingRequests.delete(e.requestId));break;default:console.warn(`Unknown data type from peer ${t}:`,e.type)}}async storeDHT(e,t,o=864e5){try{const n=f.SHA256(e).toString(f.enc.Hex).substring(0,40);let s=[];if(this.isNode)s=await this.kademlia.findNodes(n,20);else{const r=Array.from(this.bootstrapNodes)[0];if(!r)throw new Error("No bootstrap node available");s=await this.requestNodesFromPeer(r,n)}for(const r of s){const a=r.id,c=this.peers.get(a);c&&c.connected&&c.conn&&c.conn.send({type:"storeDHT",key:e,value:t,ttl:o,peerId:this.peerId})}this.isNode&&await this.storeDHTFromPeer(e,t,o,this.peerId),console.log(`Stored DHT key ${e} on ${s.length} nodes`)}catch(n){throw console.error("Failed to store DHT key:",n),n}}async storeDHTFromPeer(e,t,o,n){if(this.isNode)try{await this.dbPut("dhtStore",{id:e,value:t,ttl:o,timestamp:Date.now()}),console.log(`Stored DHT key ${e} from peer ${n}`)}catch(s){console.error(`Failed to store DHT key ${e} from peer ${n}:`,s)}}async findDHT(e){try{const t=f.SHA256(e).toString(f.enc.Hex).substring(0,40);if(this.isNode){const o=await this.kademlia.findValue(t);if(o.value){const s=await this.dbGet("dhtStore",e);if(s&&s.timestamp+s.ttl>Date.now())return s.value}const n=o.nodes||await this.kademlia.findNodes(t,20);for(const s of n){const r=await this.requestDHTFromPeer(s.id,e);if(r)return r}}else{const o=Array.from(this.bootstrapNodes)[0];if(!o)throw new Error("No bootstrap node available");const n=await this.requestDHTFromPeer(o,e);if(n)return n}throw new Error(`DHT key ${e} not found`)}catch(t){throw console.error("Failed to find DHT key:",t),t}}async requestNodesFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-findNodes-${Date.now()}`;return o.conn.send({type:"findDHT",key:t,requestId:n,peerId:this.peerId}),new Promise((s,r)=>{this.pendingRequests.set(n,{resolve:({nodes:a})=>s(a.map(c=>({id:c}))),reject:r}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),r(new Error(`Request for nodes for key ${t} timed out`)))},1e4)})}async requestDHTFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-findDHT-${Date.now()}`;return o.conn.send({type:"findDHT",key:t,requestId:n,peerId:this.peerId}),new Promise((s,r)=>{this.pendingRequests.set(n,{resolve:({value:a,nodes:c})=>s(a||null),reject:r}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),r(new Error(`Request for DHT key ${t} timed out`)))},1e4)})}async handleFindDHT(e,t){if(!this.isNode)return;const{key:o,requestId:n}=e,s=this.peers.get(t);if(!s||!s.connected||!s.conn)return;const r=await this.dbGet("dhtStore",o);if(r&&r.timestamp+r.ttl>Date.now())s.conn.send({type:"findDHTResponse",requestId:n,value:r.value,nodes:[],peerId:this.peerId});else{const a=f.SHA256(o).toString(f.enc.Hex).substring(0,40),c=await this.kademlia.findNodes(a,20);s.conn.send({type:"findDHTResponse",requestId:n,value:null,nodes:c.map(d=>d.id),peerId:this.peerId})}}async republishData(){if(this.isNode)try{const e=await this.dbGetAll("dhtStore");for(const t of e)t.timestamp+t.ttl>Date.now()&&await this.storeDHT(t.id,t.value,t.ttl);console.log("Republished DHT data")}catch(e){console.error("Failed to republish DHT data:",e)}}async cleanupDHTStore(){if(this.isNode)try{const t=this.db.transaction("dhtStore","readwrite").objectStore("dhtStore"),o=await new Promise(n=>{t.getAll().onsuccess=s=>n(s.target.result)});for(const n of o)n.timestamp+n.ttl<=Date.now()&&await new Promise(s=>{t.delete(n.id).onsuccess=s});console.log("Cleaned up expired DHT entries")}catch(e){console.error("Failed to clean up DHT store:",e)}}async storeChunkFromPeer(e,t,o){if(this.isNode)try{await this.dbPut("chunkCache",{id:e,value:t});let n=this.chunkToPeerMap.get(e)||new Set;n.add(this.peerId),this.chunkToPeerMap.set(e,n),console.log(`Stored chunk ${e} from peer ${o}`)}catch(n){console.error(`Failed to store chunk ${e} from peer ${o}:`,n)}}async publishChunk(e,t,o,n){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let s=this.chunkToPeerMap.get(e)||new Set;if(s.add(this.peerId),this.chunkToPeerMap.set(e,s),this.activeNodes.size>0){const r=f.SHA256(e).toString(f.enc.Hex).substring(0,40);let a=[];if(this.isNode)a=await this.kademlia.findNodes(r,3);else{const c=Array.from(this.bootstrapNodes)[0];if(!c)throw new Error("No bootstrap node available");a=await this.requestNodesFromPeer(c,r),a=a.slice(0,3)}a=a.filter(c=>c.id.startsWith("node-"));for(const c of a){const d=this.peers.get(c.id);d&&d.connected&&d.conn&&(d.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),s.add(c.id),this.chunkToPeerMap.set(e,s),console.log(`Sent chunk ${e} to node ${c.id}`))}if(o===n-1){const c={};this.chunkToPeerMap.forEach((p,h)=>{c[h]=Array.from(p)});const d=this.chunkToIpHash.get(e)||e;await this.storeDHT(d,JSON.stringify(c))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:o,totalChunks:n});this.broadcastChunk(e)}catch(s){throw console.error("publishChunk failed:",s),s}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,o){if(!this.db||!this.keypair)throw new Error("IndexedDB or keypair not initialized");try{const n=Array.isArray(e.tags)?e.tags.map(w=>String(w).trim()).filter(w=>w!==""):[],s=!!e.isPremium,r=s?e.priceUsd||30:0,a=new Uint8Array(t),c=e.content_type||"",d=this.keypair,h=Ce(a,c,n,s,r,d,o||"text/plain"),g=Ae(h),b=await ce(g),m=this.uint8ArrayToBase64Url(b),B=Array.from(this.activeNodes).filter(w=>w.startsWith("node-")),D=B.length>0?B.length:1,S=await Fe(h,this.keypair,D),y=await Promise.all(S.map(w=>Re(w).then(z=>this.uint8ArrayToBase64Url(z)))),N={...e,chunk_count:S.length,isPremium:s,priceUsd:r,chunks:y},q={metadata:N,chunks:y};this.knownObjects.set(m,q),await this.dbPut("store",{id:m,value:JSON.stringify(q)}),this.chunkToIpHash=new Map,y.forEach(w=>this.chunkToIpHash.set(w,m));for(let w=0;w<S.length;w++)await this.publishChunk(y[w],S[w],w,S.length);return this.activeNodes.size>0?this.broadcastIP(m,N,y):await this.queueOfflineOperation({type:"publishIP",ipHash:m,metadata:N,chunkHashes:y}),m}catch(n){throw console.error("publishIP failed:",n),n}}broadcastIP(e,t,o){const n={type:"ip",ipHash:e,metadata:t,chunkHashes:o,peerId:this.peerId};this.broadcast(n),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e)throw new Error("IP not found");const t=await this.findDHT(e.metadata.hash||e.chunks[0]),o=JSON.parse(t);this.chunkToPeerMap=new Map,Object.entries(o).forEach(([p,h])=>{this.chunkToPeerMap.set(p,new Set(h))});const n=[];for(const p of e.chunks){const h=await this.dbGet("chunkCache",p);if(h&&h.value){n.push({chunk:h.value,hash:p});continue}const g=this.chunkToPeerMap.get(p);if(!g||g.size===0)throw new Error(`No peers found with chunk ${p}`);const b=Array.from(g).filter(S=>S.startsWith("node-")),m=Array.from(g).filter(S=>!S.startsWith("node-"));let B=!1,D=null;for(const S of[...b,...m])if(this.activeNodes.has(S))try{const y=await this.fetchChunkFromPeer(S,p);await this.dbPut("chunkCache",{id:p,value:y}),n.push({chunk:y,hash:p}),B=!0;break}catch(y){D=y,console.error(`Failed to fetch chunk ${p} from peer ${S}:`,y)}if(!B)throw D||new Error(`No available peer for chunk ${p}`)}const s=n.sort((p,h)=>ee(p.chunk)-ee(h.chunk)),r=await Promise.all(s.map(({chunk:p})=>qe(p,this.keypair))),a=new Uint8Array(r.reduce((p,h)=>p+h.length,0));let c=0;for(const p of r)a.set(p,c),c+=p.length;const d=Ue(s[0].chunk);return{data:a,fileType:d}}catch(t){throw console.error("requestData failed:",t),t}}async getIPmetadata(e){try{const t=this.knownObjects.get(e);if(t)return t;const o=await this.findDHT(e),n=JSON.parse(o);this.chunkToPeerMap=new Map,Object.entries(n).forEach(([d,p])=>{this.chunkToPeerMap.set(d,new Set(p))});const s=Array.from(this.activeNodes).find(d=>d.startsWith("node-"));if(!s)throw new Error("No nodes available");const r=s,a=`${r}-${e}-${Date.now()}`,c=this.peers.get(r);if(!c||!c.connected||!c.conn)throw new Error(`Peer ${r} is not connected`);return c.conn.send({type:"metadataRequest",requestId:a,ipHash:e,peerId:this.peerId}),new Promise((d,p)=>{this.pendingRequests.set(a,{resolve:d,reject:p,hash:e}),setTimeout(()=>{this.pendingRequests.has(a)&&(this.pendingRequests.delete(a),p(new Error(`Request for object ${e} from peer timed out`)))},1e4)})}catch(t){throw console.error("getIPmetadata failed:",t),t}}async fetchChunkFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-${t}-${Date.now()}`,s={type:"chunkRequest",requestId:n,chunkHash:t,peerId:this.peerId};return o.conn.send(s),new Promise((r,a)=>{this.pendingRequests.set(n,{resolve:r,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),a(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:o,chunkHash:n}=e;this.dbGet("chunkCache",n).then(s=>{if(s&&s.value){const r=this.peers.get(t);r&&r.connected&&r.conn&&(r.conn.send({type:"chunkResponse",requestId:o,chunkHash:n,chunkData:s.value,peerId:this.peerId}),console.log(`Sent chunk ${n} to peer ${t}`))}else console.warn(`Chunk ${n} not found for peer ${t}`)}).catch(s=>console.error(`Failed to retrieve chunk ${n} for peer ${t}:`,s))}handleMetadataRequest(e,t){const{requestId:o,ipHash:n}=e,s=this.knownObjects.get(n),r=this.peers.get(t);r&&r.connected&&r.conn&&r.conn.send({type:"metadataResponse",requestId:o,ipObject:s,peerId:this.peerId,ipHash:n})}handleMetadataResponse(e){const{requestId:t,ipObject:o,ipHash:n}=e,s=this.pendingRequests.get(t);s&&(n===s.hash&&s.resolve(o),this.pendingRequests.delete(t))}handleChunkResponse(e){const{requestId:t,chunkHash:o,chunkData:n}=e,s=this.pendingRequests.get(t);s&&(s.hash===o?s.resolve(n):s.reject(new Error(`Received chunk hash ${o} does not match requested hash ${s.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(n=>n.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const o=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${o} per node)`);for(const n of t){const s=n.replace("node-",""),r=this.base64UrlToUint8Array(s),c=await this.getBalance(r)+o;await this.putBalance(r,c);const d=this.peers.get(n);d&&d.connected&&d.conn&&d.conn.send({type:"commission",amount:o,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+e);return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+e,value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.keypair,balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const o=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(n=>o.clear().onsuccess=n);for(const n of e)try{switch(n.type){case"publishChunk":await this.publishChunk(n.chunkHash,n.chunkData,n.chunkIndex,n.totalChunks);break;case"publishIP":await this.broadcastIP(n.ipHash,n.metadata,n.chunkHashes);break;default:console.warn("Unknown offline operation type:",n.type)}}catch(s){console.error(`Failed to process offline operation ${n.type}:`,s),this.offlineQueue.push(n),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:n})}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).put(t);a.onsuccess=()=>o(),a.onerror=c=>n(new Error(`DB put failed: ${c.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).add(t);a.onsuccess=()=>o(),a.onerror=c=>n(new Error(`DB add failed: ${c.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).get(t);a.onsuccess=()=>o(a.result),a.onerror=c=>n(new Error(`DB get failed: ${c.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,o)=>{const r=this.db.transaction(e,"readonly").objectStore(e).getAll();r.onsuccess=()=>t(r.result),r.onerror=a=>o(new Error(`DB getAll failed: ${a.target.error.message}`))})}broadcast(e){this.activeNodes.forEach(t=>{if(t!==this.peerId){const o=this.peers.get(t);o&&o.connected&&o.conn&&o.conn.send(e)}})}uint8ArrayToBase64Url(e){const t=String.fromCharCode(...e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}base64UrlToUint8Array(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const o=atob(t),n=new Uint8Array(o.length);for(let s=0;s<o.length;s++)n[s]=o.charCodeAt(s);return n}destroy(){this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed")),this.peers.clear(),this.activeNodes.clear(),this.pendingRequests.clear(),this.bootstrapNodes.clear()}}function ue(i){const e=String.fromCharCode(...i);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}let k=null,I=null,Le=null,l=null,U=!1,E=0,_=!1,G=!1;async function pe(){console.log("Starting Firebase initialization...");try{const i=await Ee(()=>Promise.resolve().then(()=>$e),void 0);k=i.auth,I=i.db,Le=i.storage,await ye(k,we),console.log("Firebase services initialized successfully with local persistence")}catch(i){throw console.error("Failed to initialize Firebase services:",i),u("Failed to initialize Firebase. Please try again later.",!0),i}}function Oe(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,i=>{const e=Math.random()*16|0;return(i==="x"?e:e&3|8).toString(16)})}function T(){return!!(k!=null&&k.currentUser)||localStorage.getItem("role")==="node"}function u(i,e=!1){const t=document.getElementById("toast");t&&(t.textContent=i,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function Me(){if(!T()||!l){u("Please sign in and ensure the app is initialized before publishing.",!0);return}try{document.getElementById("publishModal").classList.add("active"),console.log("Opened publish modal")}catch(i){console.error("Failed to open publish modal:",i),u("Failed to open publish modal. Please try again.",!0)}}async function je(i){let e=l.knownObjects.get(i).metadata;if(window.currentProduct=e.hash,!T()||!l){u("Please sign in and ensure the app is initialized before viewing.",!0);return}try{const t=document.getElementById("buyModal");document.getElementById("snippetTitle").value=e.content_type,document.getElementById("snippetDescription").value=e.description,document.getElementById("snippetPrice").value=e.priceUsd==0?"Free":e.priceUsd,t.classList.add("active")}catch(t){console.error("Failed to open buy/preview modal:",t),u("Failed to open buy/preview modal. Please try again.",!0)}}function $(){var e,t;const i={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),mySnippetsTableBody:(t=document.getElementById("mySnippets"))==null?void 0:t.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance"),userNameElement:document.getElementById("userName"),userAvatarElement:document.querySelector(".user-avatar"),snippetsPostedElement:document.getElementById("snippetsPosted")};i.publishedItemsTableBody&&(i.publishedItemsTableBody.innerHTML=""),i.mySnippetsTableBody&&(i.mySnippetsTableBody.innerHTML=""),i.transactionList&&(i.transactionList.innerHTML="No transactions yet."),i.userBalanceElement&&(i.userBalanceElement.textContent="Balance: 0 DCT"),i.userNameElement&&(i.userNameElement.textContent="Guest User"),i.userAvatarElement&&(i.userAvatarElement.innerHTML='<i class="fas fa-user text-lg"></i>'),i.snippetsPostedElement&&(i.snippetsPostedElement.textContent="0"),E=0,localStorage.removeItem("userKeypair"),localStorage.removeItem("peerId"),localStorage.removeItem("dhtInitialized"),console.log("Cleared persisted state from localStorage on sign-out")}async function A(){const i=document.getElementById("userBalance");if(i){if(!l){i.textContent="Balance: 0 DCT",E=0;return}try{E=await l.getBalance(l.keypair)||0,i.textContent=`Balance: ${E} DCT`}catch(e){console.error("Failed to update balance:",e),i.textContent="Balance: 0 DCT",E=0}}}async function R(){const i=document.getElementById("transactionList");if(i){if(!l){i.innerHTML="Not initialized.";return}try{const e=await l.dbGetAll("transactions");if(e.length===0){i.innerHTML="No transactions yet.";return}i.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),i.innerHTML="Failed to load transactions."}}}async function j(){var e;const i=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(i){i.innerHTML="";try{const t=M(H(I,"snippets"));Ie(t,async o=>{const n={};if(o.forEach(s=>{n[s.id]=s.data()}),l){l.knownObjects.clear();for(const[s,r]of Object.entries(n)){const a={content_type:r.title,hash:r.ipHash,description:r.description||"No description",tags:r.tags||[],isPremium:r.isPremium||!1,priceUsd:r.priceUsd||0};l.knownObjects.set(s,{metadata:a,chunks:r.chunks||[]})}l.knownObjects.forEach((s,r)=>{const a=n[r],d=(s.metadata.isPremium||!1)&&s.metadata.priceUsd||0,p=d>0?`${d} DCT`:"Free",h=document.createElement("tr");h.innerHTML=`
            <td class="py-2 px-4">${s.metadata.content_type}</td>
            <td class="py-2 px-4">${s.metadata.tags.join(", ")||"No tags"}</td>
            <td class="py-2 px-4">${a.likes}</td>
            <td class="py-2 px-4">${a.dislikes}</td>
            <td class="py-2 px-4">
            
              <button onclick="window.openBuyModal('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${p})</button>
              <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
            </td>
          `,i.appendChild(h)})}},o=>{console.error("Live feed snapshot error:",o),u("Failed to load live feed.",!0)})}catch(t){console.error("Failed to update live feed:",t),u("Failed to load live feed.",!0)}}}async function W(){var e,t;const i=(e=document.getElementById("mySnippets"))==null?void 0:e.querySelector("tbody");if(i){i.innerHTML="";try{const o=((t=k.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId");if(!o)return;const n=M(H(I,"snippets"),Q("creatorId","==",o));(await L(n)).forEach(r=>{const a=r.data(),c=document.createElement("tr");c.innerHTML=`
        <td class="py-2 px-4">${a.title||"No title"}</td>
        <td class="py-2 px-4">${a.ipHash}</td>
        <td class="py-2 px-4">
          <button onclick="window.copyHash('${a.ipHash}')" class="bg-blue-500 text-white rounded hover:bg-blue-600 px-3 py-1">Copy Hash</button>
        </td>
      `,i.appendChild(c)})}catch(o){console.error("Failed to update my snippets:",o),u("Failed to load your snippets.",!0)}}}async function ze(i){var t;const e=(t=document.getElementById("publishedItems"))==null?void 0:t.querySelector("tbody");if(e){e.innerHTML="";try{const o=i.split(",").map(r=>r.trim().toLowerCase()).filter(r=>r);let n;o.length===0?n=await L(M(H(I,"snippets"),Q("reviewStatus","==","active"))):n=await L(M(H(I,"snippets"),Q("reviewStatus","==","active")));const s={};if(n.forEach(r=>{s[r.id]=r.data()}),l){l.knownObjects.clear();for(const[r,a]of Object.entries(s)){const c={content_type:a.title,description:a.description||"No description",tags:a.tags||[],isPremium:a.isPremium||!1,priceUsd:a.priceUsd||0};l.knownObjects.set(r,{metadata:c,chunks:a.chunks||[]})}l.knownObjects.forEach((r,a)=>{const c=s[a]||{likes:0,dislikes:0},d=(r.metadata.tags||[]).map(m=>m.toLowerCase());if(o.length>0&&!o.some(m=>d.includes(m)))return;const h=(r.metadata.isPremium||!1)&&r.metadata.priceUsd||0,g=h>0?`${h} DCT`:"Free",b=document.createElement("tr");b.innerHTML=`
          <td class="py-2 px-4">${r.metadata.content_type}</td>
          <td class="py-2 px-4">${r.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${r.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${c.likes}</td>
          <td class="py-2 px-4">${c.dislikes}</td>
          <td class="py-2 px-4">
            <button onclick="window.openBuyModal(${a})" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${g})</button>
            <button onclick="window.flagSnippet('${a}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(b)})}}catch(o){console.error("Failed to search snippets:",o),u("Search failed.",!0)}}}async function F(){var e;const i=((e=k.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(i)try{const t=v(I,"users",i),o=l?await l.getBalance(l.keypair):0;await x(t,{balance:o,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function _e(){const i=document.getElementById("transactionHistory");i&&(i.style.display=i.style.display==="none"?"block":"none")}function Ge(i,e,t){const o=document.getElementById("snippetDisplay");if(!o)return;o.innerHTML="";const n=document.createElement("div");n.className="p-4 bg-gray-800 rounded-lg mt-4";const s=document.createElement("h3");if(s.className="text-lg font-semibold mb-2",s.textContent=t||"Snippet Content",n.appendChild(s),e.startsWith("text")){const r=new TextDecoder().decode(i),a=document.createElement("pre");a.className="text-sm text-gray-300 whitespace-pre-wrap",a.textContent=r,n.appendChild(a)}else if(e.startsWith("image")){const r=new Blob([i],{type:e}),a=URL.createObjectURL(r),c=document.createElement("img");c.src=a,c.className="max-w-full h-auto rounded",c.onload=()=>URL.revokeObjectURL(a),n.appendChild(c)}else{const r=new Blob([i],{type:e}),a=URL.createObjectURL(r),c=document.createElement("a");c.href=a,c.download=t||"downloaded_file",c.className="text-blue-400 hover:underline",c.textContent="Download File",c.onclick=()=>setTimeout(()=>URL.revokeObjectURL(a),1e3),n.appendChild(c)}o.appendChild(n)}async function V(){return new Promise((e,t)=>{console.log("Starting IndexedDB initialization...");const o=indexedDB.open("dcrypt_db");o.onsuccess=()=>{const n=o.result,s=n.version;console.log("Current IndexedDB version:",s),n.close();const r=indexedDB.open("dcrypt_db",Math.max(s,5));r.onupgradeneeded=a=>{const c=r.result;console.log("Upgrading database to version",5),c.objectStoreNames.contains("store")||(c.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),c.objectStoreNames.contains("transactions")||(c.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),c.objectStoreNames.contains("offlineQueue")||(c.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),c.objectStoreNames.contains("chunkCache")||(c.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache")),console.log("Database upgrade completed")},r.onsuccess=()=>{const a=r.result;console.log("IndexedDB opened successfully at version",a.version),e(a)},r.onerror=()=>{console.error("Failed to open IndexedDB:",r.error),t(new Error(`Failed to open IndexedDB: ${r.error.message}`))}},o.onerror=()=>{console.error("Failed to check IndexedDB version:",o.error),t(new Error(`Failed to check IndexedDB version: ${o.error.message}`))}})}async function he(i){return new Promise((e,t)=>{try{const s=i.transaction("store","readonly").objectStore("store").get("dcrypt_identity");s.onsuccess=()=>{var a;const r=(a=s.result)==null?void 0:a.value;r&&typeof r=="string"?(console.log("Loaded keypair from IndexedDB:",r),e(r)):(console.log("No valid keypair found in IndexedDB."),e(null))},s.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",s.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(o){console.error('Error accessing "store" object store:',o),t(o)}})}async function te(i,e){return new Promise((t,o)=>{try{console.log("Storing keypair in IndexedDB:",e);const r=i.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});r.onsuccess=()=>{console.log("Successfully stored keypair in IndexedDB"),t()},r.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",r.error),o(new Error("Failed to store keypair in IndexedDB"))}}catch(n){console.error('Error storing keypair in "store" object store:',n),o(n)}})}async function ne(i,e){if(G){console.log("Initialization already in progress, skipping...");return}G=!0,console.log("Initializing app with userId:",i);try{e||(e=await V());let t=await he(e);if(t instanceof Uint8Array&&(t=ue(t)),!t&&i)console.log("No keypair found, using userId as keypair:",i),await te(e,i),t=i;else if(t)t.length>40&&(console.warn("Existing keypair is unusually large:",t.length,"characters. Overwriting with userId."),t=i,await te(e,i));else throw new Error("No keypair available and no userId provided to create one");U=await Qe(i),console.log(`User is ${U?"":"not "}a node.`),l=new le(t,U),window.dht=l,await l.initDB(),console.log("DHT database initialized.");let o=3;for(;o>0;)try{await l.initSwarm();break}catch(n){if(n.message.includes("No bootstrap node available")&&o>1)console.warn("No nodes available, retrying...",o),await new Promise(s=>setTimeout(s,5e3)),o--;else throw n}console.log("DHT swarm initialized."),await l.syncUserData(),console.log("User data synced."),await Promise.all([j(),W(),A(),R()]),console.log("UI updated."),await ge(i)}catch(t){console.error("Error initializing application:",t),t.message.includes("ID conflict")?u("Failed to connect to the network due to an ID conflict. Please try signing out and signing in again.",!0):t.message.includes("No bootstrap node available")?u("No nodes available in the network. Please try again later.",!0):u(`Initialization failed: ${t.message}`,!0),l&&l.destroy(),l=null,window.dht=null,E=0,$()}finally{G=!1}F()}async function Qe(i){try{const e=v(I,"nodes",i);return(await K(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Ke(i,e=800,t=800,o=.7){return new Promise((n,s)=>{const r=new Image;r.src=URL.createObjectURL(i),r.onload=()=>{const a=document.createElement("canvas");let c=r.width,d=r.height;c>d?c>e&&(d*=e/c,c=e):d>t&&(c*=t/d,d=t),a.width=c,a.height=d,a.getContext("2d").drawImage(r,0,0,c,d),a.toBlob(h=>n(h),i.type,o)},r.onerror=s})}async function Je(i,e){if(!e)return console.log("No file provided for upload"),null;if(!k.currentUser||k.currentUser.uid!==i)return console.error("User not authenticated or ID mismatch"),u("Please sign in to upload a profile image.",!0),null;try{const t=await Ke(e),o=new FileReader,s=await new Promise((a,c)=>{o.onload=()=>a(o.result.split(",")[1]),o.onerror=c,o.readAsDataURL(t)}),r=v(I,"users",i);return await x(r,{profileImage:s,updatedAt:new Date().toISOString()},{merge:!0}),console.log("Compressed profile image stored in Firestore for user:",i),s}catch(t){return console.error("Failed to store profile image in Firestore:",t),u(`Failed to store profile image: ${t.message}`,!0),null}}async function We(){if(console.log("handleSignup function called"),_){console.log("Signup already in progress, ignoring additional clicks");return}_=!0;const i=document.getElementById("signupButton");i&&(i.disabled=!0,i.textContent="Signing Up...",console.log("Signup button disabled and text updated")),localStorage.setItem("pendingRole","user");try{const e=new re,t=await ie(k,e);console.log("Sign-up successful, user:",t.user);const o=document.getElementById("usernameInput").value,s=document.getElementById("profileImageInput").files[0];console.log(s);const r=s?await Je(t.user.uid,s):null,a=v(I,"users",t.user.uid);await x(a,{username:o||t.user.displayName||"Anonymous User",profileImageUrl:r||null,createdAt:Date.now(),snippetsPosted:0},{merge:!0}),console.log("User profile saved to Firestore"),u("Sign-up successful! Redirecting to dashboard..."),window.location.href="/datasharingApp/"}catch(e){console.error("Signup failed:",e),u(`Sign-up failed: ${e.message}`,!0),_=!1,i&&(i.disabled=!1,i.textContent="Sign Up with Google")}finally{localStorage.removeItem("pendingRole")}}async function Ve(i){if(!T()){u("Please sign in to deposit.");return}try{if(!l)throw new Error("DHT not initialized");if(!i||i<=0)throw new Error("Invalid deposit amount");const t=await l.getBalance(l.keypair)+i;await l.putBalance(l.keypair,t),await l.dbAdd("transactions",{type:"deposit",amount:i,timestamp:Date.now()}),u(`Deposited ${i} DCT successfully!`),await Promise.all([R(),A(),F()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}}async function Ye(i){if(!T()){u("Please sign in to withdraw.");return}try{if(!l)throw new Error("DHT not initialized");if(!i||i<=0)throw new Error("Invalid withdrawal amount");const e=await l.getBalance(l.keypair);if(e<i)throw new Error("Insufficient balance");await l.putBalance(l.keypair,e-i),await l.dbAdd("transactions",{type:"withdraw",amount:i,timestamp:Date.now()}),u(`Withdrew ${i} DCT successfully!`),await Promise.all([R(),A(),F()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}}async function Ze(){console.log("signIn function called");try{k||(console.error("Firebase Auth is not initialized, initializing now..."),await pe());const i=new re,e=await ie(k,i);console.log("Sign-in successful, user:",e.user)}catch(i){console.error("Login failed:",i),u(`Login failed: ${i.message}`,!0)}}async function oe(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await be(k),u("Signed out successfully!")),l&&(l.destroy(),l=null,window.dht=null);const t=(await V()).transaction("store","readwrite").objectStore("store");await new Promise((o,n)=>{const s=t.delete("dcrypt_identity");s.onsuccess=()=>{console.log("Successfully deleted keypair from IndexedDB"),o()},s.onerror=()=>{console.error("Failed to delete keypair from IndexedDB:",s.error),n(new Error("Failed to delete keypair from IndexedDB"))}}),E=0,$()}catch(i){console.error("Sign-out failed:",i),u(`Sign-out failed: ${i.message}`,!0)}}async function Xe(i,e,t,o,n){var s,r;if(!T()){u("Please sign in to publish.");return}try{if(!l)throw new Error("DHT not initialized");if(!i)throw new Error("Title is required");let a=o||"",c="text/plain";if((s=n==null?void 0:n.files)!=null&&s.length){const y=n.files[0];c=y.type||"application/octet-stream",a=await new Promise((N,q)=>{const w=new FileReader;w.onload=z=>N(new Uint8Array(z.target.result)),w.onerror=()=>q(new Error("Failed to read file")),w.readAsArrayBuffer(y)})}else a=new TextEncoder().encode(a);const d=document.getElementById("modalPremium").checked,p=document.getElementById("modalPriceInput"),h=d&&p&&parseFloat(p.value)||0,g={content_type:c,title:i,description:e||"",tags:t?t.split(",").map(y=>y.trim()).filter(y=>y.length>0):[],isPremium:d,priceUsd:h},b=await l.publishIP(g,a,c),m=((r=k.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId"),B=v(I,"snippets",b),D={ipHash:b,title:i,description:e||"",tags:g.tags,isPremium:d,priceUsd:h,flagCount:0,likes:0,dislikes:0,createdAt:Date.now(),creatorId:m};console.log("Saving snippet to Firestore: ",D),await x(B,D,{merge:!0});const S=v(I,"users",m);await C(S,{snippetsPosted:O(1)}),u("Snippet published successfully!"),window.closePublishModal(),await Promise.all([j(),W(),R(),A(),F(),ge(m)])}catch(a){throw console.error("publishSnippet failed:",a),u(`Publish failed: ${a.message}`,!0),a}}async function fe(i){if(!T())return u("Please sign in to buy."),null;try{if(!l)throw new Error("DHT not initialized");if(!i)throw new Error("Hash is required");let e=await l.getIPmetadata(i);console.log("IP Object:",e);const n=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(n>0){const c=await l.getBalance(l.keypair);if(c<n)throw new Error("Insufficient balance");const d=n*.05;await l.distributeCommission(d),await l.putBalance(l.keypair,c-n),await l.dbAdd("transactions",{type:"buy",amount:n,timestamp:Date.now()})}else console.log("This snippet is free!"),await l.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:s,fileType:r}=await l.requestData(e);u("Snippet retrieved successfully!"),await Promise.all([R(),A(),F(),W()]);const a=prompt('Do you like this snippet? Type "like" or "dislike":');if(a!==null){const c=a.trim().toLowerCase();c==="like"||c==="dislike"?(await tt(i,c),u(`You ${c}d this snippet!`),await j()):u('Invalid input. Please type "like" or "dislike".',!0)}return Ge(s,r,e.metadata.title||e.metadata.content_type),{data:s,fileType:r}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}}async function et(i){var o;const e=i||((o=document.getElementById("buyHashInput"))==null?void 0:o.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await fe(e)&&u("Snippet purchased and displayed below!")}async function tt(i,e){var o;const t=((o=k.currentUser)==null?void 0:o.uid)||localStorage.getItem("nodeId");if(t)try{const n=v(I,"snippets",i,"feedback",t);await x(n,{action:e,timestamp:Date.now()});const s=v(I,"snippets",i);e==="like"?await C(s,{likes:O(1)}):e==="dislike"&&await C(s,{dislikes:O(1)})}catch(n){console.error("Failed to submit feedback:",n),u(`Failed to submit feedback: ${n.message}`,!0)}}async function nt(i){var t;if(!(((t=k.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const o=v(I,"snippets",i);await C(o,{flagCount:O(1)}),((await K(o)).data().flagCount||0)>=3?(await C(o,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await j()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(o){console.error("Failed to flag snippet:",o),u(`Failed to flag snippet: ${o.message}`,!0)}}async function ot(){const i=Oe();console.log("Generated nodeId:",i),localStorage.setItem("nodeId",i),localStorage.setItem("role","node");const e=v(I,"nodes",i);if(await x(e,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),console.log("Node registered in Firestore:",i),!window.location.pathname.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html";return}}async function st(){try{const i=localStorage.getItem("nodeId"),e=localStorage.getItem("role");if(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),sessionStorage.setItem("nodeId",i),sessionStorage.setItem("role",e),console.log("Moved to session storage"),e!=="node"||!i){u("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const t=ue(new TextEncoder().encode(CryptoJS.SHA256(i).toString(CryptoJS.enc.Hex).substring(0,40)));l=new le(t,!0),window.dht=l,await l.initDB(),await l.initSwarm(),await l.syncUserData();const n=(await l.dbGetAll("transactions")).filter(r=>r.type==="commission").reduce((r,a)=>r+(a.amount||0),0),s=document.getElementById("nodeEarnings");s&&(s.textContent=`Total Earnings: ${n.toFixed(2)} DCT`)}catch(i){console.error("Error initializing node instructions:",i),u(`Initialization failed: ${i.message}`,!0)}}async function ge(i){if(i)try{const e=v(I,"users",i),t=await K(e);if(t.exists()){const o=t.data(),n=document.getElementById("userName"),s=document.querySelector(".user-avatar"),r=document.getElementById("snippetsPosted");n&&(n.textContent=o.username||"Anonymous User"),s&&(o.profileImageUrl?s.innerHTML=`<img src="${o.profileImageUrl}" alt="Profile Image" class="w-12 h-12 rounded-full object-cover">`:s.innerHTML='<i class="fas fa-user text-lg"></i>'),r&&(r.textContent=o.snippetsPosted||0)}}catch(e){console.error("Failed to fetch user profile:",e),u("Failed to load user profile.",!0)}}async function rt(i){try{await navigator.clipboard.writeText(i),u("Hash copied to clipboard!")}catch(e){console.error("Failed to copy hash:",e),u("Failed to copy hash.",!0)}}document.addEventListener("DOMContentLoaded",async()=>{var o,n,s;if(console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname),window.location.pathname.includes("signup")){const r=document.getElementById("userSignupForm");r&&r.addEventListener("submit",async a=>{a.preventDefault(),await window.handleSignup()})}window.location.pathname.includes("node")&&st();try{await pe()}catch(r){console.error("Firebase initialization failed, aborting setup:",r),u("Firebase initialization failed. Please check your configuration.",!0);return}const i=localStorage.getItem("role"),e=localStorage.getItem("nodeId"),t=!(window.location.pathname.includes("node")||window.location.pathname.includes("signup.html")||window.location.pathname.includes("publish"));if(t&&i==="node"&&e&&(console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html"),t||window.location.pathname.includes("publish")){const r=await V(),a=await he(r);try{await Promise.all([new Promise(c=>{Y(k,async d=>{if(console.log("onAuthStateChanged triggered"),d)console.log("User is signed in:",d.uid),await ne(d.uid,r);else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{a?(console.log("Found keypair in IndexedDB, initializing app..."),await ne(a,r)):(console.log("No keypair found in IndexedDB."),t&&$())}catch(p){console.error("Failed to initialize IndexedDB or load keypair:",p),t&&$()}}c()},d=>{console.error("onAuthStateChanged error:",d),u("Failed to monitor authentication state.",!0),c()})})])}catch(c){console.error("Initialization error:",c),u("An error occurred during initialization.",!0)}}if(t){const r={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(o=document.getElementById("publishedItems"))==null?void 0:o.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};console.log("On index.html, setting up UI and event listeners"),i==="node"&&e&&(U=!0,console.log("Node detected, but should have been redirected already.")),(n=r.loginButton)==null||n.addEventListener("click",c=>{c.preventDefault(),console.log("Login button clicked"),Ze()}),(s=r.logoutButton)==null||s.addEventListener("click",c=>{c.preventDefault(),console.log("Logout button clicked"),oe()}),Y(k,c=>{var d,p,h,g,b,m;c?((d=r.signupButton)==null||d.classList.add("hidden"),(p=r.loginButton)==null||p.classList.add("hidden"),(h=r.logoutButton)==null||h.classList.remove("hidden"),r.searchButton.disabled=!1,r.depositButton.disabled=!1,r.withdrawButton.disabled=!1,r.toggleHistoryButton.disabled=!1,r.buyHashButton.disabled=!1):((g=r.signupButton)==null||g.classList.remove("hidden"),(b=r.loginButton)==null||b.classList.remove("hidden"),(m=r.logoutButton)==null||m.classList.add("hidden"),r.searchButton.disabled=!0,r.depositButton.disabled=!0,r.withdrawButton.disabled=!0,r.toggleHistoryButton.disabled=!0,r.buyHashButton.disabled=!0,$())});const a=document.getElementById("publishForm");a&&a.addEventListener("submit",async c=>{c.preventDefault();const d=document.getElementById("modalTitleInput").value,p=document.getElementById("modalDescriptionInput").value,h=document.getElementById("modalTagsInput").value,g=document.getElementById("modalContentInput").value,b=document.getElementById("modalFileInput");await window.publishSnippet(d,p,h,g,b)})}else console.log("Not on index.html, skipping index.html-specific setup");window.logout=oe,window.publishSnippet=Xe,window.buySnippet=fe,window.buySnippetByHash=et,window.toggleTransactionHistory=_e,window.flagSnippet=nt,window.handleSignup=We,window.becomeNode=ot,window.deposit=Ve,window.withdraw=Ye,window.redirectToPublish=Me,window.searchSnippets=ze,window.copyHash=rt,window.openBuyModal=je});
