import{getAuth as de,onAuthStateChanged as Q,setPersistence as ue,browserLocalPersistence as he,GoogleAuthProvider as X,signInWithPopup as ee,signOut as pe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as ge,getDocs as M,collection as _,doc as E,setDoc as R,updateDoc as H,increment as fe,getDoc as te}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import ye from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as me}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";import"https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.min.js";import"https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.birds.min.js";import"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.min.js";import"https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.topology.min.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const we="modulepreload",be=function(n){return"/datasharingApp/"+n},W={},Ie=function(e,t,r){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),c=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));o=Promise.allSettled(t.map(a=>{if(a=be(a),a in W)return;W[a]=!0;const l=a.endsWith(".css"),h=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${a}"]${h}`))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":we,l||(p.as="script"),p.crossOrigin="",p.href=a,c&&p.setAttribute("nonce",c),document.head.appendChild(p),l)return new Promise((f,y)=>{p.addEventListener("load",f),p.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${a}`)))})}))}function s(i){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=i,window.dispatchEvent(c),!c.defaultPrevented)throw i}return o.then(i=>{for(const c of i||[])c.status==="rejected"&&s(c.reason);return e().catch(s)})},ke={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},ne=me(ke),Be=de(ne),oe=ge(ne),ve=Object.freeze(Object.defineProperty({__proto__:null,auth:Be,db:oe},Symbol.toStringTag,{value:"Module"}));var Z;const x=(Z=globalThis.crypto)==null?void 0:Z.subtle;if(!x)throw new Error("Web Crypto API is not available in this environment");function Se(){const n=new Uint8Array(12);for(let e=0;e<12;e++)n[e]=Math.floor(Math.random()*256);return n}function De(n,e,t,r,o,s,i){return{content:new Uint8Array(n),content_type:e,tags:t||[],is_premium:r,price_usd:o,creator_id:new Uint8Array(s),file_type:i}}function Pe(n){return n.content}async function re(n){const e=await x.digest("SHA-256",n);return new Uint8Array(e)}async function xe(n,e,t){const r=n.content,o=Math.ceil(r.length/t),s=[];console.log("TRYING TO MAEK SHA 256"),e=await x.digest("SHA-256",new ArrayBuffer(e)),console.log("ERROR MAKING SHA 256 if u dont see this"+e);const i=await x.importKey("raw",new Uint8Array(e),{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<t;c++){const a=c*o,l=Math.min(a+o,r.length),h=r.slice(a,l),p=Se(),f=await x.encrypt({name:"AES-GCM",iv:p},i,h),y={data:new Uint8Array(f),nonce:p,index:c,file_type:n.file_type};s.push(y)}return s}function Ee(n){const e=new Uint8Array(new Int32Array([n.index]).buffer),t=new Uint8Array([...n.data,...n.nonce,...e]);return re(t)}function K(n){return n.index}async function Ce(n,e){const t=await x.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),r=await x.decrypt({name:"AES-GCM",iv:n.nonce},t,n.data);return new Uint8Array(r)}function Ae(n){return n.file_type}class se{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,console.log("DHT initialized with keypair:",e),console.log("Keypair length:",e.length),console.log("Keypair suitability:",e.length<=40?"Good":"Warning (large keypair)"),this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await M(_(oe,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(r=>{const o=`node-${r.id}`;this.nodes.add(o)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const r of t){const o=this.peers.get(r);if(o&&o.connected&&o.conn){const s=Date.now();await new Promise(c=>{const a=`${r}-ping-${Date.now()}`;o.conn.send({type:"ping",requestId:a}),this.pendingRequests.set(a,{resolve:c}),setTimeout(()=>{this.pendingRequests.has(a)&&(this.pendingRequests.delete(a),c())},2e3)});const i=Date.now()-s;e.push(i)}}this.averageLatency=e.length>0?e.reduce((r,o)=>r+o,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{console.log("Starting DHT database initialization...");const o=indexedDB.open("dcrypt_db",5);let s;o.onupgradeneeded=i=>{console.log("Upgrading DHT database to version",5),s=o.result,s.objectStoreNames.contains("store")||(s.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store in dht.js")),s.objectStoreNames.contains("transactions")||(s.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions in dht.js")),s.objectStoreNames.contains("offlineQueue")||(s.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue in dht.js")),s.objectStoreNames.contains("chunkCache")||(s.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache in dht.js")),console.log("DHT database upgrade completed")},o.onsuccess=()=>{s=o.result,console.log("DHT IndexedDB opened at version",s.version);const c=["store","transactions","offlineQueue","chunkCache"].filter(a=>!s.objectStoreNames.contains(a));c.length>0?(console.error("Missing stores after upgrade:",c),t(new Error(`Database upgrade failed: missing stores ${c.join(", ")}`))):(this.db=s,console.log("All required stores present, proceeding with DHT initialization"),e())},o.onerror=i=>{console.error("Failed to open DHT IndexedDB:",i.target.error),t(new Error(`Failed to open IndexedDB: ${i.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.keypair,balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{return this.peerId=this.isNode?`node-${this.keypair}`:this.keypair,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new ye(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),await new Promise((e,t)=>{this.peer.on("open",r=>{console.log(`PeerJS connection opened with ID: ${r}`),this.activeNodes.add(this.peerId),this.peer.on("connection",o=>{this.handleConnection(o)}),this.peer.on("error",o=>{var s;if(console.error("PeerJS error:",o.type,o.message),o.type==="peer-unavailable"){const i=(s=o.message.match(/Peer (.+) is unavailable/))==null?void 0:s[1];i&&this.handlePeerDisconnect(i)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),window.addEventListener("beforeunload",()=>{this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed on page unload"))}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),e()}),this.peer.on("error",r=>{console.error("PeerJS initialization error:",r),t(r)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,r)=>{!t.connected&&this.connectionAttempts.get(r)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${r}`),this.peers.delete(r),this.connectionAttempts.delete(r),this.activeNodes.delete(r))})}connectToPeer(e){var o;if((o=this.peers.get(e))!=null&&o.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const r=this.peer.connect(e,{reliable:!0});r.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:r}),this.activeNodes.add(e),this.connectionAttempts.delete(e),r.send({type:"handshake",peerId:this.peerId})}),r.on("data",s=>{this.handlePeerData(s,e)}),r.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),r.on("error",s=>{console.warn(`Connection error with peer ${e}: ${s.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",r=>{this.handlePeerData(r,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",r=>{console.error(`Connection error with peer ${t}:`,r),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const r=this.peers.get(t);r&&r.connected&&r.conn&&r.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const o=this.pendingRequests.get(e.requestId);o&&(o.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,r){try{await this.dbPut("chunkCache",{id:e,value:t});let o=this.chunkToPeerMap.get(e)||new Set;o.add(this.peerId),this.chunkToPeerMap.set(e,o),console.log(`Stored chunk ${e} from peer ${r}`)}catch(o){console.error(`Failed to store chunk ${e} from peer ${r}:`,o)}}async publishChunk(e,t,r,o){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let s=this.chunkToPeerMap.get(e)||new Set;if(s.add(this.peerId),this.chunkToPeerMap.set(e,s),this.activeNodes.size>0){const i=Array.from(this.activeNodes).filter(a=>a.startsWith("node-"));if(i.length>0){const a=r%i.length,l=i[a],h=this.peers.get(l);h&&h.connected&&h.conn&&(h.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),s.add(l),this.chunkToPeerMap.set(e,s),console.log(`Sent chunk ${e} to node ${l}`))}const c=Array.from(this.activeNodes).filter(a=>!a.startsWith("node-")&&a!==this.peerId);if(c.length>0){const a=c[Math.floor(Math.random()*c.length)],l=this.peers.get(a);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),s.add(a),this.chunkToPeerMap.set(e,s),console.log(`Sent chunk ${e} to random peer ${a}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:r,totalChunks:o});this.broadcastChunk(e)}catch(s){throw console.error("publishChunk failed:",s),s}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,r){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const o=Array.isArray(e.tags)?e.tags.map(m=>String(m).trim()).filter(m=>m!==""):[];console.log("Processed tags:",o);const s=!!e.isPremium,i=s?e.priceUsd||30:0,c=new Uint8Array(t),a=e.content_type||"",l=this.keypair,p=De(c,a,o,s,i,l,r||"text/plain"),f=Pe(p),y=await re(f),k=this.uint8ArrayToBase64Url(y),v=Array.from(this.activeNodes).filter(m=>m.startsWith("node-")),b=v.length>0?v.length:1,I=await xe(p,Array.from(this.keypair),b),S=[];for(let m=0;m<I.length;m++){const z=I[m],O=await Ee(z),le=this.uint8ArrayToBase64Url(O);S.push(le)}const D={...e,chunk_count:I.length,isPremium:s,priceUsd:s?i:0},U={metadata:D,chunks:S};this.knownObjects.set(k,U),await this.dbPut("store",{id:k,value:JSON.stringify(U)});for(let m=0;m<I.length;m++){const z=I[m],O=S[m];await this.publishChunk(O,z,m,I.length)}return this.activeNodes.size>0?this.broadcastIP(k,D,S):await this.queueOfflineOperation({type:"publishIP",ipHash:k,metadata:D,chunkHashes:S}),k}catch(o){throw console.error("publishIP failed:",o),o}}broadcastIP(e,t,r){const o={type:"ip",ipHash:e,metadata:t,chunkHashes:r,peerId:this.peerId};this.broadcast(o),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const r=[];for(const l of t.chunks){const h=await this.dbGet("chunkCache",l);if(h&&h.value){r.push({chunk:h.value,hash:l});continue}const p=this.chunkToPeerMap.get(l);if(!p||p.size===0)throw new Error(`No peers found with chunk ${l}`);const f=Array.from(p).filter(b=>b.startsWith("node-")),y=Array.from(p).filter(b=>!b.startsWith("node-"));let k=!1,v=null;for(const b of[...f,...y])if(this.activeNodes.has(b))try{const I=await this.fetchChunkFromPeer(b,l);await this.dbPut("chunkCache",{id:l,value:I}),r.push({chunk:I,hash:l}),k=!0;break}catch(I){v=I,console.error(`Failed to fetch chunk ${l} from peer ${b}:`,I);continue}if(!k)throw v||new Error(`No available peer for chunk ${l}`)}const o=r.sort((l,h)=>{const p=K(l.chunk),f=K(h.chunk);return p-f}),s=[];for(const{chunk:l}of o){const h=await Ce(l,this.keypair.split(""));s.push(h)}const i=new Uint8Array(s.reduce((l,h)=>l+h.length,0));let c=0;for(const l of s)i.set(l,c),c+=l.length;const a=Ae(o[0].chunk);return{data:i,fileType:a}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const r=this.peers.get(e);if(!r||!r.connected||!r.conn)throw new Error(`Peer ${e} is not connected`);const o=`${e}-${t}-${Date.now()}`,s={type:"chunkRequest",requestId:o,chunkHash:t,peerId:this.peerId};return r.conn.send(s),new Promise((i,c)=>{this.pendingRequests.set(o,{resolve:i,reject:c,hash:t}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),c(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:r,chunkHash:o}=e;this.dbGet("chunkCache",o).then(s=>{if(s&&s.value){const i={type:"chunkResponse",requestId:r,chunkHash:o,chunkData:s.value,peerId:this.peerId},c=this.peers.get(t);c&&c.connected&&c.conn&&(c.conn.send(i),console.log(`Sent chunk ${o} to peer ${t}`))}else console.warn(`Chunk ${o} not found for peer ${t}`)}).catch(s=>{console.error(`Failed to retrieve chunk ${o} for peer ${t}:`,s)})}handleChunkResponse均匀(e){const{requestId:t,chunkHash:r,chunkData:o}=e,s=this.pendingRequests.get(t);s&&(s.hash===r?s.resolve(o):s.reject(new Error(`Received chunk hash ${r} does not match requested hash ${s.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(o=>o.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const r=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${r} per node)`);for(const o of t){const s=o.replace("node-",""),i=this.base64UrlToUint8Array(s),a=await this.getBalance(i)+r;await this.putBalance(i,a),console.log(`Awarded ${r} to node ${o}. New balance: ${a}`);const l=this.peers.get(o);l&&l.connected&&l.conn&&l.conn.send({type:"commission",amount:r,newBalance:a,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+e);return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+e,value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.keypair,balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const r=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(o=>{r.clear().onsuccess=o});for(const o of e)try{switch(o.type){case"publishChunk":await this.publishChunk(o.chunkHash,o.chunkData,o.chunkIndex,o.totalChunks);break;case"publishIP":await this.broadcastIP(o.ipHash,o.metadata,o.chunkHashes);break;default:console.warn("Unknown offline operation type:",o.type)}}catch(s){console.error(`Failed to process offline operation ${o.type}:`,s),this.offlineQueue.push(o),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:o})}}async loadIdentity(){if(this.db)try{const e=await this.dbGet("store","dcrypt_identity");console.log(e+" HEYYYYY"),e&&e.value&&typeof e.value=="string"&&(this.keypair=this.base64UrlToUint8Array(e.value),console.log("Loaded identity from IndexedDB"),console.log(this.keypair))}catch(e){console.error("Failed to load identity:",e)}}async loadOfflineQueue(){if(this.db)try{const e=await this.dbGetAll("offlineQueue");this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}catch(e){console.error("Failed to load offline queue:",e)}}async loadTransactions(){if(this.db)try{const e=await this.dbGetAll("transactions");console.log("Loaded transactions:",e)}catch(e){console.error("Failed to load transactions:",e)}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).put(t);c.onsuccess=()=>r(),c.onerror=a=>o(new Error(`DB put failed: ${a.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).add(t);c.onsuccess=()=>r(),c.onerror=a=>o(new Error(`DB add failed: ${a.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,o)=>{const c=this.db.transaction(e,"readonly").objectStore(e).get(t);c.onsuccess=()=>r(c.result),c.onerror=a=>o(new Error(`DB get failed: ${a.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,r)=>{const i=this.db.transaction(e,"readonly").objectStore(e).getAll();i.onsuccess=()=>t(i.result),i.onerror=c=>r(new Error(`DB getAll failed: ${c.target.error.message}`))})}broadcast(e){this.activeNodes.forEach(t=>{if(t!==this.peerId){const r=this.peers.get(t);r&&r.connected&&r.conn&&r.conn.send(e)}})}uint8ArrayToBase64Url(e){const t=String.fromCharCode(...e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}base64UrlToUint8Array(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const r=atob(t),o=r.length,s=new Uint8Array(o);for(let i=0;i<o;i++)s[i]=r.charCodeAt(i);return s}destroy(){this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed")),this.peers.clear(),this.activeNodes.clear(),this.pendingRequests.clear()}}function Te(n){const e=String.fromCharCode(...n);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}let g=null,B=null,d=null,F=!1,P=0,q=!1,j=!1;async function ie(){console.log("Starting Firebase initialization...");try{const n=await Ie(()=>Promise.resolve().then(()=>ve),void 0);g=n.auth,B=n.db,await ue(g,he),console.log("Firebase services initialized successfully with local persistence"),console.log("Auth object:",g),console.log("Current Firebase user on init:",g.currentUser)}catch(n){throw console.error("Failed to initialize Firebase services:",n),u("Failed to initialize Firebase. Please try again later.",!0),n}}function $e(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,n=>{const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}function A(){return!!(g!=null&&g.currentUser)||localStorage.getItem("role")==="node"}function u(n,e=!1){const t=document.getElementById("toast");t&&(t.textContent=n,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function Ne(){if(!A()||!d){u("Please sign in and ensure the app is initialized before publishing.",!0);return}try{document.getElementById("publishModal").classList.add("active"),console.log("Opened publish modal")}catch(n){console.error("Failed to open publish modal:",n),u("Failed to open publish modal. Please try again.",!0)}}function w(n,e,t){const r=document.getElementById("background-loading");if(!r){console.error("Loading element #background-loading not found");return}n&&!e?(r.style.display="block",r.style.opacity=1):n&&e?Ue(r):Fe(r)}function Ue(n){var e=0,t=document.getElementById("loadingTextBox");t.style.opacity=e,n.style.opacity=e,n.style.display="block";var r=setInterval(function(){e+=.1,e>=1&&(e=1,clearInterval(r)),n.style.opacity=e,t.style.opacity=e,n.style.filter="alpha(opacity="+e*100+")",t.style.filter="alpha(opacity="+e*100+")"},50)}function Fe(n){var e=document.getElementById("loadingTextBox"),t=1,r=setInterval(function(){t-=.1,t<=0&&(t=0,n.style.display="none",clearInterval(r)),n.style.opacity=t,e.style.opacity=t,n.style.filter="alpha(opacity="+t*100+")",e.style.filter="alpha(opacity="+t*100+")"},50)}function C(){var e;const n={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance")};n.publishedItemsTableBody&&(n.publishedItemsTableBody.innerHTML=""),n.transactionList&&(n.transactionList.innerHTML="No transactions yet."),n.userBalanceElement&&(n.userBalanceElement.textContent="Balance: 0 DCT"),P=0,localStorage.removeItem("userKeypair"),localStorage.removeItem("peerId"),localStorage.removeItem("dhtInitialized"),console.log("Cleared persisted state from localStorage on sign-out")}async function T(){const n=document.getElementById("userBalance");if(n){if(!d){n.textContent="Balance: 0 DCT",P=0;return}try{P=await d.getBalance(d.keypair)||0,n.textContent=`Balance: ${P} DCT`}catch(e){console.error("Failed to update balance:",e),n.textContent="Balance: 0 DCT",P=0}}}async function $(){const n=document.getElementById("transactionList");if(n){if(!d){n.innerHTML="Not initialized.";return}try{const e=await d.dbGetAll("transactions");if(e.length===0){n.innerHTML="No transactions yet.";return}n.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),n.innerHTML="Failed to load transactions."}}}async function L(){var e;const n=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(n){n.innerHTML="";try{const t=await M(_(B,"snippets")),r={};t.forEach(o=>{r[o.id]=o.data()}),d&&d.knownObjects.forEach((o,s)=>{const i=r[s]||{averageRating:0,reviewStatus:"active"};if(i.reviewStatus!=="active")return;const a=(o.metadata.isPremium||!1)&&o.metadata.priceUsd||0,l=a>0?`${a} DCT`:"Free",h=document.createElement("tr");h.innerHTML=`
          <td class="py-2 px-4">${o.metadata.content_type}</td>
          <td class="py-2 px-4">${o.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${o.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${i.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${s}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${l})</button>
            <button onclick="window.flagSnippet('${s}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,n.appendChild(h)})}catch(t){console.error("Failed to update live feed:",t),u("Failed to load live feed.",!0)}}}async function N(){var e;const n=((e=g.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(n)try{const t=E(B,"users",n),r=d?await d.getBalance(d.keypair):0;await R(t,{balance:r,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function Re(){const n=document.getElementById("transactionHistory");n&&(n.style.display=n.style.display==="none"?"block":"none")}function Le(n,e,t){const r=document.getElementById("snippetDisplay");if(!r)return;r.innerHTML="";const o=document.createElement("div");o.className="p-4 bg-gray-800 rounded-lg mt-4";const s=document.createElement("h3");if(s.className="text-lg font-semibold mb-2",s.textContent=t||"Snippet Content",o.appendChild(s),e.startsWith("text")){const i=new TextDecoder().decode(n),c=document.createElement("pre");c.className="text-sm text-gray-300 whitespace-pre-wrap",c.textContent=i,o.appendChild(c)}else if(e.startsWith("image")){const i=new Blob([n],{type:e}),c=URL.createObjectURL(i),a=document.createElement("img");a.src=c,a.className="max-w-full h-auto rounded",a.onload=()=>URL.revokeObjectURL(c),o.appendChild(a)}else{const i=new Blob([n],{type:e}),c=URL.createObjectURL(i),a=document.createElement("a");a.href=c,a.download=t||"downloaded_file",a.className="text-blue-400 hover:underline",a.textContent="Download File",a.onclick=()=>setTimeout(()=>URL.revokeObjectURL(c),1e3),o.appendChild(a)}r.appendChild(o)}async function G(){return new Promise((e,t)=>{console.log("Starting IndexedDB initialization...");const r=indexedDB.open("dcrypt_db");r.onsuccess=()=>{const o=r.result,s=o.version;console.log("Current IndexedDB version:",s),o.close();const i=indexedDB.open("dcrypt_db",Math.max(s,5));i.onupgradeneeded=c=>{const a=i.result;console.log("Upgrading database to version",5),a.objectStoreNames.contains("store")||(a.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),a.objectStoreNames.contains("transactions")||(a.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),a.objectStoreNames.contains("offlineQueue")||(a.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),a.objectStoreNames.contains("chunkCache")||(a.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache")),console.log("Database upgrade completed")},i.onsuccess=()=>{const c=i.result;console.log("IndexedDB opened successfully at version",c.version),e(c)},i.onerror=()=>{console.error("Failed to open IndexedDB:",i.error),t(new Error(`Failed to open IndexedDB: ${i.error.message}`))}},r.onerror=()=>{console.error("Failed to check IndexedDB version:",r.error),t(new Error(`Failed to check IndexedDB version: ${r.error.message}`))}})}async function ae(n){return new Promise((e,t)=>{try{const s=n.transaction("store","readonly").objectStore("store").get("dcrypt_identity");s.onsuccess=()=>{var c;const i=(c=s.result)==null?void 0:c.value;i&&typeof i=="string"?(console.log("Loaded keypair from IndexedDB:",i),console.log("Keypair length:",i.length),console.log("Is valid UID:",/^[a-zA-Z0-9]{20,40}$/.test(i)?"Yes":"No (possibly invalid or oversized)"),e(i)):(console.log("No valid keypair found in IndexedDB."),e(null))},s.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",s.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(r){console.error('Error accessing "store" object store:',r),t(r)}})}async function J(n,e){return new Promise((t,r)=>{try{console.log("Storing keypair in IndexedDB:",e),console.log("Keypair length:",e.length),console.log("Production readiness:",e.length<=40?"Good (compact UID)":"Warning (potentially too large)");const i=n.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});i.onsuccess=()=>{console.log("Successfully stored keypair in IndexedDB"),t()},i.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",i.error),r(new Error("Failed to store keypair in IndexedDB"))}}catch(o){console.error('Error storing keypair in "store" object store:',o),r(o)}})}async function Y(n){if(j){console.log("Initialization already in progress, skipping...");return}j=!0,console.log("Initializing app with userId:",n);try{const e=await G();let t=await ae(e);if(t instanceof Uint8Array&&(t=Te(t)),!t&&n)console.log("No keypair found, using userId as keypair:",n),await J(e,n),t=n;else if(t)t.length>40&&(console.warn("Existing keypair is unusually large:",t.length,"characters. Overwriting with userId."),t=n,await J(e,n));else throw new Error("No keypair available and no userId provided to create one");F=await ze(n),console.log(`User is ${F?"":"not "}a node.`),console.log("Initializing DHT with keypair:",t),console.log("Keypair length for DHT:",t.length),d=new se(t,F),window.dht=d,await d.initDB(),console.log("DHT database initialized."),await d.initSwarm(),console.log("DHT swarm initialized."),await d.syncUserData(),console.log("User data synced."),await Promise.all([L(),T(),$()]),console.log("UI updated.")}catch(e){console.error("Error initializing application:",e),e.message.includes("ID conflict")?u("Failed to connect to the network due to an ID conflict. Please try signing out and signing in again.",!0):u(`Initialization failed: ${e.message}`,!0),d&&d.destroy(),d=null,window.dht=null,P=0,C()}finally{j=!1}N()}async function ze(n){try{const e=E(B,"nodes",n);return(await te(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Oe(){if(console.log("handleSignup function called"),q){console.log("Signup already in progress, ignoring additional clicks");return}q=!0;const n=document.getElementById("signupButton");n&&(n.disabled=!0,n.textContent="Signing Up...",console.log("Signup button disabled and text updated")),localStorage.setItem("pendingRole","user");try{console.log("Auth state before signInWithPopup in handleSignup:",g);const e=new X;console.log("Initiating signInWithPopup for signup");const t=await ee(g,e);console.log("Sign-up successful, user:",t.user),window.location.href="/datasharingApp/"}catch(e){console.error("Signup failed:",e),u(`Sign-up failed: ${e.message}`,!0),q=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google")}localStorage.removeItem("pendingRole")}async function qe(n){if(!A()){u("Please sign in to deposit.");return}w(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+n;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:n,timestamp:Date.now()}),u(`Deposited ${n} DCT successfully!`),await Promise.all([$(),T(),N()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}finally{w(!1)}}async function je(n){if(!A()){u("Please sign in to withdraw.");return}w(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<n)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-n),await d.dbAdd("transactions",{type:"withdraw",amount:n,timestamp:Date.now()}),u(`Withdrew ${n} DCT successfully!`),await Promise.all([$(),T(),N()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}finally{w(!1)}}async function He(){console.log("signIn function called");try{g||(console.error("Firebase Auth is not initialized, initializing now..."),await ie()),console.log("Auth state before signInWithPopup:",g);const n=new X;console.log("Initiating signInWithPopup"),w(!0,!0);const e=await ee(g,n);console.log("Sign-in successful, user:",e.user)}catch(n){console.error("Login failed:",n),u(`Login failed: ${n.message}`,!0)}finally{w(!1)}}async function V(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await pe(g),u("Signed out successfully!")),d&&(d.destroy(),d=null,window.dht=null);const t=(await G()).transaction("store","readwrite").objectStore("store");await new Promise((r,o)=>{const s=t.delete("dcrypt_identity");s.onsuccess=()=>{console.log("Successfully deleted keypair from IndexedDB"),r()},s.onerror=()=>{console.error("Failed to delete keypair from IndexedDB:",s.error),o(new Error("Failed to delete keypair from IndexedDB"))}}),P=0,C()}catch(n){console.error("Sign-out failed:",n),u(`Sign-out failed: ${n.message}`,!0)}}async function Me(n,e,t,r,o){var s,i;if(!A()){u("Please sign in to publish.");return}w(!0,!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Title is required");let c=r||"",a="text/plain";if((s=o==null?void 0:o.files)!=null&&s.length){const b=o.files[0];a=b.type||"application/octet-stream",c=await new Promise((I,S)=>{const D=new FileReader;D.onload=U=>I(new Uint8Array(U.target.result)),D.onerror=()=>S(new Error("Failed to read file")),D.readAsArrayBuffer(b)})}else c=new TextEncoder().encode(c);const l=document.getElementById("modalPremium").checked,h=document.getElementById("modalPriceInput"),p=l&&h&&parseFloat(h.value)||0,f={content_type:n,description:e||"",tags:t?t.split(",").map(b=>b.trim()):[],isPremium:l,priceUsd:p},y=await d.publishIP(f,c,a),k=((i=g.currentUser)==null?void 0:i.uid)||localStorage.getItem("nodeId"),v=E(B,"snippets",y);await R(v,{ipHash:y,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:k},{merge:!0}),u("Snippet published successfully!"),window.closePublishModal(),await Promise.all([L(),$(),T(),N()])}catch(c){console.error("publishSnippet failed:",c),u(`Publish failed: ${c.message}`,!0)}finally{w(!1)}}async function ce(n){if(!A())return u("Please sign in to buy."),null;w(!0,!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Hash is required");const e=d.knownObjects.get(n);if(!e)throw new Error("Snippet not found");const o=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(o>0){const a=await d.getBalance(d.keypair);if(a<o)throw new Error("Insufficient balance");const l=o*.05;await d.distributeCommission(l),await d.putBalance(d.keypair,a-o),await d.dbAdd("transactions",{type:"buy",amount:o,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:s,fileType:i}=await d.requestData(n);u("Snippet retrieved successfully!"),await Promise.all([$(),T(),N()]);const c=prompt("Please rate this snippet (1-5 stars):","5");if(c!==null){const a=parseInt(c);a>=1&&a<=5?(await Ge(n,a),u(`Rated ${a} stars!`),await L()):u("Invalid rating. Please enter a number between 1 and 5.",!0)}return Le(s,i,e.metadata.content_type),{data:s,fileType:i}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}finally{w(!1)}}async function _e(n){var r;const e=n||((r=document.getElementById("buyHashInput"))==null?void 0:r.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await ce(e)&&u("Snippet purchased and displayed below!")}async function Ge(n,e){var r;const t=((r=g.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId");if(t)try{const o=E(B,"snippets",n,"ratings",t);await R(o,{rating:e,timestamp:Date.now()});const i=(await M(_(B,"snippets",n,"ratings"))).docs.map(l=>l.data().rating),c=i.length>0?i.reduce((l,h)=>l+h,0)/i.length:0,a=E(B,"snippets",n);await H(a,{averageRating:c.toFixed(1)})}catch(o){console.error("Failed to submit rating:",o),u(`Failed to submit rating: ${o.message}`,!0)}}async function Qe(n){var t;if(!(((t=g.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const r=E(B,"snippets",n);await H(r,{flagCount:fe(1)}),((await te(r)).data().flagCount||0)>=3?(await H(r,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await L()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(r){console.error("Failed to flag snippet:",r),u(`Failed to flag snippet: ${r.message}`,!0)}}async function We(){const n=$e();console.log(n),localStorage.setItem("nodeId",n),localStorage.setItem("role","node");const e=E(B,"nodes",n);if(await R(e,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!window.location.pathname.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html",w(!1);return}}async function Ke(){try{const n=localStorage.getItem("nodeId"),e=localStorage.getItem("role");if(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),sessionStorage.setItem("nodeId",n),sessionStorage.setItem("role",e),console.log("Moved to session storage"),e!=="node"||!n){u("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}d=new se(n,!0),await d.initDB(),await d.initSwarm(),await d.syncUserData();const r=(await d.dbGetAll("transactions")).filter(s=>s.type==="commission").reduce((s,i)=>s+(i.amount||0),0),o=document.getElementById("nodeEarnings");o&&(o.textContent=`Total Earnings: ${r.toFixed(2)} DCT`)}catch(n){console.error("Error initializing node instructions:",n),u(`Initialization failed: ${n.message}`)}}document.addEventListener("DOMContentLoaded",async()=>{var r,o,s;console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname),window.location.pathname.includes("signup")&&w(!1,!1),window.location.pathname.includes("node")&&Ke();try{await ie()}catch(i){console.error("Firebase initialization failed, aborting setup:",i),u("Firebase initialization failed. Please check your configuration.",!0);return}const n=localStorage.getItem("role"),e=localStorage.getItem("nodeId"),t=!(window.location.pathname.includes("node")||window.location.pathname.includes("signup.html")||window.location.pathname.includes("publish"));if(t&&n==="node"&&e&&(console.log("Node detected on index.html, redirecting to node-instructions.html"),w(!1,!0),window.location.href="/datasharingApp/node-instructions.html"),t||window.location.pathname.includes("publish")){t&&w(!0);const i=new Promise(c=>setTimeout(c,3500));try{await Promise.all([new Promise(c=>{Q(g,async a=>{if(console.log("onAuthStateChanged triggered"),a)console.log("User is signed in:",a.uid),await Y(a.uid);else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{const l=await G(),h=await ae(l);h?(console.log("Found keypair in IndexedDB, initializing app..."),await Y(h)):(console.log("No keypair found in IndexedDB."),t&&C())}catch(l){console.error("Failed to initialize IndexedDB or load keypair:",l),t&&C()}}c()},a=>{console.error("onAuthStateChanged error:",a),u("Failed to monitor authentication state.",!0),c()})}),i])}catch(c){console.error("Initialization error:",c),u("An error occurred during initialization.",!0)}finally{t&&w(!1)}}if(t){const i={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(r=document.getElementById("publishedItems"))==null?void 0:r.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};console.log("On index.html, setting up UI and event listeners"),n==="node"&&e&&(F=!0,console.log("Node detected, but should have been redirected already.")),(o=i.loginButton)==null||o.addEventListener("click",a=>{a.preventDefault(),console.log("Login button clicked"),He()}),(s=i.logoutButton)==null||s.addEventListener("click",a=>{a.preventDefault(),console.log("Logout button clicked"),V()}),Q(g,a=>{var l,h,p,f,y,k;a?((l=i.signupButton)==null||l.classList.add("hidden"),(h=i.loginButton)==null||h.classList.add("hidden"),(p=i.logoutButton)==null||p.classList.remove("hidden"),i.searchButton.disabled=!1,i.depositButton.disabled=!1,i.withdrawButton.disabled=!1,i.toggleHistoryButton.disabled=!1,i.buyHashButton.disabled=!1):((f=i.signupButton)==null||f.classList.remove("hidden"),(y=i.loginButton)==null||y.classList.remove("hidden"),(k=i.logoutButton)==null||k.classList.add("hidden"),i.searchButton.disabled=!0,i.depositButton.disabled=!0,i.withdrawButton.disabled=!0,i.toggleHistoryButton.disabled=!0,i.buyHashButton.disabled=!0,C())});const c=document.getElementById("publishForm");c&&c.addEventListener("submit",async a=>{a.preventDefault();const l=document.getElementById("modalTitleInput").value,h=document.getElementById("modalDescriptionInput").value,p=document.getElementById("modalTagsInput").value,f=document.getElementById("modalContentInput").value,y=document.getElementById("modalFileInput");await window.publishSnippet(l,h,p,f,y)})}else console.log("Not on index.html, skipping index.html-specific setup");window.logout=V,window.publishSnippet=Me,window.buySnippet=ce,window.buySnippetByHash=_e,window.toggleTransactionHistory=Re,window.flagSnippet=Qe,window.handleSignup=Oe,window.becomeNode=We,window.deposit=qe,window.withdraw=je,window.redirectToPublish=Ne});
