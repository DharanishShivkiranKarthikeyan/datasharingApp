import{getAuth as pe,GoogleAuthProvider as j,signInWithPopup as M,onAuthStateChanged as ge,setPersistence as fe,browserLocalPersistence as me,signOut as ye}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as we,getDocs as _,collection as G,doc as D,setDoc as $,updateDoc as H,increment as be,getDoc as oe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import Be from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as Ie}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();const ke="modulepreload",xe=function(s){return"/datasharingApp/"+s},J={},ve=function(e,t,n){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),c=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));o=Promise.allSettled(t.map(i=>{if(i=xe(i),i in J)return;J[i]=!0;const l=i.endsWith(".css"),d=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${d}`))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":ke,l||(p.as="script"),p.crossOrigin="",p.href=i,c&&p.setAttribute("nonce",c),document.head.appendChild(p),l)return new Promise((w,b)=>{p.addEventListener("load",w),p.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${i}`)))})}))}function r(a){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=a,window.dispatchEvent(c),!c.defaultPrevented)throw a}return o.then(a=>{for(const c of a||[])c.status==="rejected"&&r(c.reason);return e().catch(r)})},Se={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},se=Ie(Se),re=pe(se),F=we(se),Pe=Object.freeze(Object.defineProperty({__proto__:null,auth:re,db:F},Symbol.toStringTag,{value:"Module"}));var ne;const T=(ne=globalThis.crypto)==null?void 0:ne.subtle;if(!T)throw new Error("Web Crypto API is not available in this environment");function De(){const s=new Uint8Array(12);for(let e=0;e<12;e++)s[e]=Math.floor(Math.random()*256);return s}function Ee(s,e,t,n,o,r,a){return{content:new Uint8Array(s),content_type:e,tags:t||[],is_premium:n,price_usd:o,creator_id:new Uint8Array(r),file_type:a}}function Ae(s){return s.content}async function ie(s){const e=await T.digest("SHA-256",s);return new Uint8Array(e)}async function Ce(s,e,t){const n=s.content,o=Math.ceil(n.length/t),r=[],a=await T.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<t;c++){const i=c*o,l=Math.min(i+o,n.length),d=n.slice(i,l),p=De(),w=await T.encrypt({name:"AES-GCM",iv:p},a,d),b={data:new Uint8Array(w),nonce:p,index:c,file_type:s.file_type};r.push(b)}return r}function $e(s){const e=new Uint8Array(new Int32Array([s.index]).buffer),t=new Uint8Array([...s.data,...s.nonce,...e]);return ie(t)}function V(s){return s.index}async function Te(s,e){const t=await T.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),n=await T.decrypt({name:"AES-GCM",iv:s.nonce},t,s.data);return new Uint8Array(n)}function Ue(s){return s.file_type}class ae{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await _(G(F,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(n=>{const o=`node-${n.id}`;this.nodes.add(o)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const n of t){const o=this.peers.get(n);if(o&&o.connected&&o.conn){const r=Date.now();await new Promise(c=>{const i=`${n}-ping-${Date.now()}`;o.conn.send({type:"ping",requestId:i}),this.pendingRequests.set(i,{resolve:c}),setTimeout(()=>{this.pendingRequests.has(i)&&(this.pendingRequests.delete(i),c())},2e3)});const a=Date.now()-r;e.push(a)}}this.averageLatency=e.length>0?e.reduce((n,o)=>n+o,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db",4);let o;n.onupgradeneeded=r=>{console.log("onupgradeneeded triggered for dcrypt_db version",r.target.result.version),o=n.result,o.objectStoreNames.contains("store")||(o.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),o.objectStoreNames.contains("transactions")||(o.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),o.objectStoreNames.contains("offlineQueue")||(o.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),o.objectStoreNames.contains("chunkCache")||(o.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache"))},n.onsuccess=()=>{this.db=n.result,console.log("IndexedDB opened successfully"),Promise.all([this.loadIdentity(),this.loadOfflineQueue(),this.loadTransactions()]).then(()=>{console.log("IndexedDB initialized successfully"),e()}).catch(r=>{console.error("Failed to load data after IndexedDB initialization:",r),t(new Error(`Failed to load data: ${r.message}`))})},n.onerror=r=>{console.error("Failed to initialize IndexedDB:",r.target.error),t(new Error(`Failed to initialize IndexedDB: ${r.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{const e=new TextDecoder().decode(this.keypair);return this.peerId=this.isNode?`node-${e}`:e,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new Be(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),new Promise((t,n)=>{this.peer.on("open",o=>{console.log(`PeerJS connection opened with ID: ${o}`),this.activeNodes.add(this.peerId),this.peer.on("connection",r=>{this.handleConnection(r)}),this.peer.on("error",r=>{var a;if(console.error("PeerJS error:",r.type,r.message),r.type==="peer-unavailable"){const c=(a=r.message.match(/Peer (.+) is unavailable/))==null?void 0:a[1];c&&this.handlePeerDisconnect(c)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),t()}),this.peer.on("error",o=>{console.error("Failed to initialize PeerJS:",o),n(o)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,n)=>{!t.connected&&this.connectionAttempts.get(n)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${n}`),this.peers.delete(n),this.connectionAttempts.delete(n),this.activeNodes.delete(n))})}connectToPeer(e){var o;if((o=this.peers.get(e))!=null&&o.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const n=this.peer.connect(e,{reliable:!0});n.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:n}),this.activeNodes.add(e),this.connectionAttempts.delete(e),n.send({type:"handshake",peerId:this.peerId})}),n.on("data",r=>{this.handlePeerData(r,e)}),n.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),n.on("error",r=>{console.warn(`Connection error with peer ${e}: ${r.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",n=>{this.handlePeerData(n,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",n=>{console.error(`Connection error with peer ${t}:`,n),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const n=this.peers.get(t);n&&n.connected&&n.conn&&n.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const o=this.pendingRequests.get(e.requestId);o&&(o.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,n){try{await this.dbPut("chunkCache",{id:e,value:t});let o=this.chunkToPeerMap.get(e)||new Set;o.add(this.peerId),this.chunkToPeerMap.set(e,o),console.log(`Stored chunk ${e} from peer ${n}`)}catch(o){console.error(`Failed to store chunk ${e} from peer ${n}:`,o)}}async publishChunk(e,t,n,o){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let r=this.chunkToPeerMap.get(e)||new Set;if(r.add(this.peerId),this.chunkToPeerMap.set(e,r),this.activeNodes.size>0){const a=Array.from(this.activeNodes).filter(i=>i.startsWith("node-"));if(a.length>0){const i=n%a.length,l=a[i],d=this.peers.get(l);d&&d.connected&&d.conn&&(d.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(l),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to node ${l}`))}const c=Array.from(this.activeNodes).filter(i=>!i.startsWith("node-")&&i!==this.peerId);if(c.length>0){const i=c[Math.floor(Math.random()*c.length)],l=this.peers.get(i);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(i),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to random peer ${i}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:n,totalChunks:o});this.broadcastChunk(e)}catch(r){throw console.error("publishChunk failed:",r),r}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,n){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const o=Array.isArray(e.tags)?e.tags.map(g=>typeof g!="string"?(console.warn(`Invalid tag: ${g}, converting to string`),String(g)):g).filter(g=>g.trim()!==""):[];console.log("Processed tags:",o);const r=!!e.isPremium,a=r?e.priceUsd||30:0,c=new Uint8Array(t),i=e.content_type||"",l=this.keypair instanceof Uint8Array?this.keypair:new Uint8Array(this.keypair),p=Ee(c,i,o,r,a,l,n||"text/plain"),w=Ae(p),b=await ie(w),B=this.uint8ArrayToHex(b),x=Array.from(this.activeNodes).filter(g=>g.startsWith("node-")),m=x.length>0?x.length:1,y=await Ce(p,Array.from(this.keypair),m),v=[];for(let g=0;g<y.length;g++){const P=y[g],E=await $e(P),q=this.uint8ArrayToHex(E);v.push(q)}const S={...e,chunk_count:y.length,isPremium:r,priceUsd:r?a:0},A={metadata:S,chunks:v};this.knownObjects.set(B,A),await this.dbPut("store",{id:B,value:JSON.stringify(A)});for(let g=0;g<y.length;g++){const P=y[g],E=v[g];await this.publishChunk(E,P,g,y.length)}return this.activeNodes.size>0?this.broadcastIP(B,S,v):await this.queueOfflineOperation({type:"publishIP",ipHash:B,metadata:S,chunkHashes:v}),B}catch(o){throw console.error("publishIP failed:",o),o}}broadcastIP(e,t,n){const o={type:"ip",ipHash:e,metadata:t,chunkHashes:n,peerId:this.peerId};this.broadcast(o),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const n=[];for(const l of t.chunks){const d=await this.dbGet("chunkCache",l);if(d&&d.value){n.push({chunk:d.value,hash:l});continue}const p=this.chunkToPeerMap.get(l);if(!p||p.size===0)throw new Error(`No peers found with chunk ${l}`);const w=Array.from(p).filter(m=>m.startsWith("node-")),b=Array.from(p).filter(m=>!m.startsWith("node-"));let B=!1,x=null;for(const m of[...w,...b])if(this.activeNodes.has(m))try{const y=await this.fetchChunkFromPeer(m,l);await this.dbPut("chunkCache",{id:l,value:y}),n.push({chunk:y,hash:l}),B=!0;break}catch(y){x=y,console.error(`Failed to fetch chunk ${l} from peer ${m}:`,y);continue}if(!B)throw x||new Error(`No available peer for chunk ${l}`)}const o=n.sort((l,d)=>{const p=V(l.chunk),w=V(d.chunk);return p-w}),r=[];for(const{chunk:l}of o){const d=await Te(l,Array.from(this.keypair));r.push(d)}const a=new Uint8Array(r.reduce((l,d)=>l+d.length,0));let c=0;for(const l of r)a.set(l,c),c+=l.length;const i=Ue(o[0].chunk);return{data:a,fileType:i}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const n=this.peers.get(e);if(!n||!n.connected||!n.conn)throw new Error(`Peer ${e} is not connected`);const o=`${e}-${t}-${Date.now()}`,r={type:"chunkRequest",requestId:o,chunkHash:t,peerId:this.peerId};return n.conn.send(r),new Promise((a,c)=>{this.pendingRequests.set(o,{resolve:a,reject:c,hash:t}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),c(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:n,chunkHash:o}=e;this.dbGet("chunkCache",o).then(r=>{if(r&&r.value){const a={type:"chunkResponse",requestId:n,chunkHash:o,chunkData:r.value,peerId:this.peerId},c=this.peers.get(t);c&&c.connected&&c.conn&&(c.conn.send(a),console.log(`Sent chunk ${o} to peer ${t}`))}else console.warn(`Chunk ${o} not found for peer ${t}`)}).catch(r=>{console.error(`Failed to retrieve chunk ${o} for peer ${t}:`,r)})}handleChunkResponse(e){const{requestId:t,chunkHash:n,chunkData:o}=e,r=this.pendingRequests.get(t);r&&(r.hash===n?r.resolve(o):r.reject(new Error(`Received chunk hash ${n} does not match requested hash ${r.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(o=>o.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const n=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${n} per node)`);for(const o of t){const r=this.hexToUint8Array(o.replace("node-","")),c=await this.getBalance(r)+n;await this.putBalance(r,c),console.log(`Awarded ${n} to node ${o}. New balance: ${c}`);const i=this.peers.get(o);i&&i.connected&&i.conn&&i.conn.send({type:"commission",amount:n,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+this.uint8ArrayToHex(e));return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+this.uint8ArrayToHex(e),value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const n=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(o=>{n.clear().onsuccess=o});for(const o of e)try{switch(o.type){case"publishChunk":await this.publishChunk(o.chunkHash,o.chunkData,o.chunkIndex,o.totalChunks);break;case"publishIP":await this.broadcastIP(o.ipHash,o.metadata,o.chunkHashes);break;default:console.warn("Unknown offline operation type:",o.type)}}catch(r){console.error(`Failed to process offline operation ${o.type}:`,r),this.offlineQueue.push(o),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:o})}}async loadIdentity(){if(this.db)try{const e=await this.dbGet("store","dcrypt_identity");e&&e.value&&typeof e.value=="string"&&(this.keypair=this.hexToUint8Array(e.value),console.log("Loaded identity from IndexedDB"))}catch(e){console.error("Failed to load identity:",e)}}async loadOfflineQueue(){if(this.db)try{const e=await this.dbGetAll("offlineQueue");this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}catch(e){console.error("Failed to load offline queue:",e)}}async loadTransactions(){if(this.db)try{const e=await this.dbGetAll("transactions");console.log("Loaded transactions:",e)}catch(e){console.error("Failed to load transactions:",e)}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).put(t);c.onsuccess=()=>n(),c.onerror=i=>o(new Error(`DB put failed: ${i.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).add(t);c.onsuccess=()=>n(),c.onerror=i=>o(new Error(`DB add failed: ${i.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,o)=>{const c=this.db.transaction(e,"readonly").objectStore(e).get(t);c.onsuccess=()=>n(c.result),c.onerror=i=>o(new Error(`DB get failed: ${i.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).getAll();a.onsuccess=()=>t(a.result),a.onerror=c=>n(new Error(`DB getAll failed: ${c.target.error.message}`))})}uint8ArrayToHex(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("")}hexToUint8Array(e){if(!e||typeof e!="string")return new Uint8Array(0);const t=e.match(/.{1,2}/g);return t?new Uint8Array(t.map(n=>parseInt(n,16))):new Uint8Array(0)}broadcast(e){this.peers.forEach((t,n)=>{t.connected&&t.conn&&t.conn.send(e)})}}(window.location.pathname==="/datasharingApp/signup.html"||window.location.pathname==="/signup.html")&&document.addEventListener("DOMContentLoaded",()=>{const s=document.getElementById("signupButton");if(!s){console.error("Sign-up button not found");return}s.addEventListener("click",Le)});async function Le(){Y(!0);try{const s=new j,t=(await M(re,s)).user;if(console.log("Signed up user UID:",t.uid),document.querySelector('input[name="role"]:checked').value==="node"){const r=D(F,"nodes",t.uid);await $(r,{uid:t.uid,createdAt:Date.now(),status:"active"}),console.log("User registered as a node"),z("Signed up as a node successfully!"),window.location.href="/datasharingApp/node-instructions.html"}else{const r=D(F,"users",t.uid);await $(r,{uid:t.uid,createdAt:Date.now(),balance:0},{merge:!0}),console.log("User registered as a regular user"),z("Signed up successfully!"),window.location.href="/datasharingApp/index.html"}}catch(s){console.error("Sign-up failed:",s),z(`Sign-up failed: ${s.message}`)}finally{Y(!1)}}function z(s){const e=document.getElementById("toast");e&&(e.textContent=s,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function Y(s){const e=document.getElementById("loading");e&&(e.style.display=s?"flex":"none")}if(window.location.pathname==="/datasharingApp/node-instructions.html"||window.location.pathname==="/node-instructions.html"){let s;document.addEventListener("DOMContentLoaded",async()=>{X(!0);try{const e=localStorage.getItem("nodeId");if(localStorage.getItem("role")!=="node"||!e){Z("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const o=new TextEncoder().encode(e);s=new ae(o,!0),await s.initDB(),await s.initSwarm(),await s.syncUserData();const a=(await s.dbGetAll("transactions")).filter(i=>i.type==="commission").reduce((i,l)=>i+(l.amount||0),0),c=document.getElementById("nodeEarnings");c&&(c.textContent=`Total Earnings: ${a.toFixed(2)} DCT`)}catch(e){console.error("Error initializing node instructions:",e),Z(`Initialization failed: ${e.message}`)}finally{X(!1)}})}function Z(s){const e=document.getElementById("toast");e&&(e.textContent=s,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function X(s){const e=document.getElementById("loading");e&&(e.style.display=s?"flex":"none")}let f=null,k=null,u=null,L=!1,C=0,U=!1,O=!1;async function ce(){console.log("Starting Firebase initialization...");try{const s=await ve(()=>Promise.resolve().then(()=>Pe),void 0);f=s.auth,k=s.db,await fe(f,me),console.log("Firebase services initialized successfully with local persistence"),console.log("Auth object:",f),console.log("Current Firebase user on init:",f.currentUser)}catch(s){throw console.error("Failed to initialize Firebase services:",s),h("Failed to initialize Firebase. Please try again later.",!0),s}}function Fe(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,s=>{const e=Math.random()*16|0;return(s==="x"?e:e&3|8).toString(16)})}function le(){return!!(f!=null&&f.currentUser)||localStorage.getItem("role")==="node"}function h(s,e=!1){const t=document.getElementById("toast");t&&(t.textContent=s,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function I(s){const e=document.getElementById("loading");e&&(e.style.display=s?"flex":"none")}function R(){var e;const s={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance")};s.publishedItemsTableBody&&(s.publishedItemsTableBody.innerHTML=""),s.transactionList&&(s.transactionList.innerHTML="No transactions yet."),s.userBalanceElement&&(s.userBalanceElement.textContent="Balance: 0 DCT"),C=0}async function Q(){const s=document.getElementById("userBalance");if(s){if(!u){s.textContent="Balance: 0 DCT",C=0;return}try{C=await u.getBalance(u.keypair)||0,s.textContent=`Balance: ${C} DCT`}catch(e){console.error("Failed to update balance:",e),s.textContent="Balance: 0 DCT",C=0}}}async function W(){const s=document.getElementById("transactionList");if(s){if(!u){s.innerHTML="Not initialized.";return}try{const e=await u.dbGetAll("transactions");if(e.length===0){s.innerHTML="No transactions yet.";return}s.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),s.innerHTML="Failed to load transactions."}}}async function N(){var e;const s=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(s){s.innerHTML="";try{const t=await _(G(k,"snippets")),n={};t.forEach(o=>{n[o.id]=o.data()}),u&&u.knownObjects.forEach((o,r)=>{const a=n[r]||{averageRating:0,reviewStatus:"active"};if(a.reviewStatus!=="active")return;const i=(o.metadata.isPremium||!1)&&o.metadata.priceUsd||0,l=i>0?`${i} DCT`:"Free",d=document.createElement("tr");d.innerHTML=`
          <td class="py-2 px-4">${o.metadata.content_type}</td>
          <td class="py-2 px-4">${o.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${o.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${a.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${l})</button>
            <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,s.appendChild(d)})}catch(t){console.error("Failed to update live feed:",t),h("Failed to load live feed.",!0)}}}async function de(){var e;const s=((e=f.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(s)try{const t=D(k,"users",s),n=u?await u.getBalance(u.keypair):0;await $(t,{balance:n,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function Re(){const s=document.getElementById("transactionHistory");s&&(s.style.display=s.style.display==="none"?"block":"none")}function Ne(s,e,t){const n=document.getElementById("snippetDisplay");if(!n)return;n.innerHTML="";const o=document.createElement("div");o.className="p-4 bg-gray-800 rounded-lg mt-4";const r=document.createElement("h3");if(r.className="text-lg font-semibold mb-2",r.textContent=t||"Snippet Content",o.appendChild(r),e.startsWith("text")){const a=new TextDecoder().decode(s),c=document.createElement("pre");c.className="text-sm text-gray-300 whitespace-pre-wrap",c.textContent=a,o.appendChild(c)}else if(e.startsWith("image")){const a=new Blob([s],{type:e}),c=URL.createObjectURL(a),i=document.createElement("img");i.src=c,i.className="max-w-full h-auto rounded",i.onload=()=>URL.revokeObjectURL(c),o.appendChild(i)}else{const a=new Blob([s],{type:e}),c=URL.createObjectURL(a),i=document.createElement("a");i.href=c,i.download=t||"downloaded_file",i.className="text-blue-400 hover:underline",i.textContent="Download File",i.onclick=()=>setTimeout(()=>URL.revokeObjectURL(c),1e3),o.appendChild(i)}n.appendChild(o)}function qe(){const s=document.getElementById("isPremium"),e=document.getElementById("priceInput");s&&e&&s.addEventListener("change",t=>{console.log("Premium toggle:",t.target.checked),e.classList.toggle("hidden",!t.target.checked),t.target.checked||(e.value="")})}async function K(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db");n.onsuccess=()=>{const o=n.result,r=o.version;console.log("Current IndexedDB version:",r),o.close();const a=indexedDB.open("dcrypt_db",Math.max(r,4));a.onupgradeneeded=c=>{const i=a.result;console.log("onupgradeneeded triggered for dcrypt_db version",i.version),i.objectStoreNames.contains("store")||(i.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store in index.js"))},a.onsuccess=()=>{console.log("IndexedDB opened successfully at version",a.result.version),e(a.result)},a.onerror=()=>{console.error("Failed to open IndexedDB:",a.error),t(new Error(`Failed to open IndexedDB: ${a.error.message}`))}},n.onerror=()=>{console.error("Failed to check IndexedDB version:",n.error),t(new Error(`Failed to check IndexedDB version: ${n.error.message}`))}})}async function ue(s){return new Promise((e,t)=>{try{const r=s.transaction("store","readonly").objectStore("store").get("dcrypt_identity");r.onsuccess=()=>{var a;(a=r.result)!=null&&a.value?(console.log("Loaded keypair from IndexedDB:",r.result.value),e(new TextEncoder().encode(r.result.value))):e(null)},r.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",r.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(n){console.error('Error accessing "store" object store:',n),t(n)}})}async function ze(s,e){return new Promise((t,n)=>{try{const a=s.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});a.onsuccess=()=>{console.log("Stored keypair in IndexedDB:",e),t()},a.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",a.error),n(new Error("Failed to store keypair in IndexedDB"))}}catch(o){console.error('Error storing keypair in "store" object store:',o),n(o)}})}async function ee(s){if(O){console.log("Initialization already in progress, skipping...");return}O=!0,console.log("Initializing app with userId:",s),I(!0);try{const e=await K();let t=await ue(e);if(!t&&s&&(await ze(e,s),t=new TextEncoder().encode(s)),!t)throw new Error("No keypair available and no userId provided to create one");L=await Oe(s),console.log(`User is ${L?"":"not "}a node.`),console.log("Initializing DHT..."),u=new ae(t,L),window.dht=u,await u.initDB(),console.log("DHT database initialized."),await u.initSwarm(),console.log("DHT swarm initialized."),await u.syncUserData(),console.log("User data synced."),await Promise.all([N(),Q(),W()]),console.log("UI updated.")}catch(e){console.error("Error initializing application:",e),h(`Initialization failed: ${e.message}`,!0),u=null,window.dht=null,C=0,R()}finally{I(!1),qe(),O=!1}}async function Oe(s){try{const e=D(k,"nodes",s);return(await oe(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function He(){var n;if(console.log("handleSignup function called"),U){console.log("Signup already in progress, ignoring additional clicks");return}U=!0;const s=document.getElementById("signupButton");s&&(s.disabled=!0,s.textContent="Signing Up...",console.log("Signup button disabled and text updated"));const e=document.querySelectorAll('input[name="role"]');if(!e.length){console.error("Role inputs not found"),h("Role selection not found.",!0),U=!1,s&&(s.disabled=!1,s.textContent="Sign Up with Google");return}const t=(n=Array.from(e).find(o=>o.checked))==null?void 0:n.value;if(!t){console.error("No role selected"),h("Please select a role.",!0),U=!1,s&&(s.disabled=!1,s.textContent="Sign Up with Google");return}console.log("Selected role:",t),localStorage.setItem("pendingRole",t);try{console.log("Auth state before signInWithPopup in handleSignup:",f);const o=new j;console.log("Initiating signInWithPopup for signup");const r=await M(f,o);console.log("Sign-up successful, user:",r.user)}catch(o){console.error("Signup failed:",o),h(`Sign-up failed: ${o.message}`,!0),U=!1,s&&(s.disabled=!1,s.textContent="Sign Up with Google")}}async function je(){console.log("signIn function called");try{f||(console.error("Firebase Auth is not initialized, initializing now..."),await ce()),console.log("Auth state before signInWithPopup:",f);const s=new j;console.log("Initiating signInWithPopup"),I(!0);const e=await M(f,s);console.log("Sign-in successful, user:",e.user)}catch(s){console.error("Login failed:",s),h(`Login failed: ${s.message}`,!0),I(!1)}}async function te(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),h("Node signed out successfully!")):(await ye(f),h("Signed out successfully!"));const t=(await K()).transaction("store","readwrite").objectStore("store");await new Promise((n,o)=>{const r=t.delete("dcrypt_identity");r.onsuccess=()=>n(),r.onerror=()=>o(new Error("Failed to delete keypair from IndexedDB"))}),u=null,window.dht=null,C=0,R()}catch(s){console.error("Sign-out failed:",s),h(`Sign-out failed: ${s.message}`,!0)}}async function Me(s,e,t,n,o){var r,a;if(!le()){h("Please sign in to publish.");return}I(!0);try{if(!u)throw new Error("DHT not initialized");if(!s)throw new Error("Title is required");let c=n||"",i="text/plain";if((r=o==null?void 0:o.files)!=null&&r.length){const m=o.files[0];i=m.type||"application/octet-stream",c=await new Promise((y,v)=>{const S=new FileReader;S.onload=A=>y(new Uint8Array(A.target.result)),S.onerror=()=>v(new Error("Failed to read file")),S.readAsArrayBuffer(m)})}else c=new TextEncoder().encode(c);const l=document.getElementById("isPremium").checked,d=document.getElementById("priceInput"),p=l&&d&&parseFloat(d.value)||0,w={content_type:s,description:e||"",tags:t?t.split(",").map(m=>m.trim()):[],isPremium:l,priceUsd:p},b=await u.publishIP(w,c,i),B=((a=f.currentUser)==null?void 0:a.uid)||localStorage.getItem("nodeId"),x=D(k,"snippets",b);await $(x,{ipHash:b,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:B},{merge:!0}),h("Snippet published successfully!"),await Promise.all([N(),W(),Q(),de()])}catch(c){console.error("publishSnippet failed:",c),h(`Publish failed: ${c.message}`,!0)}finally{I(!1)}}async function he(s){if(!le())return h("Please sign in to buy."),null;I(!0);try{if(!u)throw new Error("DHT not initialized");if(!s)throw new Error("Hash is required");const e=u.knownObjects.get(s);if(!e)throw new Error("Snippet not found");const o=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(o>0){const i=await u.getBalance(u.keypair);if(i<o)throw new Error("Insufficient balance");const l=o*.05;await u.distributeCommission(l),await u.putBalance(u.keypair,i-o),await u.dbAdd("transactions",{type:"buy",amount:o,timestamp:Date.now()})}else console.log("This snippet is free!"),await u.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:r,fileType:a}=await u.requestData(s);h("Snippet retrieved successfully!"),await Promise.all([W(),Q(),de()]);const c=prompt("Please rate this snippet (1-5 stars):","5");if(c!==null){const i=parseInt(c);i>=1&&i<=5?(await Ge(s,i),h(`Rated ${i} stars!`),await N()):h("Invalid rating. Please enter a number between 1 and 5.",!0)}return Ne(r,a,e.metadata.content_type),{data:r,fileType:a}}catch(e){return console.error("buySnippet failed:",e),h(`Purchase failed: ${e.message}`,!0),null}finally{I(!1)}}async function _e(s){var n;const e=s||((n=document.getElementById("buyHashInput"))==null?void 0:n.value.trim());if(!e){h("Please enter a valid hash.",!0);return}await he(e)&&h("Snippet purchased and displayed below!")}async function Ge(s,e){var n;const t=((n=f.currentUser)==null?void 0:n.uid)||localStorage.getItem("nodeId");if(t)try{const o=D(k,"snippets",s,"ratings",t);await $(o,{rating:e,timestamp:Date.now()});const a=(await _(G(k,"snippets",s,"ratings"))).docs.map(l=>l.data().rating),c=a.length>0?a.reduce((l,d)=>l+d,0)/a.length:0,i=D(k,"snippets",s);await H(i,{averageRating:c.toFixed(1)})}catch(o){console.error("Failed to submit rating:",o),h(`Failed to submit rating: ${o.message}`,!0)}}async function Qe(s){var t;if(!(((t=f.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){h("Please sign in to flag content.");return}try{const n=D(k,"snippets",s);await H(n,{flagCount:be(1)}),((await oe(n)).data().flagCount||0)>=3?(await H(n,{reviewStatus:"under_review"}),h("Snippet has been flagged and is under review."),await N()):h("Snippet flagged. It will be reviewed if flagged by more users.")}catch(n){console.error("Failed to flag snippet:",n),h(`Failed to flag snippet: ${n.message}`,!0)}}document.addEventListener("DOMContentLoaded",async()=>{var r,a,c;console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname);try{await ce()}catch(i){console.error("Firebase initialization failed, aborting setup:",i),h("Firebase initialization failed. Please check your configuration.",!0);return}const s=localStorage.getItem("role"),e=localStorage.getItem("nodeId");if((window.location.pathname.includes("index.html")||window.location.pathname==="/"||window.location.pathname==="/datasharingApp/")&&s==="node"&&e){console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html";return}const n={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),publishButton:document.getElementById("publishButton"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(r=document.getElementById("publishedItems"))==null?void 0:r.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};Object.values(n).some(i=>i!=null)?(console.log("On index.html, setting up UI and event listeners"),s==="node"&&e&&(L=!0,console.log("Node detected, but should have been redirected already.")),ge(f,async i=>{var l,d,p,w,b,B,x,m,y,v,S,A;if(console.log("onAuthStateChanged triggered"),I(!0),i){console.log("User is signed in:",i.uid),(l=n.signupButton)==null||l.classList.add("hidden"),(d=n.loginButton)==null||d.classList.add("hidden"),(p=n.logoutButton)==null||p.classList.remove("hidden"),n.publishButton.disabled=!1,n.searchButton.disabled=!1,n.depositButton.disabled=!1,n.withdrawButton.disabled=!1,n.toggleHistoryButton.disabled=!1,n.buyHashButton.disabled=!1;const g=localStorage.getItem("pendingRole")||"user";localStorage.removeItem("pendingRole");const P=window.location.pathname;if(g==="user"){const E=D(k,"users",i.uid);if(await $(E,{role:"user",createdAt:Date.now(),balance:0},{merge:!0}),!P.includes("index.html")&&P!=="/datasharingApp/"){console.log("Redirecting to index.html for user role"),window.location.href="/datasharingApp/index.html",I(!1);return}}else{const E=Fe();localStorage.setItem("nodeId",E),localStorage.setItem("role","node");const q=D(k,"nodes",E);if(await $(q,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!P.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html",I(!1);return}}await ee(i.uid)}else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{const g=await K(),P=await ue(g);P?(console.log("Found keypair in IndexedDB, initializing app..."),(w=n.signupButton)==null||w.classList.add("hidden"),(b=n.loginButton)==null||b.classList.add("hidden"),(B=n.logoutButton)==null||B.classList.remove("hidden"),n.publishButton.disabled=!1,n.searchButton.disabled=!1,n.depositButton.disabled=!1,n.withdrawButton.disabled=!1,n.toggleHistoryButton.disabled=!1,n.buyHashButton.disabled=!1,await ee(new TextDecoder().decode(P))):(console.log("No keypair found in IndexedDB."),(x=n.signupButton)==null||x.classList.remove("hidden"),(m=n.loginButton)==null||m.classList.remove("hidden"),(y=n.logoutButton)==null||y.classList.add("hidden"),n.publishButton.disabled=!0,n.searchButton.disabled=!0,n.depositButton.disabled=!0,n.withdrawButton.disabled=!0,n.toggleHistoryButton.disabled=!0,n.buyHashButton.disabled=!0,R())}catch(g){console.error("Failed to initialize IndexedDB or load keypair:",g),(v=n.signupButton)==null||v.classList.remove("hidden"),(S=n.loginButton)==null||S.classList.remove("hidden"),(A=n.logoutButton)==null||A.classList.add("hidden"),n.publishButton.disabled=!0,n.searchButton.disabled=!0,n.depositButton.disabled=!0,n.withdrawButton.disabled=!0,n.toggleHistoryButton.disabled=!0,n.buyHashButton.disabled=!0,R()}}I(!1)},i=>{console.error("onAuthStateChanged error:",i),h("Failed to monitor authentication state.",!0),I(!1)}),(a=n.loginButton)==null||a.addEventListener("click",i=>{i.preventDefault(),console.log("Login button clicked"),je()}),(c=n.logoutButton)==null||c.addEventListener("click",i=>{i.preventDefault(),console.log("Logout button clicked"),te()})):console.log("Not on index.html, skipping index.html-specific setup"),window.logout=te,window.publishSnippet=Me,window.buySnippet=he,window.buySnippetByHash=_e,window.toggleTransactionHistory=Re,window.flagSnippet=Qe,window.handleSignup=He});
