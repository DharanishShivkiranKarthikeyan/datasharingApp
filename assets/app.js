import{getAuth as fe,GoogleAuthProvider as J,signInWithPopup as me,onAuthStateChanged as ye,setPersistence as we,browserLocalPersistence as be,signInWithRedirect as re,signOut as xe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as Ie,getDocs as O,collection as j,doc as E,setDoc as A,updateDoc as K,increment as Be,getDoc as ie}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import ae from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as ke}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const ve="modulepreload",Se=function(o){return"/datasharingApp/"+o},Y={},Pe=function(e,t,n){let s=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),c=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));s=Promise.allSettled(t.map(i=>{if(i=Se(i),i in Y)return;Y[i]=!0;const l=i.endsWith(".css"),h=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${h}`))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":ve,l||(p.as="script"),p.crossOrigin="",p.href=i,c&&p.setAttribute("nonce",c),document.head.appendChild(p),l)return new Promise((y,x)=>{p.addEventListener("load",y),p.addEventListener("error",()=>x(new Error(`Unable to preload CSS for ${i}`)))})}))}function r(a){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=a,window.dispatchEvent(c),!c.defaultPrevented)throw a}return s.then(a=>{for(const c of a||[])c.status==="rejected"&&r(c.reason);return e().catch(r)})},Ee={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},ce=ke(Ee),le=fe(ce),z=Ie(ce),De=Object.freeze(Object.defineProperty({__proto__:null,auth:le,db:z},Symbol.toStringTag,{value:"Module"}));var se;const T=(se=globalThis.crypto)==null?void 0:se.subtle;if(!T)throw new Error("Web Crypto API is not available in this environment");function $e(){const o=new Uint8Array(12);for(let e=0;e<12;e++)o[e]=Math.floor(Math.random()*256);return o}function Ce(o,e,t,n,s,r,a){return{content:new Uint8Array(o),content_type:e,tags:t||[],is_premium:n,price_usd:s,creator_id:new Uint8Array(r),file_type:a}}function Ae(o){return o.content}async function de(o){const e=await T.digest("SHA-256",o);return new Uint8Array(e)}async function Te(o,e,t){const n=o.content,s=Math.ceil(n.length/t),r=[],a=await T.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<t;c++){const i=c*s,l=Math.min(i+s,n.length),h=n.slice(i,l),p=$e(),y=await T.encrypt({name:"AES-GCM",iv:p},a,h),x={data:new Uint8Array(y),nonce:p,index:c,file_type:o.file_type};r.push(x)}return r}function Le(o){const e=new Uint8Array(new Int32Array([o.index]).buffer),t=new Uint8Array([...o.data,...o.nonce,...e]);return de(t)}function Z(o){return o.index}async function Ue(o,e){const t=await T.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),n=await T.decrypt({name:"AES-GCM",iv:o.nonce},t,o.data);return new Uint8Array(n)}function Re(o){return o.file_type}class ue{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await O(j(z,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(n=>{const s=`node-${n.id}`;this.nodes.add(s)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const n of t){const s=this.peers.get(n);if(s&&s.connected&&s.conn){const r=Date.now();await new Promise(c=>{const i=`${n}-ping-${Date.now()}`;s.conn.send({type:"ping",requestId:i}),this.pendingRequests.set(i,{resolve:c}),setTimeout(()=>{this.pendingRequests.has(i)&&(this.pendingRequests.delete(i),c())},2e3)});const a=Date.now()-r;e.push(a)}}this.averageLatency=e.length>0?e.reduce((n,s)=>n+s,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db",4);let s;n.onupgradeneeded=r=>{console.log("onupgradeneeded triggered for dcrypt_db version",r.target.result.version),s=n.result,s.objectStoreNames.contains("store")||(s.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),s.objectStoreNames.contains("transactions")||(s.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),s.objectStoreNames.contains("offlineQueue")||(s.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),s.objectStoreNames.contains("chunkCache")||(s.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache"))},n.onsuccess=()=>{this.db=n.result,console.log("IndexedDB opened successfully"),Promise.all([this.loadIdentity(),this.loadOfflineQueue(),this.loadTransactions()]).then(()=>{console.log("IndexedDB initialized successfully"),e()}).catch(r=>{console.error("Failed to load data after IndexedDB initialization:",r),t(new Error(`Failed to load data: ${r.message}`))})},n.onerror=r=>{console.error("Failed to initialize IndexedDB:",r.target.error),t(new Error(`Failed to initialize IndexedDB: ${r.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{const e=new TextDecoder().decode(this.keypair);return this.peerId=this.isNode?`node-${e}`:e,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new ae(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),new Promise((t,n)=>{this.peer.on("open",s=>{console.log(`PeerJS connection opened with ID: ${s}`),this.activeNodes.add(this.peerId),this.peer.on("connection",r=>{this.handleConnection(r)}),this.peer.on("error",r=>{var a;if(console.error("PeerJS error:",r.type,r.message),r.type==="peer-unavailable"){const c=(a=r.message.match(/Peer (.+) is unavailable/))==null?void 0:a[1];c&&this.handlePeerDisconnect(c)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),t()}),this.peer.on("error",s=>{console.error("Failed to initialize PeerJS:",s),n(s)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,n)=>{!t.connected&&this.connectionAttempts.get(n)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${n}`),this.peers.delete(n),this.connectionAttempts.delete(n),this.activeNodes.delete(n))})}connectToPeer(e){var s;if((s=this.peers.get(e))!=null&&s.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const n=this.peer.connect(e,{reliable:!0});n.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:n}),this.activeNodes.add(e),this.connectionAttempts.delete(e),n.send({type:"handshake",peerId:this.peerId})}),n.on("data",r=>{this.handlePeerData(r,e)}),n.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),n.on("error",r=>{console.warn(`Connection error with peer ${e}: ${r.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",n=>{this.handlePeerData(n,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",n=>{console.error(`Connection error with peer ${t}:`,n),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const n=this.peers.get(t);n&&n.connected&&n.conn&&n.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const s=this.pendingRequests.get(e.requestId);s&&(s.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,n){try{await this.dbPut("chunkCache",{id:e,value:t});let s=this.chunkToPeerMap.get(e)||new Set;s.add(this.peerId),this.chunkToPeerMap.set(e,s),console.log(`Stored chunk ${e} from peer ${n}`)}catch(s){console.error(`Failed to store chunk ${e} from peer ${n}:`,s)}}async publishChunk(e,t,n,s){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let r=this.chunkToPeerMap.get(e)||new Set;if(r.add(this.peerId),this.chunkToPeerMap.set(e,r),this.activeNodes.size>0){const a=Array.from(this.activeNodes).filter(i=>i.startsWith("node-"));if(a.length>0){const i=n%a.length,l=a[i],h=this.peers.get(l);h&&h.connected&&h.conn&&(h.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(l),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to node ${l}`))}const c=Array.from(this.activeNodes).filter(i=>!i.startsWith("node-")&&i!==this.peerId);if(c.length>0){const i=c[Math.floor(Math.random()*c.length)],l=this.peers.get(i);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(i),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to random peer ${i}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:n,totalChunks:s});this.broadcastChunk(e)}catch(r){throw console.error("publishChunk failed:",r),r}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,n){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const s=Array.isArray(e.tags)?e.tags.map(g=>typeof g!="string"?(console.warn(`Invalid tag: ${g}, converting to string`),String(g)):g).filter(g=>g.trim()!==""):[];console.log("Processed tags:",s);const r=!!e.isPremium,a=r?e.priceUsd||30:0,c=new Uint8Array(t),i=e.content_type||"",l=this.keypair instanceof Uint8Array?this.keypair:new Uint8Array(this.keypair),p=Ce(c,i,s,r,a,l,n||"text/plain"),y=Ae(p),x=await de(y),I=this.uint8ArrayToHex(x),B=Array.from(this.activeNodes).filter(g=>g.startsWith("node-")),w=B.length>0?B.length:1,b=await Te(p,Array.from(this.keypair),w),v=[];for(let g=0;g<b.length;g++){const P=b[g],D=await Le(P),W=this.uint8ArrayToHex(D);v.push(W)}const S={...e,chunk_count:b.length,isPremium:r,priceUsd:r?a:0},$={metadata:S,chunks:v};this.knownObjects.set(I,$),await this.dbPut("store",{id:I,value:JSON.stringify($)});for(let g=0;g<b.length;g++){const P=b[g],D=v[g];await this.publishChunk(D,P,g,b.length)}return this.activeNodes.size>0?this.broadcastIP(I,S,v):await this.queueOfflineOperation({type:"publishIP",ipHash:I,metadata:S,chunkHashes:v}),I}catch(s){throw console.error("publishIP failed:",s),s}}broadcastIP(e,t,n){const s={type:"ip",ipHash:e,metadata:t,chunkHashes:n,peerId:this.peerId};this.broadcast(s),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const n=[];for(const l of t.chunks){const h=await this.dbGet("chunkCache",l);if(h&&h.value){n.push({chunk:h.value,hash:l});continue}const p=this.chunkToPeerMap.get(l);if(!p||p.size===0)throw new Error(`No peers found with chunk ${l}`);const y=Array.from(p).filter(w=>w.startsWith("node-")),x=Array.from(p).filter(w=>!w.startsWith("node-"));let I=!1,B=null;for(const w of[...y,...x])if(this.activeNodes.has(w))try{const b=await this.fetchChunkFromPeer(w,l);await this.dbPut("chunkCache",{id:l,value:b}),n.push({chunk:b,hash:l}),I=!0;break}catch(b){B=b,console.error(`Failed to fetch chunk ${l} from peer ${w}:`,b);continue}if(!I)throw B||new Error(`No available peer for chunk ${l}`)}const s=n.sort((l,h)=>{const p=Z(l.chunk),y=Z(h.chunk);return p-y}),r=[];for(const{chunk:l}of s){const h=await Ue(l,Array.from(this.keypair));r.push(h)}const a=new Uint8Array(r.reduce((l,h)=>l+h.length,0));let c=0;for(const l of r)a.set(l,c),c+=l.length;const i=Re(s[0].chunk);return{data:a,fileType:i}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const n=this.peers.get(e);if(!n||!n.connected||!n.conn)throw new Error(`Peer ${e} is not connected`);const s=`${e}-${t}-${Date.now()}`,r={type:"chunkRequest",requestId:s,chunkHash:t,peerId:this.peerId};return n.conn.send(r),new Promise((a,c)=>{this.pendingRequests.set(s,{resolve:a,reject:c,hash:t}),setTimeout(()=>{this.pendingRequests.has(s)&&(this.pendingRequests.delete(s),c(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:n,chunkHash:s}=e;this.dbGet("chunkCache",s).then(r=>{if(r&&r.value){const a={type:"chunkResponse",requestId:n,chunkHash:s,chunkData:r.value,peerId:this.peerId},c=this.peers.get(t);c&&c.connected&&c.conn&&(c.conn.send(a),console.log(`Sent chunk ${s} to peer ${t}`))}else console.warn(`Chunk ${s} not found for peer ${t}`)}).catch(r=>{console.error(`Failed to retrieve chunk ${s} for peer ${t}:`,r)})}handleChunkResponse(e){const{requestId:t,chunkHash:n,chunkData:s}=e,r=this.pendingRequests.get(t);r&&(r.hash===n?r.resolve(s):r.reject(new Error(`Received chunk hash ${n} does not match requested hash ${r.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(s=>s.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const n=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${n} per node)`);for(const s of t){const r=this.hexToUint8Array(s.replace("node-","")),c=await this.getBalance(r)+n;await this.putBalance(r,c),console.log(`Awarded ${n} to node ${s}. New balance: ${c}`);const i=this.peers.get(s);i&&i.connected&&i.conn&&i.conn.send({type:"commission",amount:n,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+this.uint8ArrayToHex(e));return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+this.uint8ArrayToHex(e),value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const n=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(s=>{n.clear().onsuccess=s});for(const s of e)try{switch(s.type){case"publishChunk":await this.publishChunk(s.chunkHash,s.chunkData,s.chunkIndex,s.totalChunks);break;case"publishIP":await this.broadcastIP(s.ipHash,s.metadata,s.chunkHashes);break;default:console.warn("Unknown offline operation type:",s.type)}}catch(r){console.error(`Failed to process offline operation ${s.type}:`,r),this.offlineQueue.push(s),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:s})}}async loadIdentity(){if(this.db)try{const e=await this.dbGet("store","dcrypt_identity");e&&e.value&&typeof e.value=="string"&&(this.keypair=this.hexToUint8Array(e.value),console.log("Loaded identity from IndexedDB"))}catch(e){console.error("Failed to load identity:",e)}}async loadOfflineQueue(){if(this.db)try{const e=await this.dbGetAll("offlineQueue");this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}catch(e){console.error("Failed to load offline queue:",e)}}async loadTransactions(){if(this.db)try{const e=await this.dbGetAll("transactions");console.log("Loaded transactions:",e)}catch(e){console.error("Failed to load transactions:",e)}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,s)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).put(t);c.onsuccess=()=>n(),c.onerror=i=>s(new Error(`DB put failed: ${i.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,s)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).add(t);c.onsuccess=()=>n(),c.onerror=i=>s(new Error(`DB add failed: ${i.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((n,s)=>{const c=this.db.transaction(e,"readonly").objectStore(e).get(t);c.onsuccess=()=>n(c.result),c.onerror=i=>s(new Error(`DB get failed: ${i.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).getAll();a.onsuccess=()=>t(a.result),a.onerror=c=>n(new Error(`DB getAll failed: ${c.target.error.message}`))})}uint8ArrayToHex(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("")}hexToUint8Array(e){if(!e||typeof e!="string")return new Uint8Array(0);const t=e.match(/.{1,2}/g);return t?new Uint8Array(t.map(n=>parseInt(n,16))):new Uint8Array(0)}broadcast(e){this.peers.forEach((t,n)=>{t.connected&&t.conn&&t.conn.send(e)})}}function Fe(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(o){const e=Math.random()*16|0;return(o==="x"?e:e&3|8).toString(16)})}async function Ne(){const o=[];for(let t=0;t<3;t++){const n=`node-test-${Fe()}`;console.log(`Initializing test peer with ID: ${n}`);const s=new ae(n,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),r=new Promise((a,c)=>{s.on("open",()=>{console.log(`Test peer ${n} opened`),o.push({peer:s,peerId:n}),a()}),s.on("error",i=>{console.error(`Test peer ${n} error:`,i),c(i)}),s.on("disconnected",()=>{console.log(`Test peer ${n} disconnected`)})});try{await r}catch(a){console.error(`Failed to initialize test peer ${n}:`,a)}}return o}(window.location.pathname==="/datasharingApp/signup.html"||window.location.pathname==="/signup.html")&&document.addEventListener("DOMContentLoaded",()=>{const o=document.getElementById("signupButton");if(!o){console.error("Sign-up button not found");return}o.addEventListener("click",qe)});async function qe(){X(!0);try{const o=new J,t=(await me(le,o)).user;if(console.log("Signed up user UID:",t.uid),document.querySelector('input[name="role"]:checked').value==="node"){const r=E(z,"nodes",t.uid);await A(r,{uid:t.uid,createdAt:Date.now(),status:"active"}),console.log("User registered as a node"),G("Signed up as a node successfully!"),window.location.href="/datasharingApp/node-instructions.html"}else{const r=E(z,"users",t.uid);await A(r,{uid:t.uid,createdAt:Date.now(),balance:0},{merge:!0}),console.log("User registered as a regular user"),G("Signed up successfully!"),window.location.href="/datasharingApp/index.html"}}catch(o){console.error("Sign-up failed:",o),G(`Sign-up failed: ${o.message}`)}finally{X(!1)}}function G(o){const e=document.getElementById("toast");e&&(e.textContent=o,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function X(o){const e=document.getElementById("loading");e&&(e.style.display=o?"flex":"none")}if(window.location.pathname==="/datasharingApp/node-instructions.html"||window.location.pathname==="/node-instructions.html"){let o;document.addEventListener("DOMContentLoaded",async()=>{te(!0);try{const e=localStorage.getItem("nodeId");if(localStorage.getItem("role")!=="node"||!e){ee("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const s=new TextEncoder().encode(e);o=new ue(s,!0),await o.initDB(),await o.initSwarm(),await o.syncUserData();const a=(await o.dbGetAll("transactions")).filter(i=>i.type==="commission").reduce((i,l)=>i+(l.amount||0),0),c=document.getElementById("nodeEarnings");c&&(c.textContent=`Total Earnings: ${a.toFixed(2)} DCT`)}catch(e){console.error("Error initializing node instructions:",e),ee(`Initialization failed: ${e.message}`)}finally{te(!1)}})}function ee(o){const e=document.getElementById("toast");e&&(e.textContent=o,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function te(o){const e=document.getElementById("loading");e&&(e.style.display=o?"flex":"none")}self.addEventListener("install",o=>{o.waitUntil(caches.open("dcrypt-v1").then(e=>e.addAll(["/","/index.html","/assets/index.js","/wasm/dcrypt_wasm.js","/wasm/dcrypt_wasm_bg.wasm"])))});self.addEventListener("fetch",o=>{o.respondWith(caches.match(o.request).then(e=>e||fetch(o.request).catch(()=>caches.match("/index.html"))))});self.addEventListener("message",async o=>{if(o.data.type==="cache_chunk"){const{chunkHash:e,data:t}=o.data,n=await caches.open("dcrypt-chunks"),s=new Blob([t],{type:"application/octet-stream"}),r=new Response(s,{headers:{"Content-Type":"application/octet-stream"}});await n.put(`/chunks/${e}`,r),console.log(`Service Worker: Cached chunk ${e}`)}});self.addEventListener("fetch",o=>{const e=new URL(o.request.url);e.pathname.startsWith("/chunks/")?o.respondWith(caches.open("dcrypt-chunks").then(t=>t.match(o.request).then(n=>n?(console.log(`Service Worker: Serving chunk ${e.pathname} from cache`),n):fetch(o.request).catch(()=>new Response("Chunk not available offline",{status:503}))))):o.respondWith(caches.match(o.request).then(t=>t||fetch(o.request).catch(()=>caches.match("/index.html"))))});let m=null,k=null,d=null,N=!1,C=0,q=[],L=!1,Q=!1;async function he(){console.log("Starting Firebase initialization...");try{const o=await Pe(()=>Promise.resolve().then(()=>De),void 0);m=o.auth,k=o.db,await we(m,be),console.log("Firebase services initialized successfully with local persistence"),console.log("Auth object:",m),console.log("Current Firebase user on init:",m.currentUser)}catch(o){throw console.error("Failed to initialize Firebase services:",o),u("Failed to initialize Firebase. Please try again later.",!0),o}}function ze(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,o=>{const e=Math.random()*16|0;return(o==="x"?e:e&3|8).toString(16)})}function U(){return!!(m!=null&&m.currentUser)||localStorage.getItem("role")==="node"}function u(o,e=!1){const t=document.getElementById("toast");t&&(t.textContent=o,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function f(o){const e=document.getElementById("loading");e&&(e.style.display=o?"flex":"none")}function H(){var e;const o={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance")};o.publishedItemsTableBody&&(o.publishedItemsTableBody.innerHTML=""),o.transactionList&&(o.transactionList.innerHTML="No transactions yet."),o.userBalanceElement&&(o.userBalanceElement.textContent="Balance: 0 DCT"),C=0}async function R(){const o=document.getElementById("userBalance");if(o){if(!d){o.textContent="Balance: 0 DCT",C=0;return}try{C=await d.getBalance(d.keypair)||0,o.textContent=`Balance: ${C} DCT`}catch(e){console.error("Failed to update balance:",e),o.textContent="Balance: 0 DCT",C=0}}}async function F(){const o=document.getElementById("transactionList");if(o){if(!d){o.innerHTML="Not initialized.";return}try{const e=await d.dbGetAll("transactions");if(e.length===0){o.innerHTML="No transactions yet.";return}o.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),o.innerHTML="Failed to load transactions."}}}async function M(){var e;const o=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(o){o.innerHTML="";try{const t=await O(j(k,"snippets")),n={};t.forEach(s=>{n[s.id]=s.data()}),d&&d.knownObjects.forEach((s,r)=>{const a=n[r]||{averageRating:0,reviewStatus:"active"};if(a.reviewStatus!=="active")return;const i=(s.metadata.isPremium||!1)&&s.metadata.priceUsd||0,l=i>0?`${i} DCT`:"Free",h=document.createElement("tr");h.innerHTML=`
          <td class="py-2 px-4">${s.metadata.content_type}</td>
          <td class="py-2 px-4">${s.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${s.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${a.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${l})</button>
            <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,o.appendChild(h)})}catch(t){console.error("Failed to update live feed:",t),u("Failed to load live feed.",!0)}}}async function _(){var e;const o=((e=m.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(o)try{const t=E(k,"users",o),n=d?await d.getBalance(d.keypair):0;await A(t,{balance:n,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function He(){const o=document.getElementById("transactionHistory");o&&(o.style.display=o.style.display==="none"?"block":"none")}function Oe(o,e,t){const n=document.getElementById("snippetDisplay");if(!n)return;n.innerHTML="";const s=document.createElement("div");s.className="p-4 bg-gray-800 rounded-lg mt-4";const r=document.createElement("h3");if(r.className="text-lg font-semibold mb-2",r.textContent=t||"Snippet Content",s.appendChild(r),e.startsWith("text")){const a=new TextDecoder().decode(o),c=document.createElement("pre");c.className="text-sm text-gray-300 whitespace-pre-wrap",c.textContent=a,s.appendChild(c)}else if(e.startsWith("image")){const a=new Blob([o],{type:e}),c=URL.createObjectURL(a),i=document.createElement("img");i.src=c,i.className="max-w-full h-auto rounded",i.onload=()=>URL.revokeObjectURL(c),s.appendChild(i)}else{const a=new Blob([o],{type:e}),c=URL.createObjectURL(a),i=document.createElement("a");i.href=c,i.download=t||"downloaded_file",i.className="text-blue-400 hover:underline",i.textContent="Download File",i.onclick=()=>setTimeout(()=>URL.revokeObjectURL(c),1e3),s.appendChild(i)}n.appendChild(s)}function je(){const o=document.getElementById("isPremium"),e=document.getElementById("priceInput");o&&e&&o.addEventListener("change",t=>{console.log("Premium toggle:",t.target.checked),e.classList.toggle("hidden",!t.target.checked),t.target.checked||(e.value="")})}async function V(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db");n.onsuccess=()=>{const s=n.result,r=s.version;console.log("Current IndexedDB version:",r),s.close();const a=indexedDB.open("dcrypt_db",Math.max(r,5));a.onupgradeneeded=c=>{const i=a.result;console.log("onupgradeneeded triggered for dcrypt_db version",i.version),i.objectStoreNames.contains("store")||(i.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store in index.js"))},a.onsuccess=()=>{console.log("IndexedDB opened successfully at version",a.result.version),e(a.result)},a.onerror=()=>{console.error("Failed to open IndexedDB:",a.error),t(new Error(`Failed to open IndexedDB: ${a.error.message}`))}},n.onerror=()=>{console.error("Failed to check IndexedDB version:",n.error),t(new Error(`Failed to check IndexedDB version: ${n.error.message}`))}})}async function pe(o){return new Promise((e,t)=>{try{const r=o.transaction("store","readonly").objectStore("store").get("dcrypt_identity");r.onsuccess=()=>{var a;(a=r.result)!=null&&a.value?(console.log("Loaded keypair from IndexedDB:",r.result.value),e(new TextEncoder().encode(r.result.value))):e(null)},r.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",r.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(n){console.error('Error accessing "store" object store:',n),t(n)}})}async function Me(o,e){return new Promise((t,n)=>{try{const a=o.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});a.onsuccess=()=>{console.log("Stored keypair in IndexedDB:",e),t()},a.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",a.error),n(new Error("Failed to store keypair in IndexedDB"))}}catch(s){console.error('Error storing keypair in "store" object store:',s),n(s)}})}async function ne(o){if(Q){console.log("Initialization already in progress, skipping...");return}Q=!0,console.log("Initializing app with userId:",o),f(!0);try{const e=await V();let t=await pe(e);if(!t&&o&&(await Me(e,o),t=new TextEncoder().encode(o)),!t)throw new Error("No keypair available and no userId provided to create one");N=await _e(o),console.log(`User is ${N?"":"not "}a node.`),q.length===0&&(console.log("Creating test peers..."),q=await Ne(),console.log("Test peers created:",q.map(n=>n.peerId))),console.log("Initializing DHT..."),d=new ue(t,N),window.dht=d,await d.initDB(),console.log("IndexedDB initialized via DHT."),await d.initSwarm(),console.log("DHT swarm initialized."),await d.syncUserData(),console.log("User data synced."),await Promise.all([M(),R(),F()]),console.log("UI updated.")}catch(e){console.error("Error initializing application:",e),u(`Initialization failed: ${e.message}`,!0),d=null,window.dht=null,C=0,H()}finally{f(!1),je(),Q=!1}}async function _e(o){try{const e=E(k,"nodes",o);return(await ie(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function We(){var n;if(console.log("handleSignup function called"),L){console.log("Signup already in progress, ignoring additional clicks");return}L=!0;const o=document.getElementById("signupButton");o&&(o.disabled=!0,o.textContent="Signing Up...",console.log("Signup button disabled and text updated"));const e=document.querySelectorAll('input[name="role"]');if(!e.length){console.error("Role inputs not found"),u("Role selection not found.",!0),L=!1,o&&(o.disabled=!1,o.textContent="Sign Up with Google");return}const t=(n=Array.from(e).find(s=>s.checked))==null?void 0:n.value;if(!t){console.error("No role selected"),u("Please select a role.",!0),L=!1,o&&(o.disabled=!1,o.textContent="Sign Up with Google");return}console.log("Selected role:",t),localStorage.setItem("pendingRole",t);try{console.log("Auth state before signInWithRedirect in handleSignup:",m);const s=new J;console.log("Initiating signInWithRedirect for signup"),await re(m,s)}catch(s){console.error("Signup failed:",s),u(`Sign-up failed: ${s.message}`,!0),L=!1,o&&(o.disabled=!1,o.textContent="Sign Up with Google")}}async function Ge(){console.log("signIn function called");try{m||(console.error("Firebase Auth is not initialized, initializing now..."),await he()),console.log("Auth state before signInWithRedirect:",m);const o=new J;console.log("Initiating signInWithRedirect"),f(!0),await re(m,o)}catch(o){console.error("Login failed:",o),u(`Login failed: ${o.message}`,!0),f(!1)}}async function oe(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await xe(m),u("Signed out successfully!"));const t=(await V()).transaction("store","readwrite").objectStore("store");await new Promise((n,s)=>{const r=t.delete("dcrypt_identity");r.onsuccess=()=>n(),r.onerror=()=>s(new Error("Failed to delete keypair from IndexedDB"))}),d=null,window.dht=null,q=[],C=0,H()}catch(o){console.error("Sign-out failed:",o),u(`Sign-out failed: ${o.message}`,!0)}}async function Qe(o,e,t,n,s){var r,a;if(!U()){u("Please sign in to publish.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!o)throw new Error("Title is required");let c=n||"",i="text/plain";if((r=s==null?void 0:s.files)!=null&&r.length){const w=s.files[0];i=w.type||"application/octet-stream",c=await new Promise((b,v)=>{const S=new FileReader;S.onload=$=>b(new Uint8Array($.target.result)),S.onerror=()=>v(new Error("Failed to read file")),S.readAsArrayBuffer(w)})}else c=new TextEncoder().encode(c);const l=document.getElementById("isPremium").checked,h=document.getElementById("priceInput"),p=l&&h&&parseFloat(h.value)||0,y={content_type:o,description:e||"",tags:t?t.split(",").map(w=>w.trim()):[],isPremium:l,priceUsd:p},x=await d.publishIP(y,c,i),I=((a=m.currentUser)==null?void 0:a.uid)||localStorage.getItem("nodeId"),B=E(k,"snippets",x);await A(B,{ipHash:x,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:I},{merge:!0}),u("Snippet published successfully!"),await Promise.all([M(),F(),R(),_()])}catch(c){console.error("publishSnippet failed:",c),u(`Publish failed: ${c.message}`,!0)}finally{f(!1)}}async function ge(o){if(!U())return u("Please sign in to buy."),null;f(!0);try{if(!d)throw new Error("DHT not initialized");if(!o)throw new Error("Hash is required");const e=d.knownObjects.get(o);if(!e)throw new Error("Snippet not found");const s=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(s>0){const i=await d.getBalance(d.keypair);if(i<s)throw new Error("Insufficient balance");const l=s*.05;await d.distributeCommission(l),await d.putBalance(d.keypair,i-s),await d.dbAdd("transactions",{type:"buy",amount:s,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:r,fileType:a}=await d.requestData(o);u("Snippet retrieved successfully!"),await Promise.all([F(),R(),_()]);const c=prompt("Please rate this snippet (1-5 stars):","5");if(c!==null){const i=parseInt(c);i>=1&&i<=5?(await Je(o,i),u(`Rated ${i} stars!`),await M()):u("Invalid rating. Please enter a number between 1 and 5.",!0)}return Oe(r,a,e.metadata.content_type),{data:r,fileType:a}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}finally{f(!1)}}async function Ke(o){var n;const e=o||((n=document.getElementById("buyHashInput"))==null?void 0:n.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await ge(e)&&u("Snippet purchased and displayed below!")}async function Je(o,e){var n;const t=((n=m.currentUser)==null?void 0:n.uid)||localStorage.getItem("nodeId");if(t)try{const s=E(k,"snippets",o,"ratings",t);await A(s,{rating:e,timestamp:Date.now()});const a=(await O(j(k,"snippets",o,"ratings"))).docs.map(l=>l.data().rating),c=a.length>0?a.reduce((l,h)=>l+h,0)/a.length:0,i=E(k,"snippets",o);await K(i,{averageRating:c.toFixed(1)})}catch(s){console.error("Failed to submit rating:",s),u(`Failed to submit rating: ${s.message}`,!0)}}async function Ve(o){var t;if(!(((t=m.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const n=E(k,"snippets",o);await K(n,{flagCount:Be(1)}),((await ie(n)).data().flagCount||0)>=3?(await K(n,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await M()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(n){console.error("Failed to flag snippet:",n),u(`Failed to flag snippet: ${n.message}`,!0)}}async function Ye(o){if(!U()){u("Please sign in to search.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!o)throw new Error("Search query is required");console.log("Starting search with query:",o);const e=document.getElementById("publishedItems").querySelector("tbody");e.innerHTML="";const t=await O(j(k,"snippets")),n={};t.forEach(a=>{n[a.id]=a.data()});let s=!1;const r=o.toLowerCase();d.knownObjects.forEach((a,c)=>{const{content_type:i,description:l,tags:h}=a.metadata,p=n[c]||{averageRating:0,reviewStatus:"active"};if(p.reviewStatus==="active"&&(i.toLowerCase().includes(r)||l&&l.toLowerCase().includes(r)||h&&h.some(y=>y.toLowerCase().includes(r)))){s=!0;const x=(a.metadata.isPremium||!1)&&a.metadata.priceUsd||0,I=x>0?`${x} DCT`:"Free",B=document.createElement("tr");B.innerHTML=`
          <td class="py-2 px-4">${i}</td>
          <td class="py-2 px-4">${l||"No description"}</td>
          <td class="py-2 px-4">${h.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${p.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${c}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${I})</button>
            <button onclick="window.flagSnippet('${c}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(B)}}),u(s?"Search completed!":"No snippets found matching your search.")}catch(e){console.error("searchSnippets failed:",e),u(`Search failed: ${e.message}`,!0)}finally{f(!1)}}async function Ze(o){if(!U()){u("Please sign in to deposit.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!o||o<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+o;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:o,timestamp:Date.now()}),u(`Deposited ${o} DCT successfully!`),await Promise.all([F(),R(),_()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}finally{f(!1)}}async function Xe(o){if(!U()){u("Please sign in to withdraw.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!o||o<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<o)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-o),await d.dbAdd("transactions",{type:"withdraw",amount:o,timestamp:Date.now()}),u(`Withdrew ${o} DCT successfully!`),await Promise.all([F(),R(),_()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}finally{f(!1)}}document.addEventListener("DOMContentLoaded",async()=>{var r,a,c;console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname);try{await he()}catch(i){console.error("Firebase initialization failed, aborting setup:",i),u("Firebase initialization failed. Please check your configuration.",!0);return}const o=localStorage.getItem("role"),e=localStorage.getItem("nodeId");if((window.location.pathname.includes("index.html")||window.location.pathname==="/"||window.location.pathname==="/datasharingApp/")&&o==="node"&&e){console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html";return}const n={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),publishButton:document.getElementById("publishButton"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(r=document.getElementById("publishedItems"))==null?void 0:r.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};Object.values(n).some(i=>i!=null)?(console.log("On index.html, setting up UI and event listeners"),o==="node"&&e&&(N=!0,console.log("Node detected, but should have been redirected already.")),ye(m,async i=>{var l,h,p,y,x,I,B,w,b,v,S,$;if(console.log("onAuthStateChanged triggered"),f(!0),i){console.log("User is signed in:",i.uid),(l=n.signupButton)==null||l.classList.add("hidden"),(h=n.loginButton)==null||h.classList.add("hidden"),(p=n.logoutButton)==null||p.classList.remove("hidden"),n.publishButton.disabled=!1,n.searchButton.disabled=!1,n.depositButton.disabled=!1,n.withdrawButton.disabled=!1,n.toggleHistoryButton.disabled=!1,n.buyHashButton.disabled=!1;const g=localStorage.getItem("pendingRole")||"user";localStorage.removeItem("pendingRole");const P=window.location.pathname;if(g==="user"){const D=E(k,"users",i.uid);if(await A(D,{role:"user",createdAt:Date.now(),balance:0},{merge:!0}),!P.includes("index.html")&&P!=="/datasharingApp/"){console.log("Redirecting to index.html for user role"),window.location.href="/datasharingApp/index.html",f(!1);return}}else{const D=ze();localStorage.setItem("nodeId",D),localStorage.setItem("role","node");const W=E(k,"nodes",D);if(await A(W,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!P.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html",f(!1);return}}await ne(i.uid)}else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{const g=await V(),P=await pe(g);P?(console.log("Found keypair in IndexedDB, initializing app..."),(y=n.signupButton)==null||y.classList.add("hidden"),(x=n.loginButton)==null||x.classList.add("hidden"),(I=n.logoutButton)==null||I.classList.remove("hidden"),n.publishButton.disabled=!1,n.searchButton.disabled=!1,n.depositButton.disabled=!1,n.withdrawButton.disabled=!1,n.toggleHistoryButton.disabled=!1,n.buyHashButton.disabled=!1,await ne(new TextDecoder().decode(P))):(console.log("No keypair found in IndexedDB."),(B=n.signupButton)==null||B.classList.remove("hidden"),(w=n.loginButton)==null||w.classList.remove("hidden"),(b=n.logoutButton)==null||b.classList.add("hidden"),n.publishButton.disabled=!0,n.searchButton.disabled=!0,n.depositButton.disabled=!0,n.withdrawButton.disabled=!0,n.toggleHistoryButton.disabled=!0,n.buyHashButton.disabled=!0,H())}catch(g){console.error("Failed to initialize IndexedDB or load keypair:",g),(v=n.signupButton)==null||v.classList.remove("hidden"),(S=n.loginButton)==null||S.classList.remove("hidden"),($=n.logoutButton)==null||$.classList.add("hidden"),n.publishButton.disabled=!0,n.searchButton.disabled=!0,n.depositButton.disabled=!0,n.withdrawButton.disabled=!0,n.toggleHistoryButton.disabled=!0,n.buyHashButton.disabled=!0,H()}}f(!1)},i=>{console.error("onAuthStateChanged error:",i),u("Failed to monitor authentication state.",!0),f(!1)}),(a=n.loginButton)==null||a.addEventListener("click",i=>{i.preventDefault(),console.log("Login button clicked"),Ge()}),(c=n.logoutButton)==null||c.addEventListener("click",i=>{i.preventDefault(),console.log("Logout button clicked"),oe()})):console.log("Not on index.html, skipping index.html-specific setup"),window.logout=oe,window.publishSnippet=Qe,window.buySnippet=ge,window.buySnippetByHash=Ke,window.searchSnippets=Ye,window.deposit=Ze,window.withdraw=Xe,window.toggleTransactionHistory=He,window.flagSnippet=Ve,window.handleSignup=We});
