import{getAuth as he,onAuthStateChanged as V,setPersistence as fe,browserLocalPersistence as ge,GoogleAuthProvider as oe,signInWithPopup as se,signOut as me}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as ye,getDocs as O,collection as T,doc as B,setDoc as x,updateDoc as A,increment as j,getDoc as q,query as H,where as Q,onSnapshot as we}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import{getStorage as be}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-storage.js";import Ie from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as ke}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const Be="modulepreload",Se=function(n){return"/datasharingApp/"+n},Y={},ve=function(e,t,s){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),c=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));o=Promise.allSettled(t.map(a=>{if(a=Se(a),a in Y)return;Y[a]=!0;const l=a.endsWith(".css"),p=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${a}"]${p}`))return;const h=document.createElement("link");if(h.rel=l?"stylesheet":Be,l||(h.as="script"),h.crossOrigin="",h.href=a,c&&h.setAttribute("nonce",c),document.head.appendChild(h),l)return new Promise((g,m)=>{h.addEventListener("load",g),h.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${a}`)))})}))}function i(r){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=r,window.dispatchEvent(c),!c.defaultPrevented)throw r}return o.then(r=>{for(const c of r||[])c.status==="rejected"&&i(c.reason);return e().catch(i)})},Pe={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},W=ke(Pe),Ee=be(W),xe=he(W),re=ye(W),De=Object.freeze(Object.defineProperty({__proto__:null,auth:xe,db:re,storage:Ee},Symbol.toStringTag,{value:"Module"}));var ne;const v=(ne=globalThis.crypto)==null?void 0:ne.subtle;if(!v)throw new Error("Web Crypto API is not available in this environment");function Ce(){const n=new Uint8Array(12);for(let e=0;e<12;e++)n[e]=Math.floor(Math.random()*256);return n}function $e(n,e,t,s,o,i,r){return{content:new Uint8Array(n),content_type:e,tags:t||[],is_premium:s,price_usd:o,creator_id:new Uint8Array(i),file_type:r}}function Te(n){return n.content}async function ie(n){const e=await v.digest("SHA-256",n);return new Uint8Array(e)}function Ae(n){const e=new Uint8Array(new Int32Array([n.index]).buffer),t=new Uint8Array([...n.data,...n.nonce,...e]);return ie(t)}function Z(n){return n.index}function ae(n){return new TextEncoder().encode(n).buffer}async function Ue(n,e,t){const s=n.content,o=Math.ceil(s.length/t),i=[];Array.isArray(e)&&(e=e.join(""));const r=await v.digest("SHA-256",ae(e)),c=await v.importKey("raw",r,{name:"AES-GCM"},!1,["encrypt"]);for(let a=0;a<t;a++){const l=a*o,p=Math.min(l+o,s.length),h=s.slice(l,p),g=Ce(),m=await v.encrypt({name:"AES-GCM",iv:g},c,h),f={data:new Uint8Array(m),nonce:g,index:a,file_type:n.file_type};i.push(f)}return i}async function Fe(n,e){Array.isArray(e)&&(e=e.join(""));const t=await v.digest("SHA-256",ae(e)),s=await v.importKey("raw",t,{name:"AES-GCM"},!1,["decrypt"]),o=await v.decrypt({name:"AES-GCM",iv:n.nonce},s,n.data);return new Uint8Array(o)}function Ne(n){return n.file_type}class ce{constructor(e,t=!1){this.peers=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,console.log("DHT initialized with keypair:",e),this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await O(T(re,"nodes"));this.nodes.clear(),t.empty||t.forEach(s=>this.nodes.add(`node-${s.id}`)),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear()}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const s of t){const o=this.peers.get(s);if(o&&o.connected&&o.conn){const i=Date.now();await new Promise(c=>{const a=`${s}-ping-${Date.now()}`;o.conn.send({type:"ping",requestId:a}),this.pendingRequests.set(a,{resolve:c}),setTimeout(()=>{this.pendingRequests.has(a)&&(this.pendingRequests.delete(a),c())},2e3)});const r=Date.now()-i;e.push(r)}}this.averageLatency=e.length>0?e.reduce((s,o)=>s+o,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const o=indexedDB.open("dcrypt_db",5);let i;o.onupgradeneeded=r=>{i=o.result,i.objectStoreNames.contains("store")||i.createObjectStore("store",{keyPath:"id"}),i.objectStoreNames.contains("transactions")||i.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),i.objectStoreNames.contains("offlineQueue")||i.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),i.objectStoreNames.contains("chunkCache")||i.createObjectStore("chunkCache",{keyPath:"id"}),console.log("DHT database upgraded to version",5)},o.onsuccess=()=>{this.db=o.result,console.log("DHT IndexedDB opened at version",this.db.version),e()},o.onerror=r=>t(new Error(`Failed to open IndexedDB: ${r.target.error.message}`))})}async loadKnownObjects(){if(!this.db)throw new Error("IndexedDB not initialized");try{const s=this.db.transaction("store","readonly").objectStore("store").getAll();s.onsuccess=()=>{s.result.forEach(o=>{if(o.id!=="dcrypt_identity")try{const{metadata:i,chunks:r}=JSON.parse(o.value);this.knownObjects.set(o.id,{metadata:i,chunks:r})}catch(i){console.error("Failed to parse known object:",o.id,i)}}),console.log("Loaded known objects from IndexedDB")}}catch(e){console.error("Failed to load known objects:",e)}}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.keypair,balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{return this.peerId=this.isNode?`node-${this.keypair}`:this.keypair,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new Ie(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),await new Promise((e,t)=>{this.peer.on("open",s=>{console.log(`PeerJS connection opened with ID: ${s}`),this.activeNodes.add(this.peerId),this.peer.on("connection",o=>this.handleConnection(o)),this.peer.on("error",o=>{var i;if(console.error("PeerJS error:",o.type,o.message),o.type==="peer-unavailable"){const r=(i=o.message.match(/Peer (.+) is unavailable/))==null?void 0:i[1];r&&this.handlePeerDisconnect(r)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),window.addEventListener("beforeunload",()=>{this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed on page unload"))}),setInterval(()=>this.discoverPeers(),3e3),setInterval(()=>this.measureLatency(),6e4),e()}),this.peer.on("error",s=>t(s))})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers...");const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to.");return}e.forEach(t=>{this.peers.has(t)?this.peers.get(t).connected||this.connectToPeer(t):(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,s)=>{!t.connected&&(this.connectionAttempts.get(s)||0)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${s}`),this.peers.delete(s),this.connectionAttempts.delete(s),this.activeNodes.delete(s))})}connectToPeer(e){var o;if((o=this.peers.get(e))!=null&&o.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Connecting to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const s=this.peer.connect(e,{reliable:!0});s.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:s}),this.activeNodes.add(e),this.connectionAttempts.delete(e),s.send({type:"handshake",peerId:this.peerId})}),s.on("data",i=>this.handlePeerData(i,e)),s.on("close",()=>this.handlePeerDisconnect(e)),s.on("error",i=>{console.warn(`Connection error with peer ${e}: ${i.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",s=>this.handlePeerData(s,t)),e.on("close",()=>this.handlePeerDisconnect(t)),e.on("error",s=>{console.error(`Connection error with peer ${t}:`,s),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const s=this.peers.get(t);s&&s.connected&&s.conn&&s.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const o=this.pendingRequests.get(e.requestId);o&&(o.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,s){try{await this.dbPut("chunkCache",{id:e,value:t});let o=this.chunkToPeerMap.get(e)||new Set;o.add(this.peerId),this.chunkToPeerMap.set(e,o),console.log(`Stored chunk ${e} from peer ${s}`)}catch(o){console.error(`Failed to store chunk ${e} from peer ${s}:`,o)}}async publishChunk(e,t,s,o){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let i=this.chunkToPeerMap.get(e)||new Set;if(i.add(this.peerId),this.chunkToPeerMap.set(e,i),this.activeNodes.size>0){const r=Array.from(this.activeNodes).filter(a=>a.startsWith("node-"));if(r.length>0){const a=s%r.length,l=r[a],p=this.peers.get(l);p&&p.connected&&p.conn&&(p.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),i.add(l),this.chunkToPeerMap.set(e,i),console.log(`Sent chunk ${e} to node ${l}`))}const c=Array.from(this.activeNodes).filter(a=>!a.startsWith("node-")&&a!==this.peerId);if(c.length>0){const a=c[Math.floor(Math.random()*c.length)],l=this.peers.get(a);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),i.add(a),this.chunkToPeerMap.set(e,i),console.log(`Sent chunk ${e} to peer ${a}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:s,totalChunks:o});this.broadcastChunk(e)}catch(i){throw console.error("publishChunk failed:",i),i}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,s){if(!this.db||!this.keypair)throw new Error("IndexedDB or keypair not initialized");try{const o=Array.isArray(e.tags)?e.tags.map(w=>String(w).trim()).filter(w=>w!==""):[],i=!!e.isPremium,r=i?e.priceUsd||30:0,c=new Uint8Array(t),a=e.content_type||"",l=this.keypair,h=$e(c,a,o,i,r,l,s||"text/plain"),g=Te(h),m=await ie(g),f=this.uint8ArrayToBase64Url(m),P=Array.from(this.activeNodes).filter(w=>w.startsWith("node-")),k=P.length>0?P.length:1,I=await Ue(h,this.keypair,k),S=await Promise.all(I.map(w=>Ae(w).then(M=>this.uint8ArrayToBase64Url(M)))),C={...e,chunk_count:I.length,isPremium:i,priceUsd:r},L={metadata:C,chunks:S};this.knownObjects.set(f,L),await this.dbPut("store",{id:f,value:JSON.stringify(L)});for(let w=0;w<I.length;w++)await this.publishChunk(S[w],I[w],w,I.length);return this.activeNodes.size>0?this.broadcastIP(f,C,S):await this.queueOfflineOperation({type:"publishIP",ipHash:f,metadata:C,chunkHashes:S}),f}catch(o){throw console.error("publishIP failed:",o),o}}broadcastIP(e,t,s){const o={type:"ip",ipHash:e,metadata:t,chunkHashes:s,peerId:this.peerId};this.broadcast(o),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const s=[];for(const l of t.chunks){const p=await this.dbGet("chunkCache",l);if(p&&p.value){s.push({chunk:p.value,hash:l});continue}const h=this.chunkToPeerMap.get(l);if(!h||h.size===0)throw new Error(`No peers found with chunk ${l}`);const g=Array.from(h).filter(k=>k.startsWith("node-")),m=Array.from(h).filter(k=>!k.startsWith("node-"));let f=!1,P=null;for(const k of[...g,...m])if(this.activeNodes.has(k))try{const I=await this.fetchChunkFromPeer(k,l);await this.dbPut("chunkCache",{id:l,value:I}),s.push({chunk:I,hash:l}),f=!0;break}catch(I){P=I,console.error(`Failed to fetch chunk ${l} from peer ${k}:`,I)}if(!f)throw P||new Error(`No available peer for chunk ${l}`)}const o=s.sort((l,p)=>Z(l.chunk)-Z(p.chunk)),i=await Promise.all(o.map(({chunk:l})=>Fe(l,this.keypair))),r=new Uint8Array(i.reduce((l,p)=>l+p.length,0));let c=0;for(const l of i)r.set(l,c),c+=l.length;const a=Ne(o[0].chunk);return{data:r,fileType:a}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const s=this.peers.get(e);if(!s||!s.connected||!s.conn)throw new Error(`Peer ${e} is not connected`);const o=`${e}-${t}-${Date.now()}`,i={type:"chunkRequest",requestId:o,chunkHash:t,peerId:this.peerId};return s.conn.send(i),new Promise((r,c)=>{this.pendingRequests.set(o,{resolve:r,reject:c,hash:t}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),c(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:s,chunkHash:o}=e;this.dbGet("chunkCache",o).then(i=>{if(i&&i.value){const r=this.peers.get(t);r&&r.connected&&r.conn&&(r.conn.send({type:"chunkResponse",requestId:s,chunkHash:o,chunkData:i.value,peerId:this.peerId}),console.log(`Sent chunk ${o} to peer ${t}`))}else console.warn(`Chunk ${o} not found for peer ${t}`)}).catch(i=>console.error(`Failed to retrieve chunk ${o} for peer ${t}:`,i))}handleChunkResponse(e){const{requestId:t,chunkHash:s,chunkData:o}=e,i=this.pendingRequests.get(t);i&&(i.hash===s?i.resolve(o):i.reject(new Error(`Received chunk hash ${s} does not match requested hash ${i.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(o=>o.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const s=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${s} per node)`);for(const o of t){const i=o.replace("node-",""),r=this.base64UrlToUint8Array(i),a=await this.getBalance(r)+s;await this.putBalance(r,a);const l=this.peers.get(o);l&&l.connected&&l.conn&&l.conn.send({type:"commission",amount:s,newBalance:a,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+e);return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+e,value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.keypair,balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const s=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(o=>s.clear().onsuccess=o);for(const o of e)try{switch(o.type){case"publishChunk":await this.publishChunk(o.chunkHash,o.chunkData,o.chunkIndex,o.totalChunks);break;case"publishIP":await this.broadcastIP(o.ipHash,o.metadata,o.chunkHashes);break;default:console.warn("Unknown offline operation type:",o.type)}}catch(i){console.error(`Failed to process offline operation ${o.type}:`,i),this.offlineQueue.push(o),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:o})}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).put(t);c.onsuccess=()=>s(),c.onerror=a=>o(new Error(`DB put failed: ${a.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const c=this.db.transaction(e,"readwrite").objectStore(e).add(t);c.onsuccess=()=>s(),c.onerror=a=>o(new Error(`DB add failed: ${a.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((s,o)=>{const c=this.db.transaction(e,"readonly").objectStore(e).get(t);c.onsuccess=()=>s(c.result),c.onerror=a=>o(new Error(`DB get failed: ${a.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,s)=>{const r=this.db.transaction(e,"readonly").objectStore(e).getAll();r.onsuccess=()=>t(r.result),r.onerror=c=>s(new Error(`DB getAll failed: ${c.target.error.message}`))})}broadcast(e){this.activeNodes.forEach(t=>{if(t!==this.peerId){const s=this.peers.get(t);s&&s.connected&&s.conn&&s.conn.send(e)}})}uint8ArrayToBase64Url(e){const t=String.fromCharCode(...e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}base64UrlToUint8Array(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const s=atob(t),o=new Uint8Array(s.length);for(let i=0;i<s.length;i++)o[i]=s.charCodeAt(i);return o}destroy(){this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed")),this.peers.clear(),this.activeNodes.clear(),this.pendingRequests.clear()}}function Le(n){const e=String.fromCharCode(...n);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}let y=null,b=null,Re=null,d=null,R=!1,E=0,_=!1,G=!1;async function le(){console.log("Starting Firebase initialization...");try{const n=await ve(()=>Promise.resolve().then(()=>De),void 0);y=n.auth,b=n.db,Re=n.storage,await fe(y,ge),console.log("Firebase services initialized successfully with local persistence")}catch(n){throw console.error("Failed to initialize Firebase services:",n),u("Failed to initialize Firebase. Please try again later.",!0),n}}function Oe(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,n=>{const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}function D(){return!!(y!=null&&y.currentUser)||localStorage.getItem("role")==="node"}function u(n,e=!1){const t=document.getElementById("toast");t&&(t.textContent=n,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function je(){if(!D()||!d){u("Please sign in and ensure the app is initialized before publishing.",!0);return}try{document.getElementById("publishModal").classList.add("active"),console.log("Opened publish modal")}catch(n){console.error("Failed to open publish modal:",n),u("Failed to open publish modal. Please try again.",!0)}}async function He(n,e,t,s){if(console.log(n,e,t,s),window.currentProduct=n,!D()||!d){u("Please sign in and ensure the app is initialized before viewing.",!0);return}try{const o=document.getElementById("buyPreviewModal");document.getElementById("snippetTitle").value=e,document.getElementById("snippetDescription").value=t,document.getElementById("snippetPrice").value=s==0?"Free":s,o.classList.add("active")}catch(o){console.error("Failed to open buy/preview modal:",o),u("Failed to open buy/preview modal. Please try again.",!0)}}function $(){var e,t;const n={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),mySnippetsTableBody:(t=document.getElementById("mySnippets"))==null?void 0:t.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance"),userNameElement:document.getElementById("userName"),userAvatarElement:document.querySelector(".user-avatar"),snippetsPostedElement:document.getElementById("snippetsPosted")};n.publishedItemsTableBody&&(n.publishedItemsTableBody.innerHTML=""),n.mySnippetsTableBody&&(n.mySnippetsTableBody.innerHTML=""),n.transactionList&&(n.transactionList.innerHTML="No transactions yet."),n.userBalanceElement&&(n.userBalanceElement.textContent="Balance: 0 DCT"),n.userNameElement&&(n.userNameElement.textContent="Guest User"),n.userAvatarElement&&(n.userAvatarElement.innerHTML='<i class="fas fa-user text-lg"></i>'),n.snippetsPostedElement&&(n.snippetsPostedElement.textContent="0"),E=0,localStorage.removeItem("userKeypair"),localStorage.removeItem("peerId"),localStorage.removeItem("dhtInitialized"),console.log("Cleared persisted state from localStorage on sign-out")}async function U(){const n=document.getElementById("userBalance");if(n){if(!d){n.textContent="Balance: 0 DCT",E=0;return}try{E=await d.getBalance(d.keypair)||0,n.textContent=`Balance: ${E} DCT`}catch(e){console.error("Failed to update balance:",e),n.textContent="Balance: 0 DCT",E=0}}}async function F(){const n=document.getElementById("transactionList");if(n){if(!d){n.innerHTML="Not initialized.";return}try{const e=await d.dbGetAll("transactions");if(e.length===0){n.innerHTML="No transactions yet.";return}n.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),n.innerHTML="Failed to load transactions."}}}async function z(){var e;const n=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(n){n.innerHTML="";try{const t=H(T(b,"snippets"));we(t,async s=>{const o={};if(s.forEach(i=>{o[i.id]=i.data()}),d){d.knownObjects.clear();for(const[i,r]of Object.entries(o)){const c={content_type:r.title,hash:r.ipHash,description:r.description||"No description",tags:r.tags||[],isPremium:r.isPremium||!1,priceUsd:r.priceUsd||0};d.knownObjects.set(i,{metadata:c,chunks:r.chunks||[]})}d.knownObjects.forEach((i,r)=>{const c=o[r],l=(i.metadata.isPremium||!1)&&i.metadata.priceUsd||0,p=l>0?`${l} DCT`:"Free",h=document.createElement("tr");h.innerHTML=`
            <td class="py-2 px-4">${i.metadata.content_type}</td>
            <td class="py-2 px-4">${i.metadata.tags.join(", ")||"No tags"}</td>
            <td class="py-2 px-4">${c.likes}</td>
            <td class="py-2 px-4">${c.dislikes}</td>
            <td class="py-2 px-4">
            
              <button onclick="window.openBuyModal('${i.metadata}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${p})</button>
              <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
            </td>
          `,n.appendChild(h)})}},s=>{console.error("Live feed snapshot error:",s),u("Failed to load live feed.",!0)})}catch(t){console.error("Failed to update live feed:",t),u("Failed to load live feed.",!0)}}}async function K(){var e,t;const n=(e=document.getElementById("mySnippets"))==null?void 0:e.querySelector("tbody");if(n){n.innerHTML="";try{const s=((t=y.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId");if(!s)return;const o=H(T(b,"snippets"),Q("creatorId","==",s));(await O(o)).forEach(r=>{const c=r.data(),a=document.createElement("tr");a.innerHTML=`
        <td class="py-2 px-4">${c.title||"No title"}</td>
        <td class="py-2 px-4">${c.ipHash}</td>
        <td class="py-2 px-4">
          <button onclick="window.copyHash('${c.ipHash}')" class="bg-blue-500 text-white rounded hover:bg-blue-600 px-3 py-1">Copy Hash</button>
        </td>
      `,n.appendChild(a)})}catch(s){console.error("Failed to update my snippets:",s),u("Failed to load your snippets.",!0)}}}async function qe(n){var t;const e=(t=document.getElementById("publishedItems"))==null?void 0:t.querySelector("tbody");if(e){e.innerHTML="";try{const s=n.split(",").map(r=>r.trim().toLowerCase()).filter(r=>r);let o;s.length===0?o=await O(H(T(b,"snippets"),Q("reviewStatus","==","active"))):o=await O(H(T(b,"snippets"),Q("reviewStatus","==","active")));const i={};if(o.forEach(r=>{i[r.id]=r.data()}),d){d.knownObjects.clear();for(const[r,c]of Object.entries(i)){const a={content_type:c.title,description:c.description||"No description",tags:c.tags||[],isPremium:c.isPremium||!1,priceUsd:c.priceUsd||0};d.knownObjects.set(r,{metadata:a,chunks:c.chunks||[]})}d.knownObjects.forEach((r,c)=>{const a=i[c]||{likes:0,dislikes:0,reviewStatus:"active"};if(a.reviewStatus!=="active")return;const l=(r.metadata.tags||[]).map(f=>f.toLowerCase());if(s.length>0&&!s.some(f=>l.includes(f)))return;const h=(r.metadata.isPremium||!1)&&r.metadata.priceUsd||0,g=h>0?`${h} DCT`:"Free",m=document.createElement("tr");m.innerHTML=`
          <td class="py-2 px-4">${r.metadata.content_type}</td>
          <td class="py-2 px-4">${r.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${r.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${a.likes}</td>
          <td class="py-2 px-4">${a.dislikes}</td>
          <td class="py-2 px-4">
            <button onclick="window.openBuyModal('${r.metadata.content_type,r.metadata.description,r.metadata.priceUsd}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${g})</button>
            <button onclick="window.flagSnippet('${c}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(m)})}}catch(s){console.error("Failed to search snippets:",s),u("Search failed.",!0)}}}async function N(){var e;const n=((e=y.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(n)try{const t=B(b,"users",n),s=d?await d.getBalance(d.keypair):0;await x(t,{balance:s,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function ze(){const n=document.getElementById("transactionHistory");n&&(n.style.display=n.style.display==="none"?"block":"none")}function Me(n,e,t){const s=document.getElementById("snippetDisplay");if(!s)return;s.innerHTML="";const o=document.createElement("div");o.className="p-4 bg-gray-800 rounded-lg mt-4";const i=document.createElement("h3");if(i.className="text-lg font-semibold mb-2",i.textContent=t||"Snippet Content",o.appendChild(i),e.startsWith("text")){const r=new TextDecoder().decode(n),c=document.createElement("pre");c.className="text-sm text-gray-300 whitespace-pre-wrap",c.textContent=r,o.appendChild(c)}else if(e.startsWith("image")){const r=new Blob([n],{type:e}),c=URL.createObjectURL(r),a=document.createElement("img");a.src=c,a.className="max-w-full h-auto rounded",a.onload=()=>URL.revokeObjectURL(c),o.appendChild(a)}else{const r=new Blob([n],{type:e}),c=URL.createObjectURL(r),a=document.createElement("a");a.href=c,a.download=t||"downloaded_file",a.className="text-blue-400 hover:underline",a.textContent="Download File",a.onclick=()=>setTimeout(()=>URL.revokeObjectURL(c),1e3),o.appendChild(a)}s.appendChild(o)}async function J(){return new Promise((e,t)=>{console.log("Starting IndexedDB initialization...");const s=indexedDB.open("dcrypt_db");s.onsuccess=()=>{const o=s.result,i=o.version;console.log("Current IndexedDB version:",i),o.close();const r=indexedDB.open("dcrypt_db",Math.max(i,5));r.onupgradeneeded=c=>{const a=r.result;console.log("Upgrading database to version",5),a.objectStoreNames.contains("store")||(a.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),a.objectStoreNames.contains("transactions")||(a.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),a.objectStoreNames.contains("offlineQueue")||(a.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),a.objectStoreNames.contains("chunkCache")||(a.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache")),console.log("Database upgrade completed")},r.onsuccess=()=>{const c=r.result;console.log("IndexedDB opened successfully at version",c.version),e(c)},r.onerror=()=>{console.error("Failed to open IndexedDB:",r.error),t(new Error(`Failed to open IndexedDB: ${r.error.message}`))}},s.onerror=()=>{console.error("Failed to check IndexedDB version:",s.error),t(new Error(`Failed to check IndexedDB version: ${s.error.message}`))}})}async function de(n){return new Promise((e,t)=>{try{const i=n.transaction("store","readonly").objectStore("store").get("dcrypt_identity");i.onsuccess=()=>{var c;const r=(c=i.result)==null?void 0:c.value;r&&typeof r=="string"?(console.log("Loaded keypair from IndexedDB:",r),e(r)):(console.log("No valid keypair found in IndexedDB."),e(null))},i.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",i.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(s){console.error('Error accessing "store" object store:',s),t(s)}})}async function X(n,e){return new Promise((t,s)=>{try{console.log("Storing keypair in IndexedDB:",e);const r=n.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});r.onsuccess=()=>{console.log("Successfully stored keypair in IndexedDB"),t()},r.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",r.error),s(new Error("Failed to store keypair in IndexedDB"))}}catch(o){console.error('Error storing keypair in "store" object store:',o),s(o)}})}async function ee(n,e){if(G){console.log("Initialization already in progress, skipping...");return}G=!0,console.log("Initializing app with userId:",n);try{e||(e=await J());let t=await de(e);if(t instanceof Uint8Array&&(t=Le(t)),!t&&n)console.log("No keypair found, using userId as keypair:",n),await X(e,n),t=n;else if(t)t.length>40&&(console.warn("Existing keypair is unusually large:",t.length,"characters. Overwriting with userId."),t=n,await X(e,n));else throw new Error("No keypair available and no userId provided to create one");R=await _e(n),console.log(`User is ${R?"":"not "}a node.`),d=new ce(t,R),window.dht=d,await d.initDB(),console.log("DHT database initialized."),await d.initSwarm(),console.log("DHT swarm initialized."),await d.syncUserData(),console.log("User data synced."),await Promise.all([z(),K(),U(),F()]),console.log("UI updated."),await pe(n)}catch(t){console.error("Error initializing application:",t),t.message.includes("ID conflict")?u("Failed to connect to the network due to an ID conflict. Please try signing out and signing in again.",!0):u(`Initialization failed: ${t.message}`,!0),d&&d.destroy(),d=null,window.dht=null,E=0,$()}finally{G=!1}N()}async function _e(n){try{const e=B(b,"nodes",n);return(await q(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Ge(n,e=800,t=800,s=.7){return new Promise((o,i)=>{const r=new Image;r.src=URL.createObjectURL(n),r.onload=()=>{const c=document.createElement("canvas");let a=r.width,l=r.height;a>l?a>e&&(l*=e/a,a=e):l>t&&(a*=t/l,l=t),c.width=a,c.height=l,c.getContext("2d").drawImage(r,0,0,a,l),c.toBlob(h=>o(h),n.type,s)},r.onerror=i})}async function Qe(n,e){if(!e)return console.log("No file provided for upload"),null;if(!y.currentUser||y.currentUser.uid!==n)return console.error("User not authenticated or ID mismatch"),u("Please sign in to upload a profile image.",!0),null;try{const t=await Ge(e),s=new FileReader,i=await new Promise((c,a)=>{s.onload=()=>c(s.result.split(",")[1]),s.onerror=a,s.readAsDataURL(t)}),r=B(b,"users",n);return await x(r,{profileImage:i,updatedAt:new Date().toISOString()},{merge:!0}),console.log("Compressed profile image stored in Firestore for user:",n),i}catch(t){return console.error("Failed to store profile image in Firestore:",t),u(`Failed to store profile image: ${t.message}`,!0),null}}async function We(){if(console.log("handleSignup function called"),_){console.log("Signup already in progress, ignoring additional clicks");return}_=!0;const n=document.getElementById("signupButton");n&&(n.disabled=!0,n.textContent="Signing Up...",console.log("Signup button disabled and text updated")),localStorage.setItem("pendingRole","user");try{const e=new oe,t=await se(y,e);console.log("Sign-up successful, user:",t.user);const s=document.getElementById("usernameInput").value,i=document.getElementById("profileImageInput").files[0];console.log(i);const r=i?await Qe(t.user.uid,i):null,c=B(b,"users",t.user.uid);await x(c,{username:s||t.user.displayName||"Anonymous User",profileImageUrl:r||null,createdAt:Date.now(),snippetsPosted:0},{merge:!0}),console.log("User profile saved to Firestore"),u("Sign-up successful! Redirecting to dashboard..."),window.location.href="/datasharingApp/"}catch(e){console.error("Signup failed:",e),u(`Sign-up failed: ${e.message}`,!0),_=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google")}finally{localStorage.removeItem("pendingRole")}}async function Ke(n){if(!D()){u("Please sign in to deposit.");return}try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+n;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:n,timestamp:Date.now()}),u(`Deposited ${n} DCT successfully!`),await Promise.all([F(),U(),N()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}}async function Je(n){if(!D()){u("Please sign in to withdraw.");return}try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<n)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-n),await d.dbAdd("transactions",{type:"withdraw",amount:n,timestamp:Date.now()}),u(`Withdrew ${n} DCT successfully!`),await Promise.all([F(),U(),N()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}}async function Ve(){console.log("signIn function called");try{y||(console.error("Firebase Auth is not initialized, initializing now..."),await le());const n=new oe,e=await se(y,n);console.log("Sign-in successful, user:",e.user)}catch(n){console.error("Login failed:",n),u(`Login failed: ${n.message}`,!0)}}async function te(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await me(y),u("Signed out successfully!")),d&&(d.destroy(),d=null,window.dht=null);const t=(await J()).transaction("store","readwrite").objectStore("store");await new Promise((s,o)=>{const i=t.delete("dcrypt_identity");i.onsuccess=()=>{console.log("Successfully deleted keypair from IndexedDB"),s()},i.onerror=()=>{console.error("Failed to delete keypair from IndexedDB:",i.error),o(new Error("Failed to delete keypair from IndexedDB"))}}),E=0,$()}catch(n){console.error("Sign-out failed:",n),u(`Sign-out failed: ${n.message}`,!0)}}async function Ye(n,e,t,s,o){var i,r;if(!D()){u("Please sign in to publish.");return}try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Title is required");let c=s||"",a="text/plain";if((i=o==null?void 0:o.files)!=null&&i.length){const S=o.files[0];a=S.type||"application/octet-stream",c=await new Promise((C,L)=>{const w=new FileReader;w.onload=M=>C(new Uint8Array(M.target.result)),w.onerror=()=>L(new Error("Failed to read file")),w.readAsArrayBuffer(S)})}else c=new TextEncoder().encode(c);const l=document.getElementById("modalPremium").checked,p=document.getElementById("modalPriceInput"),h=l&&p&&parseFloat(p.value)||0,g={content_type:a,title:n,description:e||"",tags:t?t.split(",").map(S=>S.trim()).filter(S=>S.length>0):[],isPremium:l,priceUsd:h},m=await d.publishIP(g,c,a),f=((r=y.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId"),P=B(b,"snippets",m),k={ipHash:m,title:n,description:e||"",tags:g.tags,isPremium:l,priceUsd:h,flagCount:0,likes:0,dislikes:0,createdAt:Date.now(),creatorId:f};console.log("Saving snippet to Firestore: ",k),await x(P,k,{merge:!0});const I=B(b,"users",f);await A(I,{snippetsPosted:j(1)}),u("Snippet published successfully!"),window.closePublishModal(),await Promise.all([z(),K(),F(),U(),N(),pe(f)])}catch(c){throw console.error("publishSnippet failed:",c),u(`Publish failed: ${c.message}`,!0),c}}async function ue(n){if(!D())return u("Please sign in to buy."),null;try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Hash is required");let e=d.knownObjects.get(n);if(!e){const a=B(b,"snippets",n),l=await q(a);if(!l.exists())throw new Error("Snippet not found");const p=l.data();e={metadata:{content_type:p.ipHash,description:p.description||"No description",tags:p.tags||[],isPremium:p.isPremium||!1,priceUsd:p.priceUsd||0},chunks:p.chunks||[]},d.knownObjects.set(n,e),await d.broadcastIP(n,e.metadata,e.chunks)}const o=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(o>0){const a=await d.getBalance(d.keypair);if(a<o)throw new Error("Insufficient balance");const l=o*.05;await d.distributeCommission(l),await d.putBalance(d.keypair,a-o),await d.dbAdd("transactions",{type:"buy",amount:o,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:i,fileType:r}=await d.requestData(n);u("Snippet retrieved successfully!"),await Promise.all([F(),U(),N(),K()]);const c=prompt('Do you like this snippet? Type "like" or "dislike":');if(c!==null){const a=c.trim().toLowerCase();a==="like"||a==="dislike"?(await Xe(n,a),u(`You ${a}d this snippet!`),await z()):u('Invalid input. Please type "like" or "dislike".',!0)}return Me(i,r,e.metadata.content_type),{data:i,fileType:r}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}}async function Ze(n){var s;const e=n||((s=document.getElementById("buyHashInput"))==null?void 0:s.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await ue(e)&&u("Snippet purchased and displayed below!")}async function Xe(n,e){var s;const t=((s=y.currentUser)==null?void 0:s.uid)||localStorage.getItem("nodeId");if(t)try{const o=B(b,"snippets",n,"feedback",t);await x(o,{action:e,timestamp:Date.now()});const i=B(b,"snippets",n);e==="like"?await A(i,{likes:j(1)}):e==="dislike"&&await A(i,{dislikes:j(1)})}catch(o){console.error("Failed to submit feedback:",o),u(`Failed to submit feedback: ${o.message}`,!0)}}async function et(n){var t;if(!(((t=y.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const s=B(b,"snippets",n);await A(s,{flagCount:j(1)}),((await q(s)).data().flagCount||0)>=3?(await A(s,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await z()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(s){console.error("Failed to flag snippet:",s),u(`Failed to flag snippet: ${s.message}`,!0)}}async function tt(){const n=Oe();console.log(n),localStorage.setItem("nodeId",n),localStorage.setItem("role","node");const e=B(b,"nodes",n);if(await x(e,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!window.location.pathname.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html";return}}async function nt(){try{const n=localStorage.getItem("nodeId"),e=localStorage.getItem("role");if(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),sessionStorage.setItem("nodeId",n),sessionStorage.setItem("role",e),console.log("Moved to session storage"),e!=="node"||!n){u("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}d=new ce(n,!0),await d.initDB(),await d.initSwarm(),await d.syncUserData();const s=(await d.dbGetAll("transactions")).filter(i=>i.type==="commission").reduce((i,r)=>i+(r.amount||0),0),o=document.getElementById("nodeEarnings");o&&(o.textContent=`Total Earnings: ${s.toFixed(2)} DCT`)}catch(n){console.error("Error initializing node instructions:",n),u(`Initialization failed: ${n.message}`)}}async function pe(n){if(n)try{const e=B(b,"users",n),t=await q(e);if(t.exists()){const s=t.data(),o=document.getElementById("userName"),i=document.querySelector(".user-avatar"),r=document.getElementById("snippetsPosted");o&&(o.textContent=s.username||"Anonymous User"),i&&(s.profileImageUrl?i.innerHTML=`<img src="${s.profileImageUrl}" alt="Profile Image" class="w-12 h-12 rounded-full object-cover">`:i.innerHTML='<i class="fas fa-user text-lg"></i>'),r&&(r.textContent=s.snippetsPosted||0)}}catch(e){console.error("Failed to fetch user profile:",e),u("Failed to load user profile.",!0)}}async function ot(n){try{await navigator.clipboard.writeText(n),u("Hash copied to clipboard!")}catch(e){console.error("Failed to copy hash:",e),u("Failed to copy hash.",!0)}}document.addEventListener("DOMContentLoaded",async()=>{var s,o,i;if(console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname),window.location.pathname.includes("signup")){const r=document.getElementById("userSignupForm");r&&r.addEventListener("submit",async c=>{c.preventDefault(),await window.handleSignup()})}window.location.pathname.includes("node")&&nt();try{await le()}catch(r){console.error("Firebase initialization failed, aborting setup:",r),u("Firebase initialization failed. Please check your configuration.",!0);return}const n=localStorage.getItem("role"),e=localStorage.getItem("nodeId"),t=!(window.location.pathname.includes("node")||window.location.pathname.includes("signup.html")||window.location.pathname.includes("publish"));if(t&&n==="node"&&e&&(console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html"),t||window.location.pathname.includes("publish")){const r=await J(),c=await de(r);try{await Promise.all([new Promise(a=>{V(y,async l=>{if(console.log("onAuthStateChanged triggered"),l)console.log("User is signed in:",l.uid),await ee(l.uid,r);else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{c?(console.log("Found keypair in IndexedDB, initializing app..."),await ee(c,r)):(console.log("No keypair found in IndexedDB."),t&&$())}catch(p){console.error("Failed to initialize IndexedDB or load keypair:",p),t&&$()}}a()},l=>{console.error("onAuthStateChanged error:",l),u("Failed to monitor authentication state.",!0),a()})})])}catch(a){console.error("Initialization error:",a),u("An error occurred during initialization.",!0)}}if(t){const r={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(s=document.getElementById("publishedItems"))==null?void 0:s.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};console.log("On index.html, setting up UI and event listeners"),n==="node"&&e&&(R=!0,console.log("Node detected, but should have been redirected already.")),(o=r.loginButton)==null||o.addEventListener("click",a=>{a.preventDefault(),console.log("Login button clicked"),Ve()}),(i=r.logoutButton)==null||i.addEventListener("click",a=>{a.preventDefault(),console.log("Logout button clicked"),te()}),V(y,a=>{var l,p,h,g,m,f;a?((l=r.signupButton)==null||l.classList.add("hidden"),(p=r.loginButton)==null||p.classList.add("hidden"),(h=r.logoutButton)==null||h.classList.remove("hidden"),r.searchButton.disabled=!1,r.depositButton.disabled=!1,r.withdrawButton.disabled=!1,r.toggleHistoryButton.disabled=!1,r.buyHashButton.disabled=!1):((g=r.signupButton)==null||g.classList.remove("hidden"),(m=r.loginButton)==null||m.classList.remove("hidden"),(f=r.logoutButton)==null||f.classList.add("hidden"),r.searchButton.disabled=!0,r.depositButton.disabled=!0,r.withdrawButton.disabled=!0,r.toggleHistoryButton.disabled=!0,r.buyHashButton.disabled=!0,$())});const c=document.getElementById("publishForm");c&&c.addEventListener("submit",async a=>{a.preventDefault();const l=document.getElementById("modalTitleInput").value,p=document.getElementById("modalDescriptionInput").value,h=document.getElementById("modalTagsInput").value,g=document.getElementById("modalContentInput").value,m=document.getElementById("modalFileInput");await window.publishSnippet(l,p,h,g,m)})}else console.log("Not on index.html, skipping index.html-specific setup");window.logout=te,window.publishSnippet=Ye,window.buySnippet=ue,window.buySnippetByHash=Ze,window.toggleTransactionHistory=ze,window.flagSnippet=et,window.handleSignup=We,window.becomeNode=tt,window.deposit=Ke,window.withdraw=Je,window.redirectToPublish=je,window.searchSnippets=qe,window.copyHash=ot,window.openBuyModal=He});
