import{getAuth as fe,GoogleAuthProvider as K,signInWithPopup as ge,onAuthStateChanged as me,signInWithRedirect as se,signOut as ye}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as we,getDocs as z,collection as H,doc as v,setDoc as E,updateDoc as Q,increment as be,getDoc as re}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import"https://cdn.jsdelivr.net/npm/crypto-js@4.2.0/+esm";import ie from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as xe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const Ie="modulepreload",Be=function(n){return"/datasharingApp/"+n},Y={},ke=function(e,t,o){let s=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),a=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));s=Promise.allSettled(t.map(c=>{if(c=Be(c),c in Y)return;Y[c]=!0;const l=c.endsWith(".css"),h=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${h}`))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":Ie,l||(p.as="script"),p.crossOrigin="",p.href=c,a&&p.setAttribute("nonce",a),document.head.appendChild(p),l)return new Promise((m,b)=>{p.addEventListener("load",m),p.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${c}`)))})}))}function r(i){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=i,window.dispatchEvent(a),!a.defaultPrevented)throw i}return s.then(i=>{for(const a of i||[])a.status==="rejected"&&r(a.reason);return e().catch(r)})},ve={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},ae=xe(ve),ce=fe(ae),N=we(ae),Se=Object.freeze(Object.defineProperty({__proto__:null,auth:ce,db:N},Symbol.toStringTag,{value:"Module"}));var oe;const $=(oe=globalThis.crypto)==null?void 0:oe.subtle;if(!$)throw new Error("Web Crypto API is not available in this environment");function Pe(){const n=new Uint8Array(12);for(let e=0;e<12;e++)n[e]=Math.floor(Math.random()*256);return n}function De(n,e,t,o,s,r,i){return{content:new Uint8Array(n),content_type:e,tags:t||[],is_premium:o,price_usd:s,creator_id:new Uint8Array(r),file_type:i}}function Ee(n){return n.content}async function le(n){const e=await $.digest("SHA-256",n);return new Uint8Array(e)}async function $e(n,e,t){const o=n.content,s=Math.ceil(o.length/t),r=[],i=await $.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["encrypt"]);for(let a=0;a<t;a++){const c=a*s,l=Math.min(c+s,o.length),h=o.slice(c,l),p=Pe(),m=await $.encrypt({name:"AES-GCM",iv:p},i,h),b={data:new Uint8Array(m),nonce:p,index:a,file_type:n.file_type};r.push(b)}return r}function Ce(n){const e=new Uint8Array(new Int32Array([n.index]).buffer),t=new Uint8Array([...n.data,...n.nonce,...e]);return le(t)}function V(n){return n.index}async function Ae(n,e){const t=await $.importKey("raw",new Uint8Array(e.slice(0,32)),{name:"AES-GCM"},!1,["decrypt"]),o=await $.decrypt({name:"AES-GCM",iv:n.nonce},t,n.data);return new Uint8Array(o)}function Te(n){return n.file_type}class de{constructor(e,t=!1){this.peers=new Map,this.channels=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await z(H(N,"nodes"));this.nodes.clear(),t.empty?console.warn("No nodes found in Firestore. Using empty node list."):t.forEach(o=>{const s=`node-${o.id}`;this.nodes.add(s)}),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear(),console.warn("No nodes available. Peer discovery will be limited to regular peers.")}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const o of t){const s=this.peers.get(o);if(s&&s.connected&&s.conn){const r=Date.now();await new Promise(a=>{const c=`${o}-ping-${Date.now()}`;s.conn.send({type:"ping",requestId:c}),this.pendingRequests.set(c,{resolve:a}),setTimeout(()=>{this.pendingRequests.has(c)&&(this.pendingRequests.delete(c),a())},2e3)});const i=Date.now()-r;e.push(i)}}this.averageLatency=e.length>0?e.reduce((o,s)=>o+s,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const o=indexedDB.open("dcrypt_db",4);let s;o.onupgradeneeded=r=>{console.log("onupgradeneeded triggered for dcrypt_db version",r.target.result.version),s=o.result,s.objectStoreNames.contains("store")||(s.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),s.objectStoreNames.contains("transactions")||(s.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),s.objectStoreNames.contains("offlineQueue")||(s.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),s.objectStoreNames.contains("chunkCache")||(s.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache"))},o.onsuccess=()=>{this.db=o.result,console.log("IndexedDB opened successfully"),Promise.all([this.loadIdentity(),this.loadOfflineQueue(),this.loadTransactions()]).then(()=>{console.log("IndexedDB initialized successfully"),e()}).catch(r=>{console.error("Failed to load data after IndexedDB initialization:",r),t(new Error(`Failed to load data: ${r.message}`))})},o.onerror=r=>{console.error("Failed to initialize IndexedDB:",r.target.error),t(new Error(`Failed to initialize IndexedDB: ${r.target.error.message}`))}})}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.uint8ArrayToHex(this.keypair)}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{const e=new TextDecoder().decode(this.keypair);return this.peerId=this.isNode?`node-${e}`:e,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new ie(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),new Promise((t,o)=>{this.peer.on("open",s=>{console.log(`PeerJS connection opened with ID: ${s}`),this.activeNodes.add(this.peerId),this.peer.on("connection",r=>{this.handleConnection(r)}),this.peer.on("error",r=>{var i;if(console.error("PeerJS error:",r.type,r.message),r.type==="peer-unavailable"){const a=(i=r.message.match(/Peer (.+) is unavailable/))==null?void 0:i[1];a&&this.handlePeerDisconnect(a)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),setInterval(()=>this.discoverPeers(),5e3),setInterval(()=>this.measureLatency(),6e4),t()}),this.peer.on("error",s=>{console.error("Failed to initialize PeerJS:",s),o(s)})})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers..."),console.log("My peer ID:",this.peerId),console.log("Known peer IDs:",Array.from(this.nodes));const e=[...Array.from(this.nodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to. Waiting for nodes to be discovered.");return}e.forEach(t=>{this.peers.has(t)||(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,o)=>{!t.connected&&this.connectionAttempts.get(o)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${o}`),this.peers.delete(o),this.connectionAttempts.delete(o),this.activeNodes.delete(o))})}connectToPeer(e){var s;if((s=this.peers.get(e))!=null&&s.connected)return;const t=this.connectionAttempts.get(e)||0;if(t>=this.maxConnectionAttempts)return;console.log(`Attempting to connect to peer: ${e} (Attempt ${t+1}/${this.maxConnectionAttempts})`);const o=this.peer.connect(e,{reliable:!0});o.on("open",()=>{console.log(`Connected to peer: ${e}`),this.peers.set(e,{connected:!0,conn:o}),this.activeNodes.add(e),this.connectionAttempts.delete(e),o.send({type:"handshake",peerId:this.peerId})}),o.on("data",r=>{this.handlePeerData(r,e)}),o.on("close",()=>{console.log(`Connection closed with peer: ${e}`),this.handlePeerDisconnect(e)}),o.on("error",r=>{console.warn(`Connection error with peer ${e}: ${r.message}`),this.handlePeerDisconnect(e)}),this.connectionAttempts.set(e,t+1)}handleConnection(e){const t=e.peer;console.log(`Incoming connection from peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t),e.on("data",o=>{this.handlePeerData(o,t)}),e.on("close",()=>{console.log(`Connection closed with peer: ${t}`),this.handlePeerDisconnect(t)}),e.on("error",o=>{console.error(`Connection error with peer ${t}:`,o),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will attempt to reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake received from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const o=this.peers.get(t);o&&o.connected&&o.conn&&o.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const s=this.pendingRequests.get(e.requestId);s&&(s.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type received from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,o){try{await this.dbPut("chunkCache",{id:e,value:t});let s=this.chunkToPeerMap.get(e)||new Set;s.add(this.peerId),this.chunkToPeerMap.set(e,s),console.log(`Stored chunk ${e} from peer ${o}`)}catch(s){console.error(`Failed to store chunk ${e} from peer ${o}:`,s)}}async publishChunk(e,t,o,s){if(!this.db)throw new Error("IndexedDB not initialized");try{if(console.log("publishChunk: chunkHash=",e,"chunkData=",t),!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let r=this.chunkToPeerMap.get(e)||new Set;if(r.add(this.peerId),this.chunkToPeerMap.set(e,r),this.activeNodes.size>0){const i=Array.from(this.activeNodes).filter(c=>c.startsWith("node-"));if(i.length>0){const c=o%i.length,l=i[c],h=this.peers.get(l);h&&h.connected&&h.conn&&(h.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(l),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to node ${l}`))}const a=Array.from(this.activeNodes).filter(c=>!c.startsWith("node-")&&c!==this.peerId);if(a.length>0){const c=a[Math.floor(Math.random()*a.length)],l=this.peers.get(c);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),r.add(c),this.chunkToPeerMap.set(e,r),console.log(`Sent chunk ${e} to random peer ${c}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:o,totalChunks:s});this.broadcastChunk(e)}catch(r){throw console.error("publishChunk failed:",r),r}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,o){if(!this.db)throw new Error("IndexedDB not initialized");if(!this.keypair)throw new Error("Keypair not initialized");try{const s=Array.isArray(e.tags)?e.tags.map(g=>typeof g!="string"?(console.warn(`Invalid tag: ${g}, converting to string`),String(g)):g).filter(g=>g.trim()!==""):[];console.log("Processed tags:",s);const r=!!e.isPremium,i=r?e.priceUsd||30:0,a=new Uint8Array(t),c=e.content_type||"",l=this.keypair instanceof Uint8Array?this.keypair:new Uint8Array(this.keypair),p=De(a,c,s,r,i,l,o||"text/plain"),m=Ee(p),b=await le(m),I=this.uint8ArrayToHex(b),k=Array.from(this.activeNodes).filter(g=>g.startsWith("node-")),y=k.length>0?k.length:1,w=await $e(p,Array.from(this.keypair),y),S=[];for(let g=0;g<w.length;g++){const M=w[g],_=await Ce(M),pe=this.uint8ArrayToHex(_);S.push(pe)}const P={...e,chunk_count:w.length,isPremium:r,priceUsd:r?i:0},U={metadata:P,chunks:S};this.knownObjects.set(I,U),await this.dbPut("store",{id:I,value:JSON.stringify(U)});for(let g=0;g<w.length;g++){const M=w[g],_=S[g];await this.publishChunk(_,M,g,w.length)}return this.activeNodes.size>0?this.broadcastIP(I,P,S):await this.queueOfflineOperation({type:"publishIP",ipHash:I,metadata:P,chunkHashes:S}),I}catch(s){throw console.error("publishIP failed:",s),s}}broadcastIP(e,t,o){const s={type:"ip",ipHash:e,metadata:t,chunkHashes:o,peerId:this.peerId};this.broadcast(s),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string")throw new Error("Invalid IP hash");const t=this.knownObjects.get(e);if(!t)throw new Error("IP not found");const o=[];for(const l of t.chunks){const h=await this.dbGet("chunkCache",l);if(h&&h.value){o.push({chunk:h.value,hash:l});continue}const p=this.chunkToPeerMap.get(l);if(!p||p.size===0)throw new Error(`No peers found with chunk ${l}`);const m=Array.from(p).filter(y=>y.startsWith("node-")),b=Array.from(p).filter(y=>!y.startsWith("node-"));let I=!1,k=null;for(const y of[...m,...b])if(this.activeNodes.has(y))try{const w=await this.fetchChunkFromPeer(y,l);await this.dbPut("chunkCache",{id:l,value:w}),o.push({chunk:w,hash:l}),I=!0;break}catch(w){k=w,console.error(`Failed to fetch chunk ${l} from peer ${y}:`,w);continue}if(!I)throw k||new Error(`No available peer for chunk ${l}`)}const s=o.sort((l,h)=>{const p=V(l.chunk),m=V(h.chunk);return p-m}),r=[];for(const{chunk:l}of s){const h=await Ae(l,Array.from(this.keypair));r.push(h)}const i=new Uint8Array(r.reduce((l,h)=>l+h.length,0));let a=0;for(const l of r)i.set(l,a),a+=l.length;const c=Te(s[0].chunk);return{data:i,fileType:c}}catch(t){throw console.error("requestData failed:",t),t}}async fetchChunkFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const s=`${e}-${t}-${Date.now()}`,r={type:"chunkRequest",requestId:s,chunkHash:t,peerId:this.peerId};return o.conn.send(r),new Promise((i,a)=>{this.pendingRequests.set(s,{resolve:i,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(s)&&(this.pendingRequests.delete(s),a(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:o,chunkHash:s}=e;this.dbGet("chunkCache",s).then(r=>{if(r&&r.value){const i={type:"chunkResponse",requestId:o,chunkHash:s,chunkData:r.value,peerId:this.peerId},a=this.peers.get(t);a&&a.connected&&a.conn&&(a.conn.send(i),console.log(`Sent chunk ${s} to peer ${t}`))}else console.warn(`Chunk ${s} not found for peer ${t}`)}).catch(r=>{console.error(`Failed to retrieve chunk ${s} for peer ${t}:`,r)})}handleChunkResponse(e){const{requestId:t,chunkHash:o,chunkData:s}=e,r=this.pendingRequests.get(t);r&&(r.hash===o?r.resolve(s):r.reject(new Error(`Received chunk hash ${o} does not match requested hash ${r.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(s=>s.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const o=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${o} per node)`);for(const s of t){const r=this.hexToUint8Array(s.replace("node-","")),a=await this.getBalance(r)+o;await this.putBalance(r,a),console.log(`Awarded ${o} to node ${s}. New balance: ${a}`);const c=this.peers.get(s);c&&c.connected&&c.conn&&c.conn.send({type:"commission",amount:o,newBalance:a,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+this.uint8ArrayToHex(e));return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+this.uint8ArrayToHex(e),value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.uint8ArrayToHex(this.keypair),balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const o=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(s=>{o.clear().onsuccess=s});for(const s of e)try{switch(s.type){case"publishChunk":await this.publishChunk(s.chunkHash,s.chunkData,s.chunkIndex,s.totalChunks);break;case"publishIP":await this.broadcastIP(s.ipHash,s.metadata,s.chunkHashes);break;default:console.warn("Unknown offline operation type:",s.type)}}catch(r){console.error(`Failed to process offline operation ${s.type}:`,r),this.offlineQueue.push(s),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:s})}}async loadIdentity(){if(this.db)try{const e=await this.dbGet("store","dcrypt_identity");e&&e.value&&typeof e.value=="string"&&(this.keypair=this.hexToUint8Array(e.value),console.log("Loaded identity from IndexedDB"))}catch(e){console.error("Failed to load identity:",e)}}async loadOfflineQueue(){if(this.db)try{const e=await this.dbGetAll("offlineQueue");this.offlineQueue=e.map(t=>t.value),console.log("Loaded offline queue:",this.offlineQueue)}catch(e){console.error("Failed to load offline queue:",e)}}async loadTransactions(){if(this.db)try{const e=await this.dbGetAll("transactions");console.log("Loaded transactions:",e)}catch(e){console.error("Failed to load transactions:",e)}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,s)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).put(t);a.onsuccess=()=>o(),a.onerror=c=>s(new Error(`DB put failed: ${c.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,s)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).add(t);a.onsuccess=()=>o(),a.onerror=c=>s(new Error(`DB add failed: ${c.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,s)=>{const a=this.db.transaction(e,"readonly").objectStore(e).get(t);a.onsuccess=()=>o(a.result),a.onerror=c=>s(new Error(`DB get failed: ${c.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,o)=>{const i=this.db.transaction(e,"readonly").objectStore(e).getAll();i.onsuccess=()=>t(i.result),i.onerror=a=>o(new Error(`DB getAll failed: ${a.target.error.message}`))})}uint8ArrayToHex(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("")}hexToUint8Array(e){if(!e||typeof e!="string")return new Uint8Array(0);const t=e.match(/.{1,2}/g);return t?new Uint8Array(t.map(o=>parseInt(o,16))):new Uint8Array(0)}broadcast(e){this.peers.forEach((t,o)=>{t.connected&&t.conn&&t.conn.send(e)})}}function Le(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}async function Ue(){const n=[];for(let t=0;t<3;t++){const o=`node-test-${Le()}`;console.log(`Initializing test peer with ID: ${o}`);const s=new ie(o,{host:"0.peerjs.com",port:443,path:"/",secure:!0,debug:2}),r=new Promise((i,a)=>{s.on("open",()=>{console.log(`Test peer ${o} opened`),n.push({peer:s,peerId:o}),i()}),s.on("error",c=>{console.error(`Test peer ${o} error:`,c),a(c)}),s.on("disconnected",()=>{console.log(`Test peer ${o} disconnected`)})});try{await r}catch(i){console.error(`Failed to initialize test peer ${o}:`,i)}}return n}(window.location.pathname==="/datasharingApp/signup.html"||window.location.pathname==="/signup.html")&&document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("signupButton");if(!n){console.error("Sign-up button not found");return}n.addEventListener("click",Re)});async function Re(){Z(!0);try{const n=new K,t=(await ge(ce,n)).user;if(console.log("Signed up user UID:",t.uid),document.querySelector('input[name="role"]:checked').value==="node"){const r=v(N,"nodes",t.uid);await E(r,{uid:t.uid,createdAt:Date.now(),status:"active"}),console.log("User registered as a node"),W("Signed up as a node successfully!"),window.location.href="/datasharingApp/node-instructions.html"}else{const r=v(N,"users",t.uid);await E(r,{uid:t.uid,createdAt:Date.now(),balance:0},{merge:!0}),console.log("User registered as a regular user"),W("Signed up successfully!"),window.location.href="/datasharingApp/index.html"}}catch(n){console.error("Sign-up failed:",n),W(`Sign-up failed: ${n.message}`)}finally{Z(!1)}}function W(n){const e=document.getElementById("toast");e&&(e.textContent=n,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function Z(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}if(window.location.pathname==="/datasharingApp/node-instructions.html"||window.location.pathname==="/node-instructions.html"){let n;document.addEventListener("DOMContentLoaded",async()=>{ee(!0);try{const e=localStorage.getItem("nodeId");if(localStorage.getItem("role")!=="node"||!e){X("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}const s=new TextEncoder().encode(e);n=new de(s,!0),await n.initDB(),await n.initSwarm(),await n.syncUserData();const i=(await n.dbGetAll("transactions")).filter(c=>c.type==="commission").reduce((c,l)=>c+(l.amount||0),0),a=document.getElementById("nodeEarnings");a&&(a.textContent=`Total Earnings: ${i.toFixed(2)} DCT`)}catch(e){console.error("Error initializing node instructions:",e),X(`Initialization failed: ${e.message}`)}finally{ee(!1)}})}function X(n){const e=document.getElementById("toast");e&&(e.textContent=n,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function ee(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}self.addEventListener("install",n=>{n.waitUntil(caches.open("dcrypt-v1").then(e=>e.addAll(["/","/index.html","/assets/index.js","/wasm/dcrypt_wasm.js","/wasm/dcrypt_wasm_bg.wasm"])))});self.addEventListener("fetch",n=>{n.respondWith(caches.match(n.request).then(e=>e||fetch(n.request).catch(()=>caches.match("/index.html"))))});self.addEventListener("message",async n=>{if(n.data.type==="cache_chunk"){const{chunkHash:e,data:t}=n.data,o=await caches.open("dcrypt-chunks"),s=new Blob([t],{type:"application/octet-stream"}),r=new Response(s,{headers:{"Content-Type":"application/octet-stream"}});await o.put(`/chunks/${e}`,r),console.log(`Service Worker: Cached chunk ${e}`)}});self.addEventListener("fetch",n=>{const e=new URL(n.request.url);e.pathname.startsWith("/chunks/")?n.respondWith(caches.open("dcrypt-chunks").then(t=>t.match(n.request).then(o=>o?(console.log(`Service Worker: Serving chunk ${e.pathname} from cache`),o):fetch(n.request).catch(()=>new Response("Chunk not available offline",{status:503}))))):n.respondWith(caches.match(n.request).then(t=>t||fetch(n.request).catch(()=>caches.match("/index.html"))))});let x=null,B=null,d=null,R=!1,D=0,F=[],C=!1,G=!1;async function Fe(){try{const n=await ke(()=>Promise.resolve().then(()=>Se),void 0);x=n.auth,B=n.db,console.log("Firebase services initialized successfully")}catch(n){throw console.error("Failed to initialize Firebase services:",n),u("Failed to initialize Firebase. Please try again later.",!0),n}}function Ne(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,n=>{const e=Math.random()*16|0;return(n==="x"?e:e&3|8).toString(16)})}function A(){return!!(x!=null&&x.currentUser)||localStorage.getItem("role")==="node"}function u(n,e=!1){const t=document.getElementById("toast");t&&(t.textContent=n,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function f(n){const e=document.getElementById("loading");e&&(e.style.display=n?"flex":"none")}function q(){var e;const n={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance")};n.publishedItemsTableBody&&(n.publishedItemsTableBody.innerHTML=""),n.transactionList&&(n.transactionList.innerHTML="No transactions yet."),n.userBalanceElement&&(n.userBalanceElement.textContent="Balance: 0 DCT"),D=0}async function T(){const n=document.getElementById("userBalance");if(n){if(!d){n.textContent="Balance: 0 DCT",D=0;return}try{D=await d.getBalance(d.keypair)||0,n.textContent=`Balance: ${D} DCT`}catch(e){console.error("Failed to update balance:",e),n.textContent="Balance: 0 DCT",D=0}}}async function L(){const n=document.getElementById("transactionList");if(n){if(!d){n.innerHTML="Not initialized.";return}try{const e=await d.dbGetAll("transactions");if(e.length===0){n.innerHTML="No transactions yet.";return}n.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),n.innerHTML="Failed to load transactions."}}}async function O(){var e;const n=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(n){n.innerHTML="";try{const t=await z(H(B,"snippets")),o={};t.forEach(s=>{o[s.id]=s.data()}),d&&d.knownObjects.forEach((s,r)=>{const i=o[r]||{averageRating:0,reviewStatus:"active"};if(i.reviewStatus!=="active")return;const c=(s.metadata.isPremium||!1)&&s.metadata.priceUsd||0,l=c>0?`${c} DCT`:"Free",h=document.createElement("tr");h.innerHTML=`
          <td class="py-2 px-4">${s.metadata.content_type}</td>
          <td class="py-2 px-4">${s.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${s.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${i.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${r}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${l})</button>
            <button onclick="window.flagSnippet('${r}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,n.appendChild(h)})}catch(t){console.error("Failed to update live feed:",t),u("Failed to load live feed.",!0)}}}async function j(){var e;const n=((e=x.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(n)try{const t=v(B,"users",n),o=d?await d.getBalance(d.keypair):0;await E(t,{balance:o,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function qe(){const n=document.getElementById("transactionHistory");n&&(n.style.display=n.style.display==="none"?"block":"none")}function ze(n,e,t){const o=document.getElementById("snippetDisplay");if(!o)return;o.innerHTML="";const s=document.createElement("div");s.className="p-4 bg-gray-800 rounded-lg mt-4";const r=document.createElement("h3");if(r.className="text-lg font-semibold mb-2",r.textContent=t||"Snippet Content",s.appendChild(r),e.startsWith("text")){const i=new TextDecoder().decode(n),a=document.createElement("pre");a.className="text-sm text-gray-300 whitespace-pre-wrap",a.textContent=i,s.appendChild(a)}else if(e.startsWith("image")){const i=new Blob([n],{type:e}),a=URL.createObjectURL(i),c=document.createElement("img");c.src=a,c.className="max-w-full h-auto rounded",c.onload=()=>URL.revokeObjectURL(a),s.appendChild(c)}else{const i=new Blob([n],{type:e}),a=URL.createObjectURL(i),c=document.createElement("a");c.href=a,c.download=t||"downloaded_file",c.className="text-blue-400 hover:underline",c.textContent="Download File",c.onclick=()=>setTimeout(()=>URL.revokeObjectURL(a),1e3),s.appendChild(c)}o.appendChild(s)}function He(){const n=document.getElementById("isPremium"),e=document.getElementById("priceInput");n&&e&&n.addEventListener("change",t=>{console.log("Premium toggle:",t.target.checked),e.classList.toggle("hidden",!t.target.checked),t.target.checked||(e.value="")})}async function J(){return new Promise((n,e)=>{const t=indexedDB.open("dcrypt_db",4);t.onupgradeneeded=o=>{const s=t.result;console.log("onupgradeneeded triggered for dcrypt_db version",o.target.result.version),s.objectStoreNames.contains("store")||(s.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store in index.js"))},t.onsuccess=()=>{console.log("IndexedDB opened successfully in initializeIndexedDB"),n(t.result)},t.onerror=()=>{console.error("Failed to open IndexedDB:",t.error),e(new Error(`Failed to open IndexedDB: ${t.error.message}`))}})}async function ue(n){return new Promise((e,t)=>{const r=n.transaction("store","readonly").objectStore("store").get("dcrypt_identity");r.onsuccess=()=>{var i;(i=r.result)!=null&&i.value?(console.log("Loaded keypair from IndexedDB:",r.result.value),e(new TextEncoder().encode(r.result.value))):e(null)},r.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",r.error),t(new Error("Failed to load keypair from IndexedDB"))}})}async function Oe(n,e){return new Promise((t,o)=>{const i=n.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});i.onsuccess=()=>{console.log("Stored keypair in IndexedDB:",e),t()},i.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",i.error),o(new Error("Failed to store keypair in IndexedDB"))}})}async function te(n){if(G){console.log("Initialization already in progress, skipping...");return}G=!0,console.log("Initializing app with userId:",n),f(!0);try{const e=await J();let t=await ue(e);if(!t&&n&&(await Oe(e,n),t=new TextEncoder().encode(n)),!t)throw new Error("No keypair available and no userId provided to create one");R=await je(n),console.log(`User is ${R?"":"not "}a node.`),F.length===0&&(console.log("Creating test peers..."),F=await Ue(),console.log("Test peers created:",F.map(o=>o.peerId))),console.log("Initializing DHT..."),d=new de(t,R),window.dht=d,await d.initDB(),console.log("IndexedDB initialized via DHT."),await d.initSwarm(),console.log("DHT swarm initialized."),await d.syncUserData(),console.log("User data synced."),await Promise.all([O(),T(),L()]),console.log("UI updated.")}catch(e){console.error("Error initializing application:",e),u(`Initialization failed: ${e.message}`,!0),d=null,window.dht=null,D=0,q()}finally{f(!1),He(),G=!1}}async function je(n){try{const e=v(B,"nodes",n);return(await re(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Me(){var o;if(console.log("handleSignup function called"),C){console.log("Signup already in progress, ignoring additional clicks");return}C=!0;const n=document.getElementById("signupButton");n&&(n.disabled=!0,n.textContent="Signing Up...",console.log("Signup button disabled and text updated"));const e=document.querySelectorAll('input[name="role"]');if(!e.length){console.error("Role inputs not found"),u("Role selection not found.",!0),C=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google");return}const t=(o=Array.from(e).find(s=>s.checked))==null?void 0:o.value;if(!t){console.error("No role selected"),u("Please select a role.",!0),C=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google");return}console.log("Selected role:",t),localStorage.setItem("pendingRole",t);try{const s=new K;console.log("Initiating signInWithRedirect for signup"),await se(x,s)}catch(s){console.error("Signup failed:",s),u(`Sign-up failed: ${s.message}`,!0),C=!1,n&&(n.disabled=!1,n.textContent="Sign Up with Google")}}async function _e(){console.log("signIn function called");try{if(!x)throw new Error("Firebase Auth is not initialized");const n=new K;console.log("Initiating signInWithRedirect"),f(!0),await se(x,n)}catch(n){console.error("Login failed:",n),u(`Login failed: ${n.message}`,!0),f(!1)}}async function ne(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await ye(x),u("Signed out successfully!"));const t=(await J()).transaction("store","readwrite").objectStore("store");await new Promise((o,s)=>{const r=t.delete("dcrypt_identity");r.onsuccess=()=>o(),r.onerror=()=>s(new Error("Failed to delete keypair from IndexedDB"))}),d=null,window.dht=null,F=[],D=0,q()}catch(n){console.error("Sign-out failed:",n),u(`Sign-out failed: ${n.message}`,!0)}}async function We(n,e,t,o,s){var r,i;if(!A()){u("Please sign in to publish.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Title is required");let a=o||"",c="text/plain";if((r=s==null?void 0:s.files)!=null&&r.length){const y=s.files[0];c=y.type||"application/octet-stream",a=await new Promise((w,S)=>{const P=new FileReader;P.onload=U=>w(new Uint8Array(U.target.result)),P.onerror=()=>S(new Error("Failed to read file")),P.readAsArrayBuffer(y)})}else a=new TextEncoder().encode(a);const l=document.getElementById("isPremium").checked,h=document.getElementById("priceInput"),p=l&&h&&parseFloat(h.value)||0,m={content_type:n,description:e||"",tags:t?t.split(",").map(y=>y.trim()):[],isPremium:l,priceUsd:p},b=await d.publishIP(m,a,c),I=((i=x.currentUser)==null?void 0:i.uid)||localStorage.getItem("nodeId"),k=v(B,"snippets",b);await E(k,{ipHash:b,flagCount:0,averageRating:0,reviewStatus:"active",createdAt:Date.now(),creatorId:I},{merge:!0}),u("Snippet published successfully!"),await Promise.all([O(),L(),T(),j()])}catch(a){console.error("publishSnippet failed:",a),u(`Publish failed: ${a.message}`,!0)}finally{f(!1)}}async function he(n){if(!A())return u("Please sign in to buy."),null;f(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Hash is required");const e=d.knownObjects.get(n);if(!e)throw new Error("Snippet not found");const s=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(s>0){const c=await d.getBalance(d.keypair);if(c<s)throw new Error("Insufficient balance");const l=s*.05;await d.distributeCommission(l),await d.putBalance(d.keypair,c-s),await d.dbAdd("transactions",{type:"buy",amount:s,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:r,fileType:i}=await d.requestData(n);u("Snippet retrieved successfully!"),await Promise.all([L(),T(),j()]);const a=prompt("Please rate this snippet (1-5 stars):","5");if(a!==null){const c=parseInt(a);c>=1&&c<=5?(await Qe(n,c),u(`Rated ${c} stars!`),await O()):u("Invalid rating. Please enter a number between 1 and 5.",!0)}return ze(r,i,e.metadata.content_type),{data:r,fileType:i}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}finally{f(!1)}}async function Ge(n){var o;const e=n||((o=document.getElementById("buyHashInput"))==null?void 0:o.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await he(e)&&u("Snippet purchased and displayed below!")}async function Qe(n,e){var o;const t=((o=x.currentUser)==null?void 0:o.uid)||localStorage.getItem("nodeId");if(t)try{const s=v(B,"snippets",n,"ratings",t);await E(s,{rating:e,timestamp:Date.now()});const i=(await z(H(B,"snippets",n,"ratings"))).docs.map(l=>l.data().rating),a=i.length>0?i.reduce((l,h)=>l+h,0)/i.length:0,c=v(B,"snippets",n);await Q(c,{averageRating:a.toFixed(1)})}catch(s){console.error("Failed to submit rating:",s),u(`Failed to submit rating: ${s.message}`,!0)}}async function Ke(n){var t;if(!(((t=x.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const o=v(B,"snippets",n);await Q(o,{flagCount:be(1)}),((await re(o)).data().flagCount||0)>=3?(await Q(o,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await O()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(o){console.error("Failed to flag snippet:",o),u(`Failed to flag snippet: ${o.message}`,!0)}}async function Je(n){if(!A()){u("Please sign in to search.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!n)throw new Error("Search query is required");console.log("Starting search with query:",n);const e=document.getElementById("publishedItems").querySelector("tbody");e.innerHTML="";const t=await z(H(B,"snippets")),o={};t.forEach(i=>{o[i.id]=i.data()});let s=!1;const r=n.toLowerCase();d.knownObjects.forEach((i,a)=>{const{content_type:c,description:l,tags:h}=i.metadata,p=o[a]||{averageRating:0,reviewStatus:"active"};if(p.reviewStatus==="active"&&(c.toLowerCase().includes(r)||l&&l.toLowerCase().includes(r)||h&&h.some(m=>m.toLowerCase().includes(r)))){s=!0;const b=(i.metadata.isPremium||!1)&&i.metadata.priceUsd||0,I=b>0?`${b} DCT`:"Free",k=document.createElement("tr");k.innerHTML=`
          <td class="py-2 px-4">${c}</td>
          <td class="py-2 px-4">${l||"No description"}</td>
          <td class="py-2 px-4">${h.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${p.averageRating} / 5</td>
          <td class="py-2 px-4">
            <button onclick="window.buySnippet('${a}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${I})</button>
            <button onclick="window.flagSnippet('${a}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(k)}}),u(s?"Search completed!":"No snippets found matching your search.")}catch(e){console.error("searchSnippets failed:",e),u(`Search failed: ${e.message}`,!0)}finally{f(!1)}}async function Ye(n){if(!A()){u("Please sign in to deposit.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+n;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:n,timestamp:Date.now()}),u(`Deposited ${n} DCT successfully!`),await Promise.all([L(),T(),j()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}finally{f(!1)}}async function Ve(n){if(!A()){u("Please sign in to withdraw.");return}f(!0);try{if(!d)throw new Error("DHT not initialized");if(!n||n<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<n)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-n),await d.dbAdd("transactions",{type:"withdraw",amount:n,timestamp:Date.now()}),u(`Withdrew ${n} DCT successfully!`),await Promise.all([L(),T(),j()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}finally{f(!1)}}document.addEventListener("DOMContentLoaded",async()=>{var r;console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname);try{await Fe()}catch(i){console.error("Firebase initialization failed, aborting setup:",i);return}const n=localStorage.getItem("role"),e=localStorage.getItem("nodeId");if((window.location.pathname.includes("index.html")||window.location.pathname==="/"||window.location.pathname==="/datasharingApp/")&&n==="node"&&e){console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html";return}const o={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),publishButton:document.getElementById("publishButton"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(r=document.getElementById("publishedItems"))==null?void 0:r.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};Object.values(o).every(i=>i!=null)?(console.log("On index.html, setting up UI and event listeners"),n==="node"&&e&&(R=!0,console.log("Node detected, but should have been redirected already.")),me(x,async i=>{if(f(!0),i){console.log("User is signed in:",i.uid),o.signupButton.classList.add("hidden"),o.loginButton.classList.add("hidden"),o.logoutButton.classList.remove("hidden"),o.publishButton.disabled=!1,o.searchButton.disabled=!1,o.depositButton.disabled=!1,o.withdrawButton.disabled=!1,o.toggleHistoryButton.disabled=!1,o.buyHashButton.disabled=!1;const a=localStorage.getItem("pendingRole")||"user";localStorage.removeItem("pendingRole");const c=window.location.pathname;if(a==="user"){const l=v(B,"users",i.uid);if(await E(l,{role:"user",createdAt:Date.now(),balance:0},{merge:!0}),!c.includes("index.html")&&c!=="/datasharingApp/"){console.log("Redirecting to index.html for user role"),window.location.href="/datasharingApp/index.html",f(!1);return}}else{const l=Ne();localStorage.setItem("nodeId",l),localStorage.setItem("role","node");const h=v(B,"nodes",l);if(await E(h,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!c.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html",f(!1);return}}await te(i.uid)}else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{const a=await J(),c=await ue(a);c?(console.log("Found keypair in IndexedDB, initializing app..."),o.signupButton.classList.add("hidden"),o.loginButton.classList.add("hidden"),o.logoutButton.classList.remove("hidden"),o.publishButton.disabled=!1,o.searchButton.disabled=!1,o.depositButton.disabled=!1,o.withdrawButton.disabled=!1,o.toggleHistoryButton.disabled=!1,o.buyHashButton.disabled=!1,await te(new TextDecoder().decode(c))):(console.log("No keypair found in IndexedDB."),o.signupButton.classList.remove("hidden"),o.loginButton.classList.remove("hidden"),o.logoutButton.classList.add("hidden"),o.publishButton.disabled=!0,o.searchButton.disabled=!0,o.depositButton.disabled=!0,o.withdrawButton.disabled=!0,o.toggleHistoryButton.disabled=!0,o.buyHashButton.disabled=!0,q())}catch(a){console.error("Failed to initialize IndexedDB or load keypair:",a),o.signupButton.classList.remove("hidden"),o.loginButton.classList.remove("hidden"),o.logoutButton.classList.add("hidden"),o.publishButton.disabled=!0,o.searchButton.disabled=!0,o.depositButton.disabled=!0,o.withdrawButton.disabled=!0,o.toggleHistoryButton.disabled=!0,o.buyHashButton.disabled=!0,q()}}f(!1)},i=>{console.error("onAuthStateChanged error:",i),u("Failed to monitor authentication state.",!0),f(!1)}),o.loginButton.addEventListener("click",i=>{i.preventDefault(),console.log("Login button clicked"),_e()}),o.logoutButton.addEventListener("click",i=>{i.preventDefault(),console.log("Logout button clicked"),ne()})):console.log("Not on index.html, skipping index.html-specific setup"),window.logout=ne,window.publishSnippet=We,window.buySnippet=he,window.buySnippetByHash=Ge,window.searchSnippets=Je,window.deposit=Ye,window.withdraw=Ve,window.toggleTransactionHistory=qe,window.flagSnippet=Ke,window.handleSignup=Me});
