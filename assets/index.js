import{getAuth as fe,onAuthStateChanged as V,setPersistence as me,browserLocalPersistence as ye,GoogleAuthProvider as oe,signInWithPopup as se,signOut as we}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as be,getDocs as re,collection as ie,doc as B,setDoc as U,updateDoc as R,increment as O,getDoc as H,query as ke,where as Ie}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import{getStorage as ve}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-storage.js";import Be from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as Pe}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();const Ee="modulepreload",Se=function(s){return"/datasharingApp/"+s},Y={},De=function(e,t,r){let n=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),a=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));n=Promise.allSettled(t.map(c=>{if(c=Se(c),c in Y)return;Y[c]=!0;const d=c.endsWith(".css"),h=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${h}`))return;const p=document.createElement("link");if(p.rel=d?"stylesheet":Ee,d||(p.as="script"),p.crossOrigin="",p.href=c,a&&p.setAttribute("nonce",a),document.head.appendChild(p),d)return new Promise((g,y)=>{p.addEventListener("load",g),p.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${c}`)))})}))}function o(i){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=i,window.dispatchEvent(a),!a.defaultPrevented)throw i}return n.then(i=>{for(const a of i||[])a.status==="rejected"&&o(a.reason);return e().catch(o)})},xe={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},Q=Pe(xe),Ce=ve(Q),$e=fe(Q),ae=be(Q),Te=Object.freeze(Object.defineProperty({__proto__:null,auth:$e,db:ae,storage:Ce},Symbol.toStringTag,{value:"Module"}));var ne;const E=(ne=globalThis.crypto)==null?void 0:ne.subtle;if(!E)throw new Error("Web Crypto API is not available in this environment");function Ae(){const s=new Uint8Array(12);for(let e=0;e<12;e++)s[e]=Math.floor(Math.random()*256);return s}function Re(s,e,t,r,n,o,i){return{content:new Uint8Array(s),content_type:e,tags:t||[],is_premium:r,price_usd:n,creator_id:new Uint8Array(o),file_type:i}}function Ue(s){return s.content}async function ce(s){const e=await E.digest("SHA-256",s);return new Uint8Array(e)}function Ne(s){const e=new Uint8Array(new Int32Array([s.index]).buffer),t=new Uint8Array([...s.data,...s.nonce,...e]);return ce(t)}function Z(s){return s.index}function le(s){return new TextEncoder().encode(s).buffer}async function Fe(s,e,t){const r=s.content,n=Math.ceil(r.length/e),o=[],i=await E.digest("SHA-256",le(t)),a=await E.importKey("raw",i,{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<e;c++){const d=c*n,h=Math.min(d+n,r.length),p=r.slice(d,h),g=Ae(),y=await E.encrypt({name:"AES-GCM",iv:g},a,p),w={data:new Uint8Array(y),nonce:g,index:c,file_type:s.file_type};o.push(w)}return o}async function qe(s,e){const t=await E.digest("SHA-256",le(e));console.log("GOT TO KEYDATA");const r=await E.importKey("raw",t,{name:"AES-GCM"},!1,["decrypt"]);console.log("GOT KEYBUFFER");let n=s.data;if(n instanceof ArrayBuffer)n=new Uint8Array(n);else if(Array.isArray(n))n=new Uint8Array(n);else if(!(n instanceof Uint8Array))throw new Error(`chunk.data must be ArrayBuffer, Array, or Uint8Array, got ${n?n.constructor.name:typeof n}`);let o=s.nonce;if(o instanceof ArrayBuffer)o=new Uint8Array(o);else if(Array.isArray(o))o=new Uint8Array(o);else if(!(o instanceof Uint8Array))throw new Error(`chunk.nonce must be ArrayBuffer, Array, or Uint8Array, got ${o?o.constructor.name:typeof o}`);if(o.length!==12)throw new Error(`Invalid IV length: ${o.length}, expected 12 bytes for AES-GCM`);console.log("Encrypted Data:",n),console.log("IV:",o);const i=await E.decrypt({name:"AES-GCM",iv:o},r,n);return console.log("GOT TO END"),new Uint8Array(i)}function Le(s){return s.file_type}class de{constructor(e,t=!1){this.peers=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,console.log("DHT initialized with keypair:",e),this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await re(ie(ae,"nodes"));this.nodes.clear(),t.empty||t.forEach(r=>this.nodes.add(`node-${r.id}`)),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear()}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const r of t){const n=this.peers.get(r);if(n&&n.connected&&n.conn){const o=Date.now();try{await new Promise((a,c)=>{const d=`${r}-ping-${Date.now()}`;n.conn.send({type:"ping",requestId:d}),this.pendingRequests.set(d,{resolve:a,reject:c}),setTimeout(()=>{this.pendingRequests.has(d)&&(this.pendingRequests.delete(d),c(new Error("Ping timeout")))},2e3)});const i=Date.now()-o;e.push(i)}catch(i){console.warn(`Failed to measure latency for peer ${r}: ${i.message}`)}}}this.averageLatency=e.length>0?e.reduce((r,n)=>r+n,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db",5);let o;n.onupgradeneeded=i=>{o=n.result,o.objectStoreNames.contains("store")||o.createObjectStore("store",{keyPath:"id"}),o.objectStoreNames.contains("transactions")||o.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),o.objectStoreNames.contains("offlineQueue")||o.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),o.objectStoreNames.contains("chunkCache")||o.createObjectStore("chunkCache",{keyPath:"id"}),console.log("DHT database upgraded to version",5)},n.onsuccess=()=>{this.db=n.result,console.log("DHT IndexedDB opened at version",this.db.version),e()},n.onerror=i=>t(new Error(`Failed to open IndexedDB: ${i.target.error.message}`))})}async loadKnownObjects(){if(!this.db)throw new Error("IndexedDB not initialized");try{const r=this.db.transaction("store","readonly").objectStore("store").getAll();r.onsuccess=()=>{r.result.forEach(n=>{if(n.id!=="dcrypt_identity")try{const{metadata:o,chunks:i}=JSON.parse(n.value);this.knownObjects.set(n.id,{metadata:o,chunks:i})}catch(o){console.error("Failed to parse known object:",n.id,o)}}),console.log("Loaded known objects from IndexedDB")}}catch(e){console.error("Failed to load known objects:",e)}}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.keypair,balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{return this.peerId=this.isNode?`node-${this.keypair}`:this.keypair,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new Be(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,config:{iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"turn:openrelay.metered.ca:80",username:"openrelayproject",credential:"openrelayproject"}]},debug:2}),await new Promise((e,t)=>{this.peer.on("open",r=>{console.log(`PeerJS connection opened with ID: ${r}`),this.activeNodes.add(this.peerId),this.peer.on("connection",n=>this.handleConnection(n)),this.peer.on("error",n=>{var o;if(console.error("PeerJS error:",n.type,n.message),n.type==="peer-unavailable"){const i=(o=n.message.match(/Peer (.+) is unavailable/))==null?void 0:o[1];i&&this.handlePeerDisconnect(i)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),window.addEventListener("beforeunload",()=>{this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed on page unload"))}),setInterval(()=>this.discoverPeers(),3e3),setInterval(()=>this.measureLatency(),6e4),e()}),this.peer.on("error",r=>t(r))})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers...");const e=[...Array.from(this.nodes),...Array.from(this.activeNodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to.");return}e.forEach(t=>{this.peers.has(t)?this.peers.get(t).connected||this.connectToPeer(t):(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,r)=>{!t.connected&&(this.connectionAttempts.get(r)||0)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${r}`),this.peers.delete(r),this.connectionAttempts.delete(r),this.activeNodes.delete(r))})}connectToPeer(e,t=1){var n;if((n=this.peers.get(e))!=null&&n.connected)return;console.log(`Connecting to peer: ${e} (Attempt ${t}/3)`);const r=this.peer.connect(e,{reliable:!0});r.on("open",()=>{console.log(`Connection opened with peer: ${e}`),this.peers.set(e,{connected:!0,conn:r}),this.activeNodes.add(e),r.send({type:"handshake",peerId:this.peerId})}),r.on("data",o=>{console.log(`Received data from peer ${e}:`,o),this.handlePeerData(o,e)}),r.on("close",()=>{console.log(`Connection closed with peer ${e}`),this.handlePeerDisconnect(e)}),r.on("error-",o=>{console.error(`Connection error with peer ${e}:`,o),t<3?setTimeout(()=>this.connectToPeer(e,t+1),5e3*t):(console.log(`Max attempts reached for peer ${e}. Marking as unreachable.`),this.handlePeerDisconnect(e))})}handleConnection(e){console.log("handle connection called");const t=e.peer;console.log(`Incoming connection from peer: ${t} at ${Date.now()}`),e.on("open",()=>{console.log(`Connection opened with peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t)}),e.on("data",r=>{console.log(`Received data from peer ${t}:`,r),this.handlePeerData(r,t)}),e.on("close",()=>{console.log(`Connection closed with peer ${t}`),this.handlePeerDisconnect(t)}),e.on("error",r=>{console.error(`Connection error with peer ${t}:`,r),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"peersWithChunkRequest":this.handlePeersWithChunkRequest(e,t);break;case"peersWithChunkResponse":this.handlePeersWithChunkResponse(e);break;case"saveMapRequest":this.handleMapReception(e);break;case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"metadataRequest":this.handleMetadataRequest(e,t);break;case"metadataResponse":this.handleMetadataResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const r=this.peers.get(t);r&&r.connected&&r.conn&&r.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const n=this.pendingRequests.get(e.requestId);n&&(n.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,r){try{await this.dbPut("chunkCache",{id:e,value:t});let n=this.chunkToPeerMap.get(e)||new Set;n.add(this.peerId),this.chunkToPeerMap.set(e,n),console.log(`Stored chunk ${e} from peer ${r}`)}catch(n){console.error(`Failed to store chunk ${e} from peer ${r}:`,n)}}async publishChunk(e,t,r,n){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let o=this.chunkToPeerMap.get(e)||new Set;if(o.add(this.peerId),this.chunkToPeerMap.set(e,o),this.activeNodes.size>0){const i=Array.from(this.activeNodes).filter(c=>c.startsWith("node-"));if(i.length>0){const c=r%i.length,d=i[c],h=this.peers.get(d);h&&h.connected&&h.conn&&(h.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),o.add(d),this.chunkToPeerMap.set(e,o),console.log(`Sent chunk ${e} to node ${d}`))}const a=Array.from(this.activeNodes).filter(c=>!c.startsWith("node-")&&c!==this.peerId);if(a.length>0){const c=a[Math.floor(Math.random()*a.length)],d=this.peers.get(c);d&&d.connected&&d.conn&&(d.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),o.add(c),this.chunkToPeerMap.set(e,o),console.log(`Sent chunk ${e} to peer ${c}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:r,totalChunks:n});this.broadcastChunk(e)}catch(o){throw console.error("publishChunk failed:",o),o}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,r){if(!this.db||!this.keypair)throw new Error("IndexedDB or keypair not initialized");try{const n=Array.isArray(e.tags)?e.tags.map(f=>String(f).trim()).filter(f=>f!==""):[],o=!!e.isPremium,i=o?e.priceUsd||30:0,a=new Uint8Array(t),c=e.content_type||"",d=this.keypair,p=Re(a,c,n,o,i,d,r||"text/plain"),g=Ue(p),y=await ce(g),w=this.uint8ArrayToBase64Url(y),P=Array.from(this.activeNodes).filter(f=>f.startsWith("node-")),k=P[Math.floor(Math.random()*P.length)],I=P.length>0?P.length:1,v=await Fe(p,I,w),S=await Promise.all(v.map(f=>Ne(f).then(D=>this.uint8ArrayToBase64Url(D)))),$={...e,chunk_count:v.length,isPremium:o,priceUsd:i,chunks:S},L={metadata:$,chunks:S};this.knownObjects.set(w,L),await this.dbPut("store",{id:w,value:JSON.stringify(L)});for(let f=0;f<v.length;f++)await this.publishChunk(S[f],v[f],f,v.length);return this.activeNodes.size>0?this.broadcastIP(w,$,S):await this.queueOfflineOperation({type:"publishIP",ipHash:w,metadata:$,chunkHashes:S}),this.sendMapToPeer(k),console.log("sent to",k),{ipHash:w,targetPeer:k}}catch(n){throw console.error("publishIP failed:",n),n}}broadcastIP(e,t,r){const n={type:"ip",ipHash:e,metadata:t,chunkHashes:r,peerId:this.peerId};this.broadcast(n),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e,t,r){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e)throw new Error("IP not found");await this.getPeersWithChunk(t,r);const n=[];for(const h of e.chunks)try{const p=await this.dbGet("chunkCache",h);if(p&&p.value){n.push({chunk:p.value,hash:h});continue}const g=this.chunkToPeerMap.get(h);if(!g||g.size===0)throw new Error(`No peers found with chunk ${h}`);const y=Array.from(g).filter(k=>k.startsWith("node-"));let w=!1,P=null;for(const k of y)if(this.activeNodes.has(k))try{const I=await this.fetchChunkFromPeer(k,h);let v={data:new Uint8Array(I.data),nonce:new Uint8Array(I.nonce),index:I.index,file_type:I.file_type};console.log(v),await this.dbPut("chunkCache",{id:h,value:v}),n.push({chunk:I,hash:h}),w=!0;break}catch(I){P=I,console.error(`Failed to fetch/store chunk ${h} from peer ${k}:`,I)}if(!w)throw P||new Error(`No available peer for chunk ${h}`)}catch(p){throw console.error(`Error processing chunk ${h}:`,p),p}const o=n.sort((h,p)=>Z(h.chunk)-Z(p.chunk));console.log(o,"SORTED");const i=await Promise.all(o.map(({chunk:h},p)=>{console.log(h);try{let g=qe(h,r);return console.log("DECRYPTED",g),g}catch(g){throw console.error(`Decryption failed for chunk at index ${p} (hash: ${o[p].hash}):`,g),g}})),a=new Uint8Array(i.reduce((h,p)=>h+p.length,0));console.log("GOT FULL DATA",a);let c=0;for(const h of i)a.set(h,c),c+=h.length;console.log("got here");const d=Le(o[0].chunk);return console.log("Got filetype everything worked"),{data:a,fileType:d}}catch(n){throw console.error("requestData failed:",n),n}}sendMapToPeer(e){const t=this.peers.get(e),r={};for(const[o,i]of this.chunkToPeerMap)r[o]=Array.from(i);const n={type:"saveMapRequest",map:r};t.conn.send(n)}handleMapReception(e){const t=e.map;for(const[r,n]of Object.entries(t))this.chunkToPeerMap.set(r,new Set(n))}async getPeersWithChunk(e,t){const r=this.peers.get(e),n=`${e}-${t}-${Date.now()}`,o={type:"peersWithChunkRequest",requestId:n,ipHash:t,peerId:this.peerId};return r.conn.send(o),new Promise((i,a)=>{this.pendingRequests.set(n,{resolve:i,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),a(new Error(`Request for object ${t} from peer timed out`)))},1e4)})}async getIPmetadata(e){const t=this.peers.entries().next().value;if(!t)throw new Error("No peers available");const[r,n]=t,o=`${r}-${e}-${Date.now()}`,i={type:"metadataRequest",requestId:o,ipHash:e,peerId:this.peerId};return n.conn.send(i),new Promise((a,c)=>{this.pendingRequests.set(o,{resolve:a,reject:c,hash:e}),setTimeout(()=>{this.pendingRequests.has(o)&&(this.pendingRequests.delete(o),c(new Error(`Request for object ${e} from peer timed out`)))},1e4)})}async fetchChunkFromPeer(e,t){const r=this.peers.get(e);if(!r||!r.connected||!r.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-${t}-${Date.now()}`,o={type:"chunkRequest",requestId:n,chunkHash:t,peerId:this.peerId};return r.conn.send(o),new Promise((i,a)=>{this.pendingRequests.set(n,{resolve:i,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),a(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:r,chunkHash:n}=e;this.dbGet("chunkCache",n).then(o=>{if(o&&o.value){const i=this.peers.get(t);i&&i.connected&&i.conn&&(i.conn.send({type:"chunkResponse",requestId:r,chunkHash:n,chunkData:o.value,peerId:this.peerId}),console.log(`Sent chunk ${n} to peer ${t}`))}else console.warn(`Chunk ${n} not found for peer ${t}`)}).catch(o=>console.error(`Failed to retrieve chunk ${n} for peer ${t}:`,o))}handleMetadataRequest(e,t){const{requestId:r,ipHash:n}=e;let o=[];if(n==="all")o=Array.from(this.knownObjects.entries()).slice(0,50).map(([c,d])=>({hash:c,metadata:d.metadata,chunks:d.chunks}));else{const a=this.knownObjects.get(n);a&&(o=[{hash:n,metadata:a.metadata,chunks:a.chunks}])}const i=this.peers.get(t);i&&i.connected&&i.conn&&i.conn.send({type:"metadataResponse",requestId:r,ipObjects:o,peerId:this.peerId,ipHash:n})}handleMetadataResponse(e){const{requestId:t,ipObjects:r}=e,n=this.pendingRequests.get(t);n&&(n.resolve(r),this.pendingRequests.delete(t))}handlePeersWithChunkRequest(e,t){const{requestId:r,ipHash:n}=e,o=this.knownObjects.get(n);if(!o){console.warn(`IP ${n} not found`);return}const i={};for(const c of o.chunks){const d=this.chunkToPeerMap.get(c);d&&(i[c]=Array.from(d))}const a=this.peers.get(t);a&&a.connected&&a.conn&&a.conn.send({type:"peersWithChunkResponse",requestId:r,chunkPeers:i,peerId:this.peerId,ipHash:n})}handlePeersWithChunkResponse(e){const{requestId:t,chunkPeers:r}=e,n=this.pendingRequests.get(t);if(n){for(const[o,i]of Object.entries(r))this.chunkToPeerMap.set(o,new Set(i));n.resolve(),this.pendingRequests.delete(t)}}handleChunkResponse(e){const{requestId:t,chunkHash:r,chunkData:n}=e,o=this.pendingRequests.get(t);o&&(o.hash===r?o.resolve(n):o.reject(new Error(`Received chunk hash ${r} does not match requested hash ${o.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(n=>n.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const r=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${r} per node)`);for(const n of t){const o=n.replace("node-",""),i=this.base64UrlToUint8Array(o),c=await this.getBalance(i)+r;await this.putBalance(i,c);const d=this.peers.get(n);d&&d.connected&&d.conn&&d.conn.send({type:"commission",amount:r,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+e);return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+e,value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.keypair,balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const r=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(n=>r.clear().onsuccess=n);for(const n of e)try{switch(n.type){case"publishChunk":await this.publishChunk(n.chunkHash,n.chunkData,n.chunkIndex,n.totalChunks);break;case"publishIP":await this.broadcastIP(n.ipHash,n.metadata,n.chunkHashes);break;default:console.warn("Unknown offline operation type:",n.type)}}catch(o){console.error(`Failed to process offline operation ${n.type}:`,o),this.offlineQueue.push(n),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:n})}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).put(t);a.onsuccess=()=>r(),a.onerror=c=>n(new Error(`DB put failed: ${c.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).add(t);a.onsuccess=()=>r(),a.onerror=c=>n(new Error(`DB add failed: ${c.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((r,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).get(t);a.onsuccess=()=>r(a.result),a.onerror=c=>n(new Error(`DB get failed: ${c.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,r)=>{const i=this.db.transaction(e,"readonly").objectStore(e).getAll();i.onsuccess=()=>t(i.result),i.onerror=a=>r(new Error(`DB getAll failed: ${a.target.error.message}`))})}broadcast(e){this.activeNodes.forEach(t=>{if(t!==this.peerId){const r=this.peers.get(t);r&&r.connected&&r.conn&&r.conn.send(e)}})}uint8ArrayToBase64Url(e){const t=String.fromCharCode(...e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}base64UrlToUint8Array(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const r=atob(t),n=new Uint8Array(r.length);for(let o=0;o<r.length;o++)n[o]=r.charCodeAt(o);return n}destroy(){this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed")),this.peers.clear(),this.activeNodes.clear(),this.pendingRequests.clear()}get hasActiveConnections(){return this.activeNodes.size>0}}function Me(s){const e=String.fromCharCode(...s);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}let m=null,b=null,Oe=null,l=null,M=!1,x=0,G=!1,W=!1;async function ue(){console.log("Starting Firebase initialization...");try{const s=await De(()=>Promise.resolve().then(()=>Te),void 0);m=s.auth,b=s.db,Oe=s.storage,await me(m,ye),console.log("Firebase services initialized successfully with local persistence")}catch(s){throw console.error("Failed to initialize Firebase services:",s),u("Failed to initialize Firebase. Please try again later.",!0),s}}function He(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,s=>{const e=Math.random()*16|0;return(s==="x"?e:e&3|8).toString(16)})}function C(){return!!(m!=null&&m.currentUser)||localStorage.getItem("role")==="node"}function u(s,e=!1){const t=document.getElementById("toast");t&&(t.textContent=s,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function je(){if(!C()||!l){u("Please sign in and ensure the app is initialized before publishing.",!0);return}try{document.getElementById("publishModal").classList.add("active"),console.log("Opened publish modal")}catch(s){console.error("Failed to open publish modal:",s),u("Failed to open publish modal. Please try again.",!0)}}async function ze(s){if(!C()||!l){u("Please sign in and ensure the app is initialized before viewing.",!0);return}try{const e=await l.getIPmetadata(s);if(!e)throw new Error("Snippet not found");window.currentProduct=s;const t=document.getElementById("buyModal");document.getElementById("snippetTitle").value=e.metadata.title||"Untitled",document.getElementById("snippetDescription").value=e.metadata.description||"No description",document.getElementById("snippetPrice").value=e.metadata.isPremium?`${e.metadata.priceUsd} DCT`:"Free",t.classList.add("active")}catch(e){console.error("Failed to open buy/preview modal:",e),u("Failed to open buy/preview modal. Please try again.",!0)}}function A(){var e;const s={snippetGallery:document.getElementById("snippetGallery"),mySnippetsTableBody:(e=document.getElementById("mySnippets"))==null?void 0:e.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance"),userNameElement:document.getElementById("userName"),userAvatarElement:document.querySelector(".user-avatar"),snippetsPostedElement:document.getElementById("snippetsPosted")};s.snippetGallery&&(s.snippetGallery.innerHTML=""),s.mySnippetsTableBody&&(s.mySnippetsTableBody.innerHTML=""),s.transactionList&&(s.transactionList.innerHTML="No transactions yet."),s.userBalanceElement&&(s.userBalanceElement.textContent="Balance: 0 DCT"),s.userNameElement&&(s.userNameElement.textContent="Guest User"),s.userAvatarElement&&(s.userAvatarElement.innerHTML='<i class="fas fa-user text-lg"></i>'),s.snippetsPostedElement&&(s.snippetsPostedElement.textContent="0"),x=0,localStorage.removeItem("userKeypair"),localStorage.removeItem("peerId"),localStorage.removeItem("dhtInitialized"),console.log("Cleared persisted state from localStorage on sign-out")}async function N(){const s=document.getElementById("userBalance");if(s){if(!l){s.textContent="Balance: 0 DCT",x=0;return}try{x=await l.getBalance(l.keypair)||0,s.textContent=`Balance: ${x} DCT`}catch(e){console.error("Failed to update balance:",e),s.textContent="Balance: 0 DCT",x=0}}}async function F(){const s=document.getElementById("transactionList");if(s){if(!l){s.innerHTML="Not initialized.";return}try{const e=await l.dbGetAll("transactions");if(e.length===0){s.innerHTML="No transactions yet.";return}s.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),s.innerHTML="Failed to load transactions."}}}async function j(){const s=document.getElementById("snippetGallery");if(s){s.innerHTML="";try{if(!l||!l.hasActiveConnections){console.log("no node connections yet!");return}const e=await l.getIPmetadata("all");if(!e||e.length===0){s.innerHTML="<p>No snippets available.</p>";return}e.slice(0,50).forEach(({hash:t,metadata:r})=>{const n=document.createElement("div");n.className="bg-gray-800 rounded-lg overflow-hidden shadow-lg",n.innerHTML=`
        <img src="${r.coverImage||"default-cover.jpg"}" alt="Cover Image" class="w-full h-48 object-cover">
        <div class="p-4">
          <h3 class="text-lg font-semibold">${r.title||"Untitled"}</h3>
          <p class="text-sm text-gray-400">${r.tags.join(", ")||"No tags"}</p>
          <div class="mt-2 flex justify-between">
            <button onclick="window.openBuyModal('${t}')" class="btn btn-primary">Get (${r.isPremium?`${r.priceUsd} DCT`:"Free"})</button>
            <button onclick="window.flagSnippet('${t}')" class="btn btn-danger">Flag</button>
          </div>
        </div>
      `,s.appendChild(n)})}catch(e){console.error("Failed to update snippet gallery:",e),u("Failed to load snippets.",!0)}}}async function K(){var e,t;const s=(e=document.getElementById("mySnippets"))==null?void 0:e.querySelector("tbody");if(s){s.innerHTML="";try{const r=((t=m.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId");if(!r)return;const n=ke(ie(b,"snippets"),Ie("creatorId","==",r));(await re(n)).forEach(i=>{const a=i.data(),c=document.createElement("tr");c.innerHTML=`
        <td class="py-2 px-4">${a.title||"No title"}</td>
        <td class="py-2 px-4">${a.ipHash}</td>
        <td class="py-2 px-4">
          <button onclick="window.copyHash('${a.ipHash}')" class="btn btn-primary text-white px-3 py-1">Copy Hash</button>
        </td>
      `,s.appendChild(c)})}catch(r){console.error("Failed to update my snippets:",r),u("Failed to load your snippets.",!0)}}}async function _e(s){const e=document.getElementById("snippetGallery");if(e){e.innerHTML="";try{if(!l||!l.hasActiveConnections){u("Waiting for node connection to search snippets...",!1);return}const t=await l.getIPmetadata("all");if(!t||t.length===0){e.innerHTML="<p>No snippets available.</p>";return}const r=s.split(",").map(n=>n.trim().toLowerCase()).filter(n=>n);t.slice(0,50).forEach(({hash:n,metadata:o})=>{const i=(o.tags||[]).map(c=>c.toLowerCase());if(r.length>0&&!r.some(c=>i.includes(c)))return;const a=document.createElement("div");a.className="bg-gray-800 rounded-lg overflow-hidden shadow-lg",a.innerHTML=`
        <img src="${o.coverImage||"default-cover.jpg"}" alt="Cover Image" class="w-full h-48 object-cover">
        <div class="p-4">
          <h3 class="text-lg font-semibold">${o.title||"Untitled"}</h3>
          <p class="text-sm text-gray-400">${o.tags.join(", ")||"No tags"}</p>
          <div class="mt-2 flex justify-between">
            <button onclick="window.openBuyModal('${n}')" class="btn btn-primary">Get (${o.isPremium?`${o.priceUsd} DCT`:"Free"})</button>
            <button onclick="window.flagSnippet('${n}')" class="btn btn-danger">Flag</button>
          </div>
        </div>
      `,e.appendChild(a)})}catch(t){console.error("Failed to search snippets:",t),u("Search failed.",!0)}}}async function q(){var e;const s=((e=m.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(s)try{const t=B(b,"users",s),r=l?await l.getBalance(l.keypair):0;await U(t,{balance:r,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function Ge(){const s=document.getElementById("transactionHistory");s&&(s.style.display=s.style.display==="none"?"block":"none")}function We(s,e,t){const r=document.getElementById("snippetDisplay");if(!r)return;r.innerHTML="";const n=document.createElement("div");n.className="p-4 bg-gray-800 rounded-lg mt-4";const o=document.createElement("h3");if(o.className="text-lg font-semibold mb-2",o.textContent=t||"Snippet Content",n.appendChild(o),e.startsWith("text")){const i=new TextDecoder().decode(s),a=document.createElement("pre");a.className="text-sm text-gray-300 whitespace-pre-wrap",a.textContent=i,n.appendChild(a)}else if(e.startsWith("image")){const i=new Blob([s],{type:e}),a=URL.createObjectURL(i),c=document.createElement("img");c.src=a,c.className="max-w-full h-auto rounded",c.onload=()=>URL.revokeObjectURL(a),n.appendChild(c)}else{const i=new Blob([s],{type:e}),a=URL.createObjectURL(i),c=document.createElement("a");c.href=a,c.download=t||"downloaded_file",c.className="text-blue-400 hover:underline",c.textContent="Download File",c.onclick=()=>setTimeout(()=>URL.revokeObjectURL(a),1e3),n.appendChild(c)}r.appendChild(n)}async function J(){return new Promise((e,t)=>{console.log("Starting IndexedDB initialization...");const r=indexedDB.open("dcrypt_db");r.onsuccess=()=>{const n=r.result,o=n.version;console.log("Current IndexedDB version:",o),n.close();const i=indexedDB.open("dcrypt_db",Math.max(o,5));i.onupgradeneeded=a=>{const c=i.result;console.log("Upgrading database to version",5),c.objectStoreNames.contains("store")||(c.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),c.objectStoreNames.contains("transactions")||(c.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),c.objectStoreNames.contains("offlineQueue")||(c.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),c.objectStoreNames.contains("chunkCache")||(c.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache")),console.log("Database upgrade completed")},i.onsuccess=()=>{const a=i.result;console.log("IndexedDB opened successfully at version",a.version),e(a)},i.onerror=()=>{console.error("Failed to open IndexedDB:",i.error),t(new Error(`Failed to open IndexedDB: ${i.error.message}`))}},r.onerror=()=>{console.error("Failed to check IndexedDB version:",r.error),t(new Error(`Failed to check IndexedDB version: ${r.error.message}`))}})}async function pe(s){return new Promise((e,t)=>{try{const o=s.transaction("store","readonly").objectStore("store").get("dcrypt_identity");o.onsuccess=()=>{var a;const i=(a=o.result)==null?void 0:a.value;i&&typeof i=="string"?(console.log("Loaded keypair from IndexedDB:",i),e(i)):(console.log("No valid keypair found in IndexedDB."),e(null))},o.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",o.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(r){console.error('Error accessing "store" object store:',r),t(r)}})}async function X(s,e){return new Promise((t,r)=>{try{console.log("Storing keypair in IndexedDB:",e);const i=s.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});i.onsuccess=()=>{console.log("Successfully stored keypair in IndexedDB"),t()},i.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",i.error),r(new Error("Failed to store keypair in IndexedDB"))}}catch(n){console.error('Error storing keypair in "store" object store:',n),r(n)}})}async function ee(s,e){if(W){console.log("Initialization already in progress, skipping...");return}W=!0,console.log("Initializing app with userId:",s);try{e||(e=await J());let t=await pe(e);if(t instanceof Uint8Array&&(t=Me(t)),!t&&s)console.log("No keypair found, using userId as keypair:",s),await X(e,s),t=s;else if(t)t.length>40&&(console.warn("Existing keypair is unusually large:",t.length,"characters. Overwriting with userId."),t=s,await X(e,s));else throw new Error("No keypair available and no userId provided to create one");M=await Qe(s),console.log(`User is ${M?"":"not "}a node.`),l=new de(t,M),window.dht=l,await l.initDB(),console.log("DHT database initialized."),await l.initSwarm(),console.log("DHT swarm initialized."),await l.syncUserData(),console.log("User data synced."),await Promise.all([j(),K(),N(),F()]),console.log("UI updated."),await ge(s)}catch(t){console.error("Error initializing application:",t),t.message.includes("ID conflict")?u("Failed to connect to the network due to an ID conflict. Please try signing out and signing in again.",!0):u(`Initialization failed: ${t.message}`,!0),l&&l.destroy(),l=null,window.dht=null,x=0,A()}finally{W=!1}q()}async function Qe(s){try{const e=B(b,"nodes",s);return(await H(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function Ke(){if(console.log("handleSignup function called"),G){console.log("Signup already in progress, ignoring additional clicks");return}localStorage.setItem("visited","y"),G=!0;const s=document.getElementById("signupButton");s&&(s.disabled=!0,s.textContent="Signing Up...",console.log("Signup button disabled and text updated")),localStorage.setItem("pendingRole","user");try{const e=new oe,t=await se(m,e);console.log("Sign-up successful, user:",t.user);const r=document.getElementById("usernameInput").value,n=B(b,"users",t.user.uid);await U(n,{username:r||t.user.displayName||"Anonymous User",profileImageUrl:t.user.photoURL,createdAt:Date.now(),snippetsPosted:0},{merge:!0}),console.log("User profile saved to Firestore"),u("Sign-up successful! Redirecting to dashboard..."),window.location.href="/datasharingApp/"}catch(e){console.error("Signup failed:",e),u(`Sign-up failed: ${e.message}`,!0),G=!1,s&&(s.disabled=!1,s.textContent="Sign Up with Google")}finally{localStorage.removeItem("pendingRole")}}async function Je(s){if(!C()){u("Please sign in to deposit.");return}try{if(!l)throw new Error("DHT not initialized");if(!s||s<=0)throw new Error("Invalid deposit amount");const t=await l.getBalance(l.keypair)+s;await l.putBalance(l.keypair,t),await l.dbAdd("transactions",{type:"deposit",amount:s,timestamp:Date.now()}),u(`Deposited ${s} DCT successfully!`),await Promise.all([F(),N(),q()])}catch(e){console.error("deposit failed:",e),u(`Deposit failed: ${e.message}`,!0)}}async function Ve(s){if(!C()){u("Please sign in to withdraw.");return}try{if(!l)throw new Error("DHT not initialized");if(!s||s<=0)throw new Error("Invalid withdrawal amount");const e=await l.getBalance(l.keypair);if(e<s)throw new Error("Insufficient balance");await l.putBalance(l.keypair,e-s),await l.dbAdd("transactions",{type:"withdraw",amount:s,timestamp:Date.now()}),u(`Withdrew ${s} DCT successfully!`),await Promise.all([F(),N(),q()])}catch(e){console.error("withdraw failed:",e),u(`Withdrawal failed: ${e.message}`,!0)}}async function Ye(){console.log("signIn function called");try{m||(console.error("Firebase Auth is not initialized, initializing now..."),await ue());const s=new oe,e=await se(m,s);console.log("Sign-in successful, user:",e.user)}catch(s){console.error("Login failed:",s),u(`Login failed: ${s.message}`,!0)}}async function te(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),u("Node signed out successfully!")):(await we(m),u("Signed out successfully!")),l&&(l.destroy(),l=null,window.dht=null);const t=(await J()).transaction("store","readwrite").objectStore("store");await new Promise((r,n)=>{const o=t.delete("dcrypt_identity");o.onsuccess=()=>{console.log("Successfully deleted keypair from IndexedDB"),r()},o.onerror=()=>{console.error("Failed to delete keypair from IndexedDB:",o.error),n(new Error("Failed to delete keypair from IndexedDB"))}}),x=0,A()}catch(s){console.error("Sign-out failed:",s),u(`Sign-out failed: ${s.message}`,!0)}}async function Ze(s,e,t,r,n){var o,i,a;if(!C()){u("Please sign in to publish.");return}try{if(!l)throw new Error("DHT not initialized");if(!s)throw new Error("Title is required");let c=r||"",d="text/plain";if((o=n==null?void 0:n.files)!=null&&o.length){const f=n.files[0];d=f.type||"application/octet-stream",c=await new Promise((D,z)=>{const T=new FileReader;T.onload=_=>D(new Uint8Array(_.target.result)),T.onerror=()=>z(new Error("Failed to read file")),T.readAsArrayBuffer(f)})}else c=new TextEncoder().encode(c);const h=document.getElementById("modalPremium").checked,p=document.getElementById("modalPriceInput"),g=h&&p&&parseFloat(p.value)||0,y=document.getElementById("modalCoverImageInput");let w="";if((i=y==null?void 0:y.files)!=null&&i.length){const f=y.files[0],D=new FileReader;w=await new Promise((z,T)=>{D.onload=_=>z(_.target.result.split(",")[1]),D.onerror=()=>T(new Error("Failed to read cover image")),D.readAsDataURL(f)})}const P={content_type:d,title:s,description:e||"",tags:t?t.split(",").map(f=>f.trim()).filter(f=>f.length>0):[],isPremium:h,priceUsd:g,coverImage:w},{ipHash:k,targetPeer:I}=await l.publishIP(P,c,d),v=((a=m.currentUser)==null?void 0:a.uid)||localStorage.getItem("nodeId"),S=B(b,"snippets",k),$={ipHash:k,title:s,description:e||"",tags:P.tags,isPremium:h,priceUsd:g,flagCount:0,likes:0,dislikes:0,createdAt:Date.now(),creatorId:v,targetNode:I,coverImage:w};await U(S,$,{merge:!0});const L=B(b,"users",v);await R(L,{snippetsPosted:O(1)}),u("Snippet published successfully!"),window.closePublishModal(),await Promise.all([j(),K(),F(),N(),q(),ge(v)])}catch(c){console.error("publishSnippet failed:",c),u(`Publish failed: ${c.message}`,!0)}}async function he(s){if(!C())return u("Please sign in to buy."),null;try{if(!l)throw new Error("DHT not initialized");if(!s)throw new Error("Hash is required");let e=await l.getIPmetadata(s);console.log(e,"IP OBJECT");const t=B(b,"snippets",s),r=await H(t);if(!r.exists())throw new Error("Snippet not found");const n=r.data(),a=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(a>0){const p=await l.getBalance(l.keypair);if(p<a)throw new Error("Insufficient balance");const g=a*.05;await l.distributeCommission(g),await l.putBalance(l.keypair,p-a),await l.dbAdd("transactions",{type:"buy",amount:a,timestamp:Date.now()})}else console.log("This snippet is free!"),await l.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:c,fileType:d}=await l.requestData(e,n.targetNode,s);u("Snippet retrieved successfully!"),await Promise.all([F(),N(),q(),K()]);const h=prompt('Do you like this snippet? Type "like" or "dislike":');if(h!==null){const p=h.trim().toLowerCase();p==="like"||p==="dislike"?(await et(s,p),u(`You ${p}d this snippet!`),await j()):u('Invalid input. Please type "like" or "dislike".',!0)}return We(c,d,e.metadata.title),{data:c,fileType:d}}catch(e){return console.error("buySnippet failed:",e),u(`Purchase failed: ${e.message}`,!0),null}}async function Xe(s){var r;const e=s||((r=document.getElementById("buyHashInput"))==null?void 0:r.value.trim());if(!e){u("Please enter a valid hash.",!0);return}await he(e)&&u("Snippet purchased and displayed below!")}async function et(s,e){var r;const t=((r=m.currentUser)==null?void 0:r.uid)||localStorage.getItem("nodeId");if(t)try{const n=B(b,"snippets",s,"feedback",t);await U(n,{action:e,timestamp:Date.now()});const o=B(b,"snippets",s);e==="like"?await R(o,{likes:O(1)}):e==="dislike"&&await R(o,{dislikes:O(1)})}catch(n){console.error("Failed to submit feedback:",n),u(`Failed to submit feedback: ${n.message}`,!0)}}async function tt(s){var t;if(!(((t=m.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){u("Please sign in to flag content.");return}try{const r=B(b,"snippets",s);await R(r,{flagCount:O(1)}),((await H(r)).data().flagCount||0)>=3?(await R(r,{reviewStatus:"under_review"}),u("Snippet has been flagged and is under review."),await j()):u("Snippet flagged. It will be reviewed if flagged by more users.")}catch(r){console.error("Failed to flag snippet:",r),u(`Failed to flag snippet: ${r.message}`,!0)}}async function nt(){const s=He();console.log(s),localStorage.setItem("nodeId",s),localStorage.setItem("role","node");const e=B(b,"nodes",s);if(await U(e,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!window.location.pathname.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html";return}}async function ot(){try{const s=localStorage.getItem("nodeId"),e=localStorage.getItem("role");if(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),sessionStorage.setItem("nodeId",s),sessionStorage.setItem("role",e),console.log("Moved to session storage"),e!=="node"||!s){u("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}l=new de(s,!0),await l.initDB(),await l.initSwarm(),await l.syncUserData();const r=(await l.dbGetAll("transactions")).filter(o=>o.type==="commission").reduce((o,i)=>o+(i.amount||0),0),n=document.getElementById("nodeEarnings");n&&(n.textContent=`Total Earnings: ${r.toFixed(2)} DCT`)}catch(s){console.error("Error initializing node instructions:",s),u(`Initialization failed: ${s.message}`)}}async function ge(s){if(s)try{const e=B(b,"users",s),t=await H(e);if(t.exists()){const r=t.data(),n=document.getElementById("userName"),o=document.querySelector(".user-avatar"),i=document.getElementById("snippetsPosted");n&&(n.textContent=r.username||"Anonymous User"),o&&(r.profileImageUrl?o.innerHTML=`<img src=${r.profileImageUrl} alt="Profile Image" class="w-12 h-12 rounded-full object-cover">`:o.innerHTML='<i class="fas fa-user text-lg"></i>'),i&&(i.textContent=r.snippetsPosted||0)}}catch(e){console.error("Failed to fetch user profile:",e),u("Failed to load user profile.",!0)}}async function st(s){try{await navigator.clipboard.writeText(s),u("Hash copied to clipboard!")}catch(e){console.error("Failed to copy hash:",e),u("Failed to copy hash.",!0)}}function rt(){const s=document.getElementById("publishModal");s&&s.classList.remove("active")}document.addEventListener("DOMContentLoaded",async()=>{var r,n;if(localStorage.getItem("visited")!=="y"&&!window.location.pathname.includes("signup")&&!window.location.pathname.includes("node")&&(window.location.href="/datasharingApp/landing.html",await new Promise(i=>setTimeout(i,1e3))),console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname),window.location.pathname.includes("signup")){const o=document.getElementById("userSignupForm");o&&o.addEventListener("submit",async i=>{i.preventDefault(),await window.handleSignup()})}window.location.pathname.includes("node")&&ot();try{await ue()}catch(o){console.error("Firebase initialization failed, aborting setup:",o),u("Firebase initialization failed. Please check your configuration.",!0);return}const s=localStorage.getItem("role"),e=localStorage.getItem("nodeId"),t=!(window.location.pathname.includes("node")||window.location.pathname.includes("signup.html")||window.location.pathname.includes("landing"));if(t&&s==="node"&&e&&(console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html"),t){document.getElementById("body").classList=[];const o=await J(),i=await pe(o);try{await Promise.all([new Promise(a=>{V(m,async c=>{if(console.log("onAuthStateChanged triggered"),c)console.log("User is signed in:",c.uid),await ee(c.uid,o);else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{i?(console.log("Found keypair in IndexedDB, initializing app..."),await ee(i,o)):(console.log("No keypair found in IndexedDB."),t&&A())}catch(d){console.error("Failed to initialize IndexedDB or load keypair:",d),t&&A()}}a()},c=>{console.error("onAuthStateChanged error:",c),u("Failed to monitor authentication state.",!0),a()})})])}catch(a){console.error("Initialization error:",a),u("An error occurred during initialization.",!0)}}if(t){const o={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),snippetGallery:document.getElementById("snippetGallery"),buyHashButton:document.getElementById("buyHashButton")};console.log("On index.html, setting up UI and event listeners"),s==="node"&&e&&(M=!0,console.log("Node detected, but should have been redirected already.")),(r=o.loginButton)==null||r.addEventListener("click",a=>{a.preventDefault(),console.log("Login button clicked"),Ye()}),(n=o.logoutButton)==null||n.addEventListener("click",a=>{a.preventDefault(),console.log("Logout button clicked"),te()}),V(m,a=>{var c,d,h,p,g,y;a?((c=o.signupButton)==null||c.classList.add("hidden"),(d=o.loginButton)==null||d.classList.add("hidden"),(h=o.logoutButton)==null||h.classList.remove("hidden"),o.searchButton.disabled=!1,o.depositButton.disabled=!1,o.withdrawButton.disabled=!1,o.toggleHistoryButton.disabled=!1,o.buyHashButton.disabled=!1):((p=o.signupButton)==null||p.classList.remove("hidden"),(g=o.loginButton)==null||g.classList.remove("hidden"),(y=o.logoutButton)==null||y.classList.add("hidden"),o.searchButton.disabled=!0,o.depositButton.disabled=!0,o.withdrawButton.disabled=!0,o.toggleHistoryButton.disabled=!0,o.buyHashButton.disabled=!0,A())});const i=document.getElementById("publishForm");i&&i.addEventListener("submit",async a=>{a.preventDefault();const c=document.getElementById("modalTitleInput").value,d=document.getElementById("modalDescriptionInput").value,h=document.getElementById("modalTagsInput").value,p=document.getElementById("modalContentInput").value,g=document.getElementById("modalFileInput");await window.publishSnippet(c,d,h,p,g)})}else console.log("Not on index.html, skipping index.html-specific setup");window.logout=te,window.publishSnippet=Ze,window.buySnippet=he,window.buySnippetByHash=Xe,window.toggleTransactionHistory=Ge,window.flagSnippet=tt,window.handleSignup=Ke,window.becomeNode=nt,window.deposit=Je,window.withdraw=Ve,window.redirectToPublish=je,window.searchSnippets=_e,window.copyHash=st,window.openBuyModal=ze,window.closePublishModal=rt});
