import{getAuth as ge,onAuthStateChanged as Y,setPersistence as fe,browserLocalPersistence as me,GoogleAuthProvider as se,signInWithPopup as re,signOut as ye}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore as we,getDocs as O,collection as A,doc as B,setDoc as D,updateDoc as R,increment as M,getDoc as j,query as H,where as Q,onSnapshot as be}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import{getStorage as ke}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-storage.js";import Ie from"https://cdn.jsdelivr.net/npm/peerjs@1.5.4/+esm";import{initializeApp as Be}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();const Se="modulepreload",Pe=function(r){return"/datasharingApp/"+r},Z={},ve=function(e,t,o){let n=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),a=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));n=Promise.allSettled(t.map(c=>{if(c=Pe(c),c in Z)return;Z[c]=!0;const l=c.endsWith(".css"),h=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${h}`))return;const u=document.createElement("link");if(u.rel=l?"stylesheet":Se,l||(u.as="script"),u.crossOrigin="",u.href=c,a&&u.setAttribute("nonce",a),document.head.appendChild(u),l)return new Promise((g,m)=>{u.addEventListener("load",g),u.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(i){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=i,window.dispatchEvent(a),!a.defaultPrevented)throw i}return n.then(i=>{for(const a of i||[])a.status==="rejected"&&s(a.reason);return e().catch(s)})},Ee={apiKey:"AIzaSyBrdrwvY-lPObZgortEgw7YWycUOGsBlyM",authDomain:"dcrypt-edb9c.firebaseapp.com",projectId:"dcrypt-edb9c",storageBucket:"dcrypt-edb9c.firebasestorage.app",messagingSenderId:"952133736604",appId:"1:952133736604:web:32d799360f200bce84f559",measurementId:"G-7KCDLQ6JNH"},K=Be(Ee),xe=ke(K),De=ge(K),ie=we(K),Ce=Object.freeze(Object.defineProperty({__proto__:null,auth:De,db:ie,storage:xe},Symbol.toStringTag,{value:"Module"}));var oe;const E=(oe=globalThis.crypto)==null?void 0:oe.subtle;if(!E)throw new Error("Web Crypto API is not available in this environment");function $e(){const r=new Uint8Array(12);for(let e=0;e<12;e++)r[e]=Math.floor(Math.random()*256);return r}function Te(r,e,t,o,n,s,i){return{content:new Uint8Array(r),content_type:e,tags:t||[],is_premium:o,price_usd:n,creator_id:new Uint8Array(s),file_type:i}}function Ae(r){return r.content}async function ae(r){const e=await E.digest("SHA-256",r);return new Uint8Array(e)}function Re(r){const e=new Uint8Array(new Int32Array([r.index]).buffer),t=new Uint8Array([...r.data,...r.nonce,...e]);return ae(t)}function X(r){return r.index}function ce(r){return new TextEncoder().encode(r).buffer}async function Ue(r,e,t){const o=r.content,n=Math.ceil(o.length/e),s=[],i=await E.digest("SHA-256",ce(t)),a=await E.importKey("raw",i,{name:"AES-GCM"},!1,["encrypt"]);for(let c=0;c<e;c++){const l=c*n,h=Math.min(l+n,o.length),u=o.slice(l,h),g=$e(),m=await E.encrypt({name:"AES-GCM",iv:g},a,u),f={data:new Uint8Array(m),nonce:g,index:c,file_type:r.file_type};s.push(f)}return s}async function Fe(r,e){const t=await E.digest("SHA-256",ce(e));console.log("GOT TO KEYDATA");const o=await E.importKey("raw",t,{name:"AES-GCM"},!1,["decrypt"]);console.log("GOT KEYBUFFER");let n=r.data;if(n instanceof ArrayBuffer)n=new Uint8Array(n);else if(Array.isArray(n))n=new Uint8Array(n);else if(!(n instanceof Uint8Array))throw new Error(`chunk.data must be ArrayBuffer, Array, or Uint8Array, got ${n?n.constructor.name:typeof n}`);let s=r.nonce;if(s instanceof ArrayBuffer)s=new Uint8Array(s);else if(Array.isArray(s))s=new Uint8Array(s);else if(!(s instanceof Uint8Array))throw new Error(`chunk.nonce must be ArrayBuffer, Array, or Uint8Array, got ${s?s.constructor.name:typeof s}`);if(s.length!==12)throw new Error(`Invalid IV length: ${s.length}, expected 12 bytes for AES-GCM`);console.log("Encrypted Data:",n),console.log("IV:",s);const i=await E.decrypt({name:"AES-GCM",iv:s},o,n);return console.log("GOT TO END"),new Uint8Array(i)}function Ne(r){return r.file_type}class le{constructor(e,t=!1){this.peers=new Map,this.knownObjects=new Map,this.chunkToPeerMap=new Map,this.pendingRequests=new Map,this.db=null,this.keypair=e,this.activeNodes=new Set,this.nodes=new Set,this.offlineQueue=[],this.isNode=t,this.peerId=null,this.peer=null,this.connectionAttempts=new Map,this.maxConnectionAttempts=3,this.connectionRetryDelay=5e3,this.averageLatency=0,console.log("DHT initialized with keypair:",e),this.initializeKnownNodes()}async initializeKnownNodes(){const e=async()=>{try{const t=await O(A(ie,"nodes"));this.nodes.clear(),t.empty||t.forEach(o=>this.nodes.add(`node-${o.id}`)),console.log("Fetched nodes:",Array.from(this.nodes))}catch(t){console.error("Failed to fetch nodes from Firestore:",t),this.nodes.clear()}};await e(),setInterval(e,5*60*1e3)}async measureLatency(){const e=[],t=Array.from(this.activeNodes).slice(0,5);for(const o of t){const n=this.peers.get(o);if(n&&n.connected&&n.conn){const s=Date.now();try{await new Promise((a,c)=>{const l=`${o}-ping-${Date.now()}`;n.conn.send({type:"ping",requestId:l}),this.pendingRequests.set(l,{resolve:a,reject:c}),setTimeout(()=>{this.pendingRequests.has(l)&&(this.pendingRequests.delete(l),c(new Error("Ping timeout")))},2e3)});const i=Date.now()-s;e.push(i)}catch(i){console.warn(`Failed to measure latency for peer ${o}: ${i.message}`)}}}this.averageLatency=e.length>0?e.reduce((o,n)=>o+n,0)/e.length:0,console.log(`Average latency: ${this.averageLatency} ms`)}async initDB(){return new Promise((e,t)=>{const n=indexedDB.open("dcrypt_db",5);let s;n.onupgradeneeded=i=>{s=n.result,s.objectStoreNames.contains("store")||s.createObjectStore("store",{keyPath:"id"}),s.objectStoreNames.contains("transactions")||s.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),s.objectStoreNames.contains("offlineQueue")||s.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),s.objectStoreNames.contains("chunkCache")||s.createObjectStore("chunkCache",{keyPath:"id"}),console.log("DHT database upgraded to version",5)},n.onsuccess=()=>{this.db=n.result,console.log("DHT IndexedDB opened at version",this.db.version),e()},n.onerror=i=>t(new Error(`Failed to open IndexedDB: ${i.target.error.message}`))})}async loadKnownObjects(){if(!this.db)throw new Error("IndexedDB not initialized");try{const o=this.db.transaction("store","readonly").objectStore("store").getAll();o.onsuccess=()=>{o.result.forEach(n=>{if(n.id!=="dcrypt_identity")try{const{metadata:s,chunks:i}=JSON.parse(n.value);this.knownObjects.set(n.id,{metadata:s,chunks:i})}catch(s){console.error("Failed to parse known object:",n.id,s)}}),console.log("Loaded known objects from IndexedDB")}}catch(e){console.error("Failed to load known objects:",e)}}async syncUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),this.activeNodes.size>0&&await this.processOfflineQueue();const e={type:"userData",peerId:this.peerId,keypair:this.keypair,balance:await this.getBalance(this.keypair),timestamp:Date.now()};this.broadcast(e),console.log("User data synced successfully")}catch(e){throw console.error("Sync failed:",e),e}}async saveUserData(){if(!this.db)throw new Error("IndexedDB not initialized");try{await this.dbPut("store",{id:"dcrypt_identity",value:this.keypair}),await this.updateBalance(),console.log("User data saved to IndexedDB")}catch(e){throw console.error("Save failed:",e),e}}async initSwarm(){try{return this.peerId=this.isNode?`node-${this.keypair}`:this.keypair,console.log("Initializing PeerJS with Peer ID:",this.peerId),this.peer=new Ie(this.peerId,{host:"0.peerjs.com",port:443,path:"/",secure:!0,config:{iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"turn:openrelay.metered.ca:80",username:"openrelayproject",credential:"openrelayproject"}]},debug:2}),await new Promise((e,t)=>{this.peer.on("open",o=>{console.log(`PeerJS connection opened with ID: ${o}`),this.activeNodes.add(this.peerId),this.peer.on("connection",n=>this.handleConnection(n)),this.peer.on("error",n=>{var s;if(console.error("PeerJS error:",n.type,n.message),n.type==="peer-unavailable"){const i=(s=n.message.match(/Peer (.+) is unavailable/))==null?void 0:s[1];i&&this.handlePeerDisconnect(i)}}),this.peer.on("disconnected",()=>{console.log("PeerJS disconnected. Attempting to reconnect..."),this.peer.reconnect()}),window.addEventListener("beforeunload",()=>{this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed on page unload"))}),setInterval(()=>this.discoverPeers(),3e3),setInterval(()=>this.measureLatency(),6e4),e()}),this.peer.on("error",o=>t(o))})}catch(e){throw console.error("initSwarm failed:",e),e}}discoverPeers(){console.log("Discovering peers...");const e=[...Array.from(this.nodes),...Array.from(this.activeNodes)].filter(t=>t!==this.peerId);if(e.length===0){console.warn("No known peers to connect to.");return}e.forEach(t=>{this.peers.has(t)?this.peers.get(t).connected||this.connectToPeer(t):(this.peers.set(t,{connected:!1,conn:null}),console.log("Discovered peer:",t),this.connectToPeer(t))}),this.peers.forEach((t,o)=>{!t.connected&&(this.connectionAttempts.get(o)||0)>=this.maxConnectionAttempts&&(console.log(`Removing unreachable peer: ${o}`),this.peers.delete(o),this.connectionAttempts.delete(o),this.activeNodes.delete(o))})}connectToPeer(e,t=1){var n;if((n=this.peers.get(e))!=null&&n.connected)return;console.log(`Connecting to peer: ${e} (Attempt ${t}/3)`);const o=this.peer.connect(e,{reliable:!0});o.on("open",()=>{console.log(`Connection opened with peer: ${e}`),this.peers.set(e,{connected:!0,conn:o}),this.activeNodes.add(e),o.send({type:"handshake",peerId:this.peerId})}),o.on("data",s=>{console.log(`Received data from peer ${e}:`,s),this.handlePeerData(s,e)}),o.on("close",()=>{console.log(`Connection closed with peer ${e}`),this.handlePeerDisconnect(e)}),o.on("error",s=>{console.error(`Connection error with peer ${e}:`,s),t<3?setTimeout(()=>this.connectToPeer(e,t+1),5e3*t):(console.log(`Max attempts reached for peer ${e}. Marking as unreachable.`),this.handlePeerDisconnect(e))})}handleConnection(e){console.log("handle connection called");const t=e.peer;console.log(`Incoming connection from peer: ${t} at ${Date.now()}`),e.on("open",()=>{console.log(`Connection opened with peer: ${t}`),this.peers.set(t,{connected:!0,conn:e}),this.activeNodes.add(t)}),e.on("data",o=>{console.log(`Received data from peer ${t}:`,o),this.handlePeerData(o,t)}),e.on("close",()=>{console.log(`Connection closed with peer ${t}`),this.handlePeerDisconnect(t)}),e.on("error",o=>{console.error(`Connection error with peer ${t}:`,o),this.handlePeerDisconnect(t)})}handlePeerDisconnect(e){const t=this.peers.get(e);t&&(t.connected=!1,t.conn=null,this.activeNodes.delete(e),console.log(`Peer disconnected: ${e}. Will reconnect on next discovery.`))}handlePeerData(e,t){switch(console.log(`Received data from peer ${t}:`,e),e.type){case"handshake":console.log(`Handshake from peer: ${t}`),this.activeNodes.add(t);break;case"chunk":this.chunkToPeerMap.set(e.chunkHash,new Set([...this.chunkToPeerMap.get(e.chunkHash)||[],t])),console.log(`Updated chunkToPeerMap for chunk ${e.chunkHash} with peer ${t}`);break;case"ip":this.knownObjects.set(e.ipHash,{metadata:e.metadata,chunks:e.chunkHashes}),this.dbPut("store",{id:e.ipHash,value:JSON.stringify({metadata:e.metadata,chunks:e.chunkHashes})}),console.log(`Received IP ${e.ipHash} from peer ${t}`);break;case"peersWithChunkRequest":this.handlePeersWithChunkRequest(e,t);break;case"peersWithChunkResponse":this.handlePeersWithChunkResponse(e);break;case"saveMapRequest":this.handleMapReception(e);case"chunkRequest":this.handleChunkRequest(e,t);break;case"chunkResponse":this.handleChunkResponse(e);break;case"metadataRequest":this.handleMetadataRequest(e,t);break;case"metadataResponse":this.handleMetadataResponse(e);break;case"userData":console.log(`Received user data from peer ${t}:`,e);break;case"storeChunk":this.storeChunkFromPeer(e.chunkHash,e.chunkData,t);break;case"ping":const o=this.peers.get(t);o&&o.connected&&o.conn&&o.conn.send({type:"pong",requestId:e.requestId});break;case"pong":const n=this.pendingRequests.get(e.requestId);n&&(n.resolve(),this.pendingRequests.delete(e.requestId));break;case"commission":console.log(`Received commission of ${e.amount}. New balance: ${e.newBalance}`);break;default:console.warn(`Unknown data type from peer ${t}:`,e.type)}}async storeChunkFromPeer(e,t,o){try{await this.dbPut("chunkCache",{id:e,value:t});let n=this.chunkToPeerMap.get(e)||new Set;n.add(this.peerId),this.chunkToPeerMap.set(e,n),console.log(`Stored chunk ${e} from peer ${o}`)}catch(n){console.error(`Failed to store chunk ${e} from peer ${o}:`,n)}}async publishChunk(e,t,o,n){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e||typeof e!="string"||e.trim()==="")throw new Error("Invalid chunk hash");await this.dbPut("chunkCache",{id:e,value:t});let s=this.chunkToPeerMap.get(e)||new Set;if(s.add(this.peerId),this.chunkToPeerMap.set(e,s),this.activeNodes.size>0){const i=Array.from(this.activeNodes).filter(c=>c.startsWith("node-"));if(i.length>0){const c=o%i.length,l=i[c],h=this.peers.get(l);h&&h.connected&&h.conn&&(h.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),s.add(l),this.chunkToPeerMap.set(e,s),console.log(`Sent chunk ${e} to node ${l}`))}const a=Array.from(this.activeNodes).filter(c=>!c.startsWith("node-")&&c!==this.peerId);if(a.length>0){const c=a[Math.floor(Math.random()*a.length)],l=this.peers.get(c);l&&l.connected&&l.conn&&(l.conn.send({type:"storeChunk",chunkHash:e,chunkData:t,peerId:this.peerId}),s.add(c),this.chunkToPeerMap.set(e,s),console.log(`Sent chunk ${e} to peer ${c}`))}}else await this.queueOfflineOperation({type:"publishChunk",chunkHash:e,chunkData:t,chunkIndex:o,totalChunks:n});this.broadcastChunk(e)}catch(s){throw console.error("publishChunk failed:",s),s}}broadcastChunk(e){const t={type:"chunk",chunkHash:e,peerId:this.peerId};this.broadcast(t),console.log(`Broadcasted chunk ${e} to ${this.activeNodes.size} peers`)}async publishIP(e,t,o){if(!this.db||!this.keypair)throw new Error("IndexedDB or keypair not initialized");try{const n=Array.isArray(e.tags)?e.tags.map(w=>String(w).trim()).filter(w=>w!==""):[],s=!!e.isPremium,i=s?e.priceUsd||30:0,a=new Uint8Array(t),c=e.content_type||"",l=this.keypair,u=Te(a,c,n,s,i,l,o||"text/plain"),g=Ae(u),m=await ae(g),f=this.uint8ArrayToBase64Url(m),S=Array.from(this.activeNodes).filter(w=>w.startsWith("node-")),P=S[Math.floor(Math.random()*S.length)],k=S.length>0?S.length:1,v=await Ue(u,k,f),I=await Promise.all(v.map(w=>Re(w).then(_=>this.uint8ArrayToBase64Url(_)))),$={...e,chunk_count:v.length,isPremium:s,priceUsd:i,chunks:I},q={metadata:$,chunks:I};this.knownObjects.set(f,q),await this.dbPut("store",{id:f,value:JSON.stringify(q)});for(let w=0;w<v.length;w++)await this.publishChunk(I[w],v[w],w,v.length);return this.activeNodes.size>0?this.broadcastIP(f,$,I):await this.queueOfflineOperation({type:"publishIP",ipHash:f,metadata:$,chunkHashes:I}),this.sendMapToPeer(P),console.log("sent to",P),{ipHash:f,targetPeer:P}}catch(n){throw console.error("publishIP failed:",n),n}}broadcastIP(e,t,o){const n={type:"ip",ipHash:e,metadata:t,chunkHashes:o,peerId:this.peerId};this.broadcast(n),console.log(`Broadcasted IP ${e} to ${this.activeNodes.size} peers`)}async requestData(e,t,o){if(!this.db)throw new Error("IndexedDB not initialized");try{if(!e)throw new Error("IP not found");await this.getPeersWithChunk(t,o);const n=[];for(const h of e.chunks)try{const u=await this.dbGet("chunkCache",h);if(u&&u.value){n.push({chunk:u.value,hash:h});continue}const g=this.chunkToPeerMap.get(h);if(!g||g.size===0)throw new Error(`No peers found with chunk ${h}`);const m=Array.from(g).filter(P=>P.startsWith("node-"));let f=!1,S=null;for(const P of m)if(this.activeNodes.has(P))try{const k=await this.fetchChunkFromPeer(P,h);let v={data:new Uint8Array(k.data),nonce:new Uint8Array(k.nonce),index:k.index,file_type:k.file_type};console.log(v),await this.dbPut("chunkCache",{id:h,value:v}),n.push({chunk:k,hash:h}),f=!0;break}catch(k){S=k,console.error(`Failed to fetch/store chunk ${h} from peer ${P}:`,k)}if(!f)throw S||new Error(`No available peer for chunk ${h}`)}catch(u){throw console.error(`Error processing chunk ${h}:`,u),u}const s=n.sort((h,u)=>X(h.chunk)-X(u.chunk));console.log(s,"SORTED");const i=await Promise.all(s.map(({chunk:h},u)=>{console.log(h);try{let g=Fe(h,o);return console.log("DECRYPTED",g),g}catch(g){throw console.error(`Decryption failed for chunk at index ${u} (hash: ${s[u].hash}):`,g),g}})),a=new Uint8Array(i.reduce((h,u)=>h+u.length,0));console.log("GOT FULL DATA",a);let c=0;for(const h of i)a.set(h,c),c+=h.length;console.log("got here");const l=Ne(s[0].chunk);return console.log("Got filetype everything worked"),{data:a,fileType:l}}catch(n){throw console.error("requestData failed:",n),n}}sendMapToPeer(e){const t=this.peers.get(e),o={};for(const[s,i]of this.chunkToPeerMap)o[s]=Array.from(i);const n={type:"saveMapRequest",map:o};t.conn.send(n)}handleMapReception(e){const t=e.map;for(const[o,n]of Object.entries(t))this.chunkToPeerMap.set(o,new Set(n))}async getPeersWithChunk(e,t){const o=this.peers.get(e),n=`${e}-${t}-${Date.now()}`,s={type:"peersWithChunkRequest",requestId:n,ipHash:t,peerId:this.peerId};return o.conn.send(s),new Promise((i,a)=>{this.pendingRequests.set(n,{resolve:i,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),a(new Error(`Request for object ${t} from peer timed out`)))},1e4)})}async getIPmetadata(e){const t=this.peers.entries().next().value;if(!t)throw new Error("No peers available");const[o,n]=t,s=`${o}-${e}-${Date.now()}`,i={type:"metadataRequest",requestId:s,ipHash:e,peerId:this.peerId};return n.conn.send(i),new Promise((a,c)=>{this.pendingRequests.set(s,{resolve:a,reject:c,hash:e}),setTimeout(()=>{this.pendingRequests.has(s)&&(this.pendingRequests.delete(s),c(new Error(`Request for object ${e} from peer timed out`)))},1e4)})}async fetchChunkFromPeer(e,t){const o=this.peers.get(e);if(!o||!o.connected||!o.conn)throw new Error(`Peer ${e} is not connected`);const n=`${e}-${t}-${Date.now()}`,s={type:"chunkRequest",requestId:n,chunkHash:t,peerId:this.peerId};return o.conn.send(s),new Promise((i,a)=>{this.pendingRequests.set(n,{resolve:i,reject:a,hash:t}),setTimeout(()=>{this.pendingRequests.has(n)&&(this.pendingRequests.delete(n),a(new Error(`Request for chunk ${t} from peer ${e} timed out`)))},1e4)})}handleChunkRequest(e,t){const{requestId:o,chunkHash:n}=e;this.dbGet("chunkCache",n).then(s=>{if(s&&s.value){const i=this.peers.get(t);i&&i.connected&&i.conn&&(i.conn.send({type:"chunkResponse",requestId:o,chunkHash:n,chunkData:s.value,peerId:this.peerId}),console.log(`Sent chunk ${n} to peer ${t}`))}else console.warn(`Chunk ${n} not found for peer ${t}`)}).catch(s=>console.error(`Failed to retrieve chunk ${n} for peer ${t}:`,s))}handleMetadataRequest(e,t){const{requestId:o,ipHash:n}=e,s=this.knownObjects.get(n),i=this.peers.get(t);i&&i.connected&&i.conn&&i.conn.send({type:"metadataResponse",requestId:o,ipObject:s,peerId:this.peerId,ipHash:n})}handleMetadataResponse(e){const{requestId:t,ipObject:o,ipHash:n}=e,s=this.pendingRequests.get(t);s&&(n===s.hash&&s.resolve(o),this.pendingRequests.delete(t))}handlePeersWithChunkRequest(e,t){const{requestId:o,ipHash:n}=e,s=this.knownObjects.get(n);if(!s){console.warn(`IP ${n} not found`);return}const i={};for(const c of s.chunks){const l=this.chunkToPeerMap.get(c);l&&(i[c]=Array.from(l))}const a=this.peers.get(t);a&&a.connected&&a.conn&&a.conn.send({type:"peersWithChunkResponse",requestId:o,chunkPeers:i,peerId:this.peerId,ipHash:n})}handlePeersWithChunkResponse(e){const{requestId:t,chunkPeers:o}=e,n=this.pendingRequests.get(t);if(n){for(const[s,i]of Object.entries(o))this.chunkToPeerMap.set(s,new Set(i));n.resolve(),this.pendingRequests.delete(t)}}handleChunkResponse(e){const{requestId:t,chunkHash:o,chunkData:n}=e,s=this.pendingRequests.get(t);s&&(s.hash===o?s.resolve(n):s.reject(new Error(`Received chunk hash ${o} does not match requested hash ${s.hash}`)),this.pendingRequests.delete(t))}async distributeCommission(e){const t=Array.from(this.activeNodes).filter(n=>n.startsWith("node-"));if(t.length===0){console.log("No active nodes to distribute commission to.");return}const o=e/t.length;console.log(`Distributing commission of ${e} to ${t.length} nodes (${o} per node)`);for(const n of t){const s=n.replace("node-",""),i=this.base64UrlToUint8Array(s),c=await this.getBalance(i)+o;await this.putBalance(i,c);const l=this.peers.get(n);l&&l.connected&&l.conn&&l.conn.send({type:"commission",amount:o,newBalance:c,peerId:this.peerId})}}async getBalance(e){if(!this.db)throw new Error("IndexedDB not initialized");const t=await this.dbGet("store","balance_"+e);return t&&t.value?parseFloat(t.value):0}async putBalance(e,t){if(!this.db)throw new Error("IndexedDB not initialized");if(typeof t!="number"||t<0)throw new Error("Invalid balance amount");await this.dbPut("store",{id:"balance_"+e,value:t.toString()}),this.activeNodes.size>0&&this.broadcast({type:"userData",peerId:this.peerId,keypair:this.keypair,balance:t,timestamp:Date.now()})}async updateBalance(){if(!this.db)throw new Error("IndexedDB not initialized");const e=await this.getBalance(this.keypair);await this.putBalance(this.keypair,e)}async queueOfflineOperation(e){if(!this.db)throw new Error("IndexedDB not initialized");this.offlineQueue.push(e),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:e}),console.log("Queued offline operation:",e)}async processOfflineQueue(){if(this.offlineQueue.length===0)return;console.log("Processing offline queue...");const e=[...this.offlineQueue];this.offlineQueue=[];const o=this.db.transaction("offlineQueue","readwrite").objectStore("offlineQueue");await new Promise(n=>o.clear().onsuccess=n);for(const n of e)try{switch(n.type){case"publishChunk":await this.publishChunk(n.chunkHash,n.chunkData,n.chunkIndex,n.totalChunks);break;case"publishIP":await this.broadcastIP(n.ipHash,n.metadata,n.chunkHashes);break;default:console.warn("Unknown offline operation type:",n.type)}}catch(s){console.error(`Failed to process offline operation ${n.type}:`,s),this.offlineQueue.push(n),await this.dbAdd("offlineQueue",{id:Date.now().toString(),value:n})}}async dbPut(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).put(t);a.onsuccess=()=>o(),a.onerror=c=>n(new Error(`DB put failed: ${c.target.error.message}`))})}async dbAdd(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readwrite").objectStore(e).add(t);a.onsuccess=()=>o(),a.onerror=c=>n(new Error(`DB add failed: ${c.target.error.message}`))})}async dbGet(e,t){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((o,n)=>{const a=this.db.transaction(e,"readonly").objectStore(e).get(t);a.onsuccess=()=>o(a.result),a.onerror=c=>n(new Error(`DB get failed: ${c.target.error.message}`))})}async dbGetAll(e){if(!this.db)throw new Error("IndexedDB not initialized");return new Promise((t,o)=>{const i=this.db.transaction(e,"readonly").objectStore(e).getAll();i.onsuccess=()=>t(i.result),i.onerror=a=>o(new Error(`DB getAll failed: ${a.target.error.message}`))})}broadcast(e){this.activeNodes.forEach(t=>{if(t!==this.peerId){const o=this.peers.get(t);o&&o.connected&&o.conn&&o.conn.send(e)}})}uint8ArrayToBase64Url(e){const t=String.fromCharCode(...e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}base64UrlToUint8Array(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const o=atob(t),n=new Uint8Array(o.length);for(let s=0;s<o.length;s++)n[s]=o.charCodeAt(s);return n}destroy(){this.peer&&!this.peer.destroyed&&(this.peer.destroy(),console.log("PeerJS peer destroyed")),this.peers.clear(),this.activeNodes.clear(),this.pendingRequests.clear()}}function qe(r){const e=String.fromCharCode(...r);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}let y=null,b=null,Le=null,d=null,L=!1,x=0,G=!1,W=!1;async function de(){console.log("Starting Firebase initialization...");try{const r=await ve(()=>Promise.resolve().then(()=>Ce),void 0);y=r.auth,b=r.db,Le=r.storage,await fe(y,me),console.log("Firebase services initialized successfully with local persistence")}catch(r){throw console.error("Failed to initialize Firebase services:",r),p("Failed to initialize Firebase. Please try again later.",!0),r}}function Oe(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,r=>{const e=Math.random()*16|0;return(r==="x"?e:e&3|8).toString(16)})}function C(){return!!(y!=null&&y.currentUser)||localStorage.getItem("role")==="node"}function p(r,e=!1){const t=document.getElementById("toast");t&&(t.textContent=r,t.className="toast",e&&t.classList.add("error-toast"),t.style.display="block",setTimeout(()=>{t.style.display="none"},3e3))}function Me(){if(!C()||!d){p("Please sign in and ensure the app is initialized before publishing.",!0);return}try{document.getElementById("publishModal").classList.add("active"),console.log("Opened publish modal")}catch(r){console.error("Failed to open publish modal:",r),p("Failed to open publish modal. Please try again.",!0)}}async function He(r){let e=d.knownObjects.get(r).metadata;if(window.currentProduct=e.hash,!C()||!d){p("Please sign in and ensure the app is initialized before viewing.",!0);return}try{const t=document.getElementById("buyModal");document.getElementById("snippetTitle").value=e.content_type,document.getElementById("snippetDescription").value=e.description,document.getElementById("snippetPrice").value=e.priceUsd==0?"Free":e.priceUsd,t.classList.add("active")}catch(t){console.error("Failed to open buy/preview modal:",t),p("Failed to open buy/preview modal. Please try again.",!0)}}function T(){var e,t;const r={publishedItemsTableBody:(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody"),mySnippetsTableBody:(t=document.getElementById("mySnippets"))==null?void 0:t.querySelector("tbody"),transactionList:document.getElementById("transactionList"),userBalanceElement:document.getElementById("userBalance"),userNameElement:document.getElementById("userName"),userAvatarElement:document.querySelector(".user-avatar"),snippetsPostedElement:document.getElementById("snippetsPosted")};r.publishedItemsTableBody&&(r.publishedItemsTableBody.innerHTML=""),r.mySnippetsTableBody&&(r.mySnippetsTableBody.innerHTML=""),r.transactionList&&(r.transactionList.innerHTML="No transactions yet."),r.userBalanceElement&&(r.userBalanceElement.textContent="Balance: 0 DCT"),r.userNameElement&&(r.userNameElement.textContent="Guest User"),r.userAvatarElement&&(r.userAvatarElement.innerHTML='<i class="fas fa-user text-lg"></i>'),r.snippetsPostedElement&&(r.snippetsPostedElement.textContent="0"),x=0,localStorage.removeItem("userKeypair"),localStorage.removeItem("peerId"),localStorage.removeItem("dhtInitialized"),console.log("Cleared persisted state from localStorage on sign-out")}async function U(){const r=document.getElementById("userBalance");if(r){if(!d){r.textContent="Balance: 0 DCT",x=0;return}try{x=await d.getBalance(d.keypair)||0,r.textContent=`Balance: ${x} DCT`}catch(e){console.error("Failed to update balance:",e),r.textContent="Balance: 0 DCT",x=0}}}async function F(){const r=document.getElementById("transactionList");if(r){if(!d){r.innerHTML="Not initialized.";return}try{const e=await d.dbGetAll("transactions");if(e.length===0){r.innerHTML="No transactions yet.";return}r.innerHTML=e.map(t=>`<p class="py-1">${t.type} - ${t.amount} DCT - ${new Date(t.timestamp).toLocaleString()}</p>`).join("")}catch(e){console.error("Failed to update transaction history:",e),r.innerHTML="Failed to load transactions."}}}async function z(){var e;const r=(e=document.getElementById("publishedItems"))==null?void 0:e.querySelector("tbody");if(r){r.innerHTML="";try{const t=H(A(b,"snippets"));be(t,async o=>{const n={};if(o.forEach(s=>{n[s.id]=s.data()}),d){d.knownObjects.clear();for(const[s,i]of Object.entries(n)){const a={content_type:i.title,hash:i.ipHash,description:i.description||"No description",tags:i.tags||[],isPremium:i.isPremium||!1,priceUsd:i.priceUsd||0};d.knownObjects.set(s,{metadata:a,chunks:i.chunks||[]})}d.knownObjects.forEach((s,i)=>{const a=n[i],l=(s.metadata.isPremium||!1)&&s.metadata.priceUsd||0,h=l>0?`${l} DCT`:"Free",u=document.createElement("tr");u.innerHTML=`
            <td class="py-2 px-4">${s.metadata.content_type}</td>
            <td class="py-2 px-4">${s.metadata.tags.join(", ")||"No tags"}</td>
            <td class="py-2 px-4">${a.likes}</td>
            <td class="py-2 px-4">${a.dislikes}</td>
            <td class="py-2 px-4">
            
              <button onclick="window.openBuyModal('${i}')" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${h})</button>
              <button onclick="window.flagSnippet('${i}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
            </td>
          `,r.appendChild(u)})}},o=>{console.error("Live feed snapshot error:",o),p("Failed to load live feed.",!0)})}catch(t){console.error("Failed to update live feed:",t),p("Failed to load live feed.",!0)}}}async function J(){var e,t;const r=(e=document.getElementById("mySnippets"))==null?void 0:e.querySelector("tbody");if(r){r.innerHTML="";try{const o=((t=y.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId");if(!o)return;const n=H(A(b,"snippets"),Q("creatorId","==",o));(await O(n)).forEach(i=>{const a=i.data(),c=document.createElement("tr");c.innerHTML=`
        <td class="py-2 px-4">${a.title||"No title"}</td>
        <td class="py-2 px-4">${a.ipHash}</td>
        <td class="py-2 px-4">
          <button onclick="window.copyHash('${a.ipHash}')" class="bg-blue-500 text-white rounded hover:bg-blue-600 px-3 py-1">Copy Hash</button>
        </td>
      `,r.appendChild(c)})}catch(o){console.error("Failed to update my snippets:",o),p("Failed to load your snippets.",!0)}}}async function je(r){var t;const e=(t=document.getElementById("publishedItems"))==null?void 0:t.querySelector("tbody");if(e){e.innerHTML="";try{const o=r.split(",").map(i=>i.trim().toLowerCase()).filter(i=>i);let n;o.length===0?n=await O(H(A(b,"snippets"),Q("reviewStatus","==","active"))):n=await O(H(A(b,"snippets"),Q("reviewStatus","==","active")));const s={};if(n.forEach(i=>{s[i.id]=i.data()}),d){d.knownObjects.clear();for(const[i,a]of Object.entries(s)){const c={content_type:a.title,description:a.description||"No description",tags:a.tags||[],isPremium:a.isPremium||!1,priceUsd:a.priceUsd||0};d.knownObjects.set(i,{metadata:c,chunks:a.chunks||[]})}d.knownObjects.forEach((i,a)=>{const c=s[a]||{likes:0,dislikes:0},l=(i.metadata.tags||[]).map(f=>f.toLowerCase());if(o.length>0&&!o.some(f=>l.includes(f)))return;const u=(i.metadata.isPremium||!1)&&i.metadata.priceUsd||0,g=u>0?`${u} DCT`:"Free",m=document.createElement("tr");m.innerHTML=`
          <td class="py-2 px-4">${i.metadata.content_type}</td>
          <td class="py-2 px-4">${i.metadata.description||"No description"}</td>
          <td class="py-2 px-4">${i.metadata.tags.join(", ")||"No tags"}</td>
          <td class="py-2 px-4">${c.likes}</td>
          <td class="py-2 px-4">${c.dislikes}</td>
          <td class="py-2 px-4">
            <button onclick="window.openBuyModal(${a})" class="bg-purple-500 text-white rounded hover:bg-purple-600 px-3 py-1 mr-2">Get (${g})</button>
            <button onclick="window.flagSnippet('${a}')" class="bg-red-500 text-white rounded hover:bg-red-600 px-3 py-1">Flag</button>
          </td>
        `,e.appendChild(m)})}}catch(o){console.error("Failed to search snippets:",o),p("Search failed.",!0)}}}async function N(){var e;const r=((e=y.currentUser)==null?void 0:e.uid)||localStorage.getItem("nodeId");if(r)try{const t=B(b,"users",r),o=d?await d.getBalance(d.keypair):0;await D(t,{balance:o,lastUpdated:Date.now()},{merge:!0}),console.log("User data uploaded to Firebase")}catch(t){console.error("Failed to upload user data to Firebase:",t)}}function ze(){const r=document.getElementById("transactionHistory");r&&(r.style.display=r.style.display==="none"?"block":"none")}function _e(r,e,t){const o=document.getElementById("snippetDisplay");if(!o)return;o.innerHTML="";const n=document.createElement("div");n.className="p-4 bg-gray-800 rounded-lg mt-4";const s=document.createElement("h3");if(s.className="text-lg font-semibold mb-2",s.textContent=t||"Snippet Content",n.appendChild(s),e.startsWith("text")){const i=new TextDecoder().decode(r),a=document.createElement("pre");a.className="text-sm text-gray-300 whitespace-pre-wrap",a.textContent=i,n.appendChild(a)}else if(e.startsWith("image")){const i=new Blob([r],{type:e}),a=URL.createObjectURL(i),c=document.createElement("img");c.src=a,c.className="max-w-full h-auto rounded",c.onload=()=>URL.revokeObjectURL(a),n.appendChild(c)}else{const i=new Blob([r],{type:e}),a=URL.createObjectURL(i),c=document.createElement("a");c.href=a,c.download=t||"downloaded_file",c.className="text-blue-400 hover:underline",c.textContent="Download File",c.onclick=()=>setTimeout(()=>URL.revokeObjectURL(a),1e3),n.appendChild(c)}o.appendChild(n)}async function V(){return new Promise((e,t)=>{console.log("Starting IndexedDB initialization...");const o=indexedDB.open("dcrypt_db");o.onsuccess=()=>{const n=o.result,s=n.version;console.log("Current IndexedDB version:",s),n.close();const i=indexedDB.open("dcrypt_db",Math.max(s,5));i.onupgradeneeded=a=>{const c=i.result;console.log("Upgrading database to version",5),c.objectStoreNames.contains("store")||(c.createObjectStore("store",{keyPath:"id"}),console.log("Created object store: store")),c.objectStoreNames.contains("transactions")||(c.createObjectStore("transactions",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: transactions")),c.objectStoreNames.contains("offlineQueue")||(c.createObjectStore("offlineQueue",{keyPath:"id",autoIncrement:!0}),console.log("Created object store: offlineQueue")),c.objectStoreNames.contains("chunkCache")||(c.createObjectStore("chunkCache",{keyPath:"id"}),console.log("Created object store: chunkCache")),console.log("Database upgrade completed")},i.onsuccess=()=>{const a=i.result;console.log("IndexedDB opened successfully at version",a.version),e(a)},i.onerror=()=>{console.error("Failed to open IndexedDB:",i.error),t(new Error(`Failed to open IndexedDB: ${i.error.message}`))}},o.onerror=()=>{console.error("Failed to check IndexedDB version:",o.error),t(new Error(`Failed to check IndexedDB version: ${o.error.message}`))}})}async function ue(r){return new Promise((e,t)=>{try{const s=r.transaction("store","readonly").objectStore("store").get("dcrypt_identity");s.onsuccess=()=>{var a;const i=(a=s.result)==null?void 0:a.value;i&&typeof i=="string"?(console.log("Loaded keypair from IndexedDB:",i),e(i)):(console.log("No valid keypair found in IndexedDB."),e(null))},s.onerror=()=>{console.error("Failed to load keypair from IndexedDB:",s.error),t(new Error("Failed to load keypair from IndexedDB"))}}catch(o){console.error('Error accessing "store" object store:',o),t(o)}})}async function ee(r,e){return new Promise((t,o)=>{try{console.log("Storing keypair in IndexedDB:",e);const i=r.transaction("store","readwrite").objectStore("store").put({id:"dcrypt_identity",value:e});i.onsuccess=()=>{console.log("Successfully stored keypair in IndexedDB"),t()},i.onerror=()=>{console.error("Failed to store keypair in IndexedDB:",i.error),o(new Error("Failed to store keypair in IndexedDB"))}}catch(n){console.error('Error storing keypair in "store" object store:',n),o(n)}})}async function te(r,e){if(W){console.log("Initialization already in progress, skipping...");return}W=!0,console.log("Initializing app with userId:",r);try{e||(e=await V());let t=await ue(e);if(t instanceof Uint8Array&&(t=qe(t)),!t&&r)console.log("No keypair found, using userId as keypair:",r),await ee(e,r),t=r;else if(t)t.length>40&&(console.warn("Existing keypair is unusually large:",t.length,"characters. Overwriting with userId."),t=r,await ee(e,r));else throw new Error("No keypair available and no userId provided to create one");L=await Ge(r),console.log(`User is ${L?"":"not "}a node.`),d=new le(t,L),window.dht=d,await d.initDB(),console.log("DHT database initialized."),await d.initSwarm(),console.log("DHT swarm initialized."),await d.syncUserData(),console.log("User data synced."),await Promise.all([z(),J(),U(),F()]),console.log("UI updated."),await he(r)}catch(t){console.error("Error initializing application:",t),t.message.includes("ID conflict")?p("Failed to connect to the network due to an ID conflict. Please try signing out and signing in again.",!0):p(`Initialization failed: ${t.message}`,!0),d&&d.destroy(),d=null,window.dht=null,x=0,T()}finally{W=!1}N()}async function Ge(r){try{const e=B(b,"nodes",r);return(await j(e)).exists()}catch(e){return console.error("Failed to check node status:",e),!1}}async function We(r,e=800,t=800,o=.7){return new Promise((n,s)=>{const i=new Image;i.src=URL.createObjectURL(r),i.onload=()=>{const a=document.createElement("canvas");let c=i.width,l=i.height;c>l?c>e&&(l*=e/c,c=e):l>t&&(c*=t/l,l=t),a.width=c,a.height=l,a.getContext("2d").drawImage(i,0,0,c,l),a.toBlob(u=>n(u),r.type,o)},i.onerror=s})}async function Qe(r,e){if(!e)return console.log("No file provided for upload"),null;if(!y.currentUser||y.currentUser.uid!==r)return console.error("User not authenticated or ID mismatch"),p("Please sign in to upload a profile image.",!0),null;try{const t=await We(e),o=new FileReader,s=await new Promise((a,c)=>{o.onload=()=>a(o.result.split(",")[1]),o.onerror=c,o.readAsDataURL(t)}),i=B(b,"users",r);return await D(i,{profileImage:s,updatedAt:new Date().toISOString()},{merge:!0}),console.log("Compressed profile image stored in Firestore for user:",r),s}catch(t){return console.error("Failed to store profile image in Firestore:",t),p(`Failed to store profile image: ${t.message}`,!0),null}}async function Ke(){if(console.log("handleSignup function called"),G){console.log("Signup already in progress, ignoring additional clicks");return}G=!0;const r=document.getElementById("signupButton");r&&(r.disabled=!0,r.textContent="Signing Up...",console.log("Signup button disabled and text updated")),localStorage.setItem("pendingRole","user");try{const e=new se,t=await re(y,e);console.log("Sign-up successful, user:",t.user);const o=document.getElementById("usernameInput").value,s=document.getElementById("profileImageInput").files[0];console.log(s);const i=s?await Qe(t.user.uid,s):null,a=B(b,"users",t.user.uid);await D(a,{username:o||t.user.displayName||"Anonymous User",profileImageUrl:i||null,createdAt:Date.now(),snippetsPosted:0},{merge:!0}),console.log("User profile saved to Firestore"),p("Sign-up successful! Redirecting to dashboard..."),window.location.href="/datasharingApp/"}catch(e){console.error("Signup failed:",e),p(`Sign-up failed: ${e.message}`,!0),G=!1,r&&(r.disabled=!1,r.textContent="Sign Up with Google")}finally{localStorage.removeItem("pendingRole")}}async function Je(r){if(!C()){p("Please sign in to deposit.");return}try{if(!d)throw new Error("DHT not initialized");if(!r||r<=0)throw new Error("Invalid deposit amount");const t=await d.getBalance(d.keypair)+r;await d.putBalance(d.keypair,t),await d.dbAdd("transactions",{type:"deposit",amount:r,timestamp:Date.now()}),p(`Deposited ${r} DCT successfully!`),await Promise.all([F(),U(),N()])}catch(e){console.error("deposit failed:",e),p(`Deposit failed: ${e.message}`,!0)}}async function Ve(r){if(!C()){p("Please sign in to withdraw.");return}try{if(!d)throw new Error("DHT not initialized");if(!r||r<=0)throw new Error("Invalid withdrawal amount");const e=await d.getBalance(d.keypair);if(e<r)throw new Error("Insufficient balance");await d.putBalance(d.keypair,e-r),await d.dbAdd("transactions",{type:"withdraw",amount:r,timestamp:Date.now()}),p(`Withdrew ${r} DCT successfully!`),await Promise.all([F(),U(),N()])}catch(e){console.error("withdraw failed:",e),p(`Withdrawal failed: ${e.message}`,!0)}}async function Ye(){console.log("signIn function called");try{y||(console.error("Firebase Auth is not initialized, initializing now..."),await de());const r=new se,e=await re(y,r);console.log("Sign-in successful, user:",e.user)}catch(r){console.error("Login failed:",r),p(`Login failed: ${r.message}`,!0)}}async function ne(){console.log("signOutUser function called");try{localStorage.getItem("role")==="node"?(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),p("Node signed out successfully!")):(await ye(y),p("Signed out successfully!")),d&&(d.destroy(),d=null,window.dht=null);const t=(await V()).transaction("store","readwrite").objectStore("store");await new Promise((o,n)=>{const s=t.delete("dcrypt_identity");s.onsuccess=()=>{console.log("Successfully deleted keypair from IndexedDB"),o()},s.onerror=()=>{console.error("Failed to delete keypair from IndexedDB:",s.error),n(new Error("Failed to delete keypair from IndexedDB"))}}),x=0,T()}catch(r){console.error("Sign-out failed:",r),p(`Sign-out failed: ${r.message}`,!0)}}async function Ze(r,e,t,o,n){var s,i;if(!C()){p("Please sign in to publish.");return}try{if(!d)throw new Error("DHT not initialized");if(!r)throw new Error("Title is required");let a=o||"",c="text/plain";if((s=n==null?void 0:n.files)!=null&&s.length){const I=n.files[0];c=I.type||"application/octet-stream",a=await new Promise(($,q)=>{const w=new FileReader;w.onload=_=>$(new Uint8Array(_.target.result)),w.onerror=()=>q(new Error("Failed to read file")),w.readAsArrayBuffer(I)})}else a=new TextEncoder().encode(a);const l=document.getElementById("modalPremium").checked,h=document.getElementById("modalPriceInput"),u=l&&h&&parseFloat(h.value)||0,g={content_type:c,title:r,description:e||"",tags:t?t.split(",").map(I=>I.trim()).filter(I=>I.length>0):[],isPremium:l,priceUsd:u},{ipHash:m,targetPeer:f}=await d.publishIP(g,a,c),S=((i=y.currentUser)==null?void 0:i.uid)||localStorage.getItem("nodeId"),P=B(b,"snippets",m),k={ipHash:m,title:r,description:e||"",tags:g.tags,isPremium:l,priceUsd:u,flagCount:0,likes:0,dislikes:0,createdAt:Date.now(),creatorId:S,targetNode:f};console.log("Saving snippet to Firestore: ",k),await D(P,k,{merge:!0});const v=B(b,"users",S);await R(v,{snippetsPosted:M(1)}),p("Snippet published successfully!"),window.closePublishModal(),await Promise.all([z(),J(),F(),U(),N(),he(S)])}catch(a){throw console.error("publishSnippet failed:",a),p(`Publish failed: ${a.message}`,!0),a}}async function pe(r){if(!C())return p("Please sign in to buy."),null;try{if(!d)throw new Error("DHT not initialized");if(!r)throw new Error("Hash is required");let e=await d.getIPmetadata(r);console.log(e,"IP OBJECT");const t=B(b,"snippets",r),o=await j(t);if(!o.exists())throw new Error("Snippet not found");const n=o.data(),a=(e.metadata.isPremium||!1)&&e.metadata.priceUsd||0;if(a>0){const u=await d.getBalance(d.keypair);if(u<a)throw new Error("Insufficient balance");const g=a*.05;await d.distributeCommission(g),await d.putBalance(d.keypair,u-a),await d.dbAdd("transactions",{type:"buy",amount:a,timestamp:Date.now()})}else console.log("This snippet is free!"),await d.dbAdd("transactions",{type:"buy",amount:0,timestamp:Date.now()});const{data:c,fileType:l}=await d.requestData(e,n.targetNode,r);p("Snippet retrieved successfully!"),await Promise.all([F(),U(),N(),J()]);const h=prompt('Do you like this snippet? Type "like" or "dislike":');if(h!==null){const u=h.trim().toLowerCase();u==="like"||u==="dislike"?(await et(r,u),p(`You ${u}d this snippet!`),await z()):p('Invalid input. Please type "like" or "dislike".',!0)}return _e(c,l,e.metadata.content_type),{data:c,fileType:l}}catch(e){return console.error("buySnippet failed:",e),p(`Purchase failed: ${e.message}`,!0),null}}async function Xe(r){var o;const e=r||((o=document.getElementById("buyHashInput"))==null?void 0:o.value.trim());if(!e){p("Please enter a valid hash.",!0);return}await pe(e)&&p("Snippet purchased and displayed below!")}async function et(r,e){var o;const t=((o=y.currentUser)==null?void 0:o.uid)||localStorage.getItem("nodeId");if(t)try{const n=B(b,"snippets",r,"feedback",t);await D(n,{action:e,timestamp:Date.now()});const s=B(b,"snippets",r);e==="like"?await R(s,{likes:M(1)}):e==="dislike"&&await R(s,{dislikes:M(1)})}catch(n){console.error("Failed to submit feedback:",n),p(`Failed to submit feedback: ${n.message}`,!0)}}async function tt(r){var t;if(!(((t=y.currentUser)==null?void 0:t.uid)||localStorage.getItem("nodeId"))){p("Please sign in to flag content.");return}try{const o=B(b,"snippets",r);await R(o,{flagCount:M(1)}),((await j(o)).data().flagCount||0)>=3?(await R(o,{reviewStatus:"under_review"}),p("Snippet has been flagged and is under review."),await z()):p("Snippet flagged. It will be reviewed if flagged by more users.")}catch(o){console.error("Failed to flag snippet:",o),p(`Failed to flag snippet: ${o.message}`,!0)}}async function nt(){const r=Oe();console.log(r),localStorage.setItem("nodeId",r),localStorage.setItem("role","node");const e=B(b,"nodes",r);if(await D(e,{role:"node",createdAt:Date.now(),status:"active"},{merge:!0}),!window.location.pathname.includes("node-instructions.html")){console.log("Redirecting to node-instructions.html for node role"),window.location.href="/datasharingApp/node-instructions.html";return}}async function ot(){try{const r=localStorage.getItem("nodeId"),e=localStorage.getItem("role");if(localStorage.removeItem("nodeId"),localStorage.removeItem("role"),sessionStorage.setItem("nodeId",r),sessionStorage.setItem("role",e),console.log("Moved to session storage"),e!=="node"||!r){p("You must be signed in as a node to view this page."),window.location.href="/datasharingApp/signup.html";return}d=new le(r,!0),await d.initDB(),await d.initSwarm(),await d.syncUserData();const o=(await d.dbGetAll("transactions")).filter(s=>s.type==="commission").reduce((s,i)=>s+(i.amount||0),0),n=document.getElementById("nodeEarnings");n&&(n.textContent=`Total Earnings: ${o.toFixed(2)} DCT`)}catch(r){console.error("Error initializing node instructions:",r),p(`Initialization failed: ${r.message}`)}}async function he(r){if(r)try{const e=B(b,"users",r),t=await j(e);if(t.exists()){const o=t.data(),n=document.getElementById("userName"),s=document.querySelector(".user-avatar"),i=document.getElementById("snippetsPosted");n&&(n.textContent=o.username||"Anonymous User"),s&&(o.profileImageUrl?s.innerHTML=`<img src="${o.profileImageUrl}" alt="Profile Image" class="w-12 h-12 rounded-full object-cover">`:s.innerHTML='<i class="fas fa-user text-lg"></i>'),i&&(i.textContent=o.snippetsPosted||0)}}catch(e){console.error("Failed to fetch user profile:",e),p("Failed to load user profile.",!0)}}async function st(r){try{await navigator.clipboard.writeText(r),p("Hash copied to clipboard!")}catch(e){console.error("Failed to copy hash:",e),p("Failed to copy hash.",!0)}}document.addEventListener("DOMContentLoaded",async()=>{var o,n,s;if(console.log("DOMContentLoaded event fired"),console.log("Current pathname:",window.location.pathname),window.location.pathname.includes("signup")){const i=document.getElementById("userSignupForm");i&&i.addEventListener("submit",async a=>{a.preventDefault(),await window.handleSignup()})}window.location.pathname.includes("node")&&ot();try{await de()}catch(i){console.error("Firebase initialization failed, aborting setup:",i),p("Firebase initialization failed. Please check your configuration.",!0);return}const r=localStorage.getItem("role"),e=localStorage.getItem("nodeId"),t=!(window.location.pathname.includes("node")||window.location.pathname.includes("signup.html")||window.location.pathname.includes("publish"));if(t&&r==="node"&&e&&(console.log("Node detected on index.html, redirecting to node-instructions.html"),window.location.href="/datasharingApp/node-instructions.html"),t||window.location.pathname.includes("publish")){const i=await V(),a=await ue(i);try{await Promise.all([new Promise(c=>{Y(y,async l=>{if(console.log("onAuthStateChanged triggered"),l)console.log("User is signed in:",l.uid),await te(l.uid,i);else{console.log("No user is signed in. Checking IndexedDB for keypair...");try{a?(console.log("Found keypair in IndexedDB, initializing app..."),await te(a,i)):(console.log("No keypair found in IndexedDB."),t&&T())}catch(h){console.error("Failed to initialize IndexedDB or load keypair:",h),t&&T()}}c()},l=>{console.error("onAuthStateChanged error:",l),p("Failed to monitor authentication state.",!0),c()})})])}catch(c){console.error("Initialization error:",c),p("An error occurred during initialization.",!0)}}if(t){const i={signupButton:document.getElementById("signupButton"),loginButton:document.getElementById("loginButton"),logoutButton:document.getElementById("logoutButton"),userBalanceElement:document.getElementById("userBalance"),searchButton:document.getElementById("searchButton"),depositButton:document.getElementById("depositButton"),withdrawButton:document.getElementById("withdrawButton"),toggleHistoryButton:document.getElementById("toggleHistoryButton"),transactionHistory:document.getElementById("transactionHistory"),publishedItemsTableBody:(o=document.getElementById("publishedItems"))==null?void 0:o.querySelector("tbody"),buyHashButton:document.getElementById("buyHashButton")};console.log("On index.html, setting up UI and event listeners"),r==="node"&&e&&(L=!0,console.log("Node detected, but should have been redirected already.")),(n=i.loginButton)==null||n.addEventListener("click",c=>{c.preventDefault(),console.log("Login button clicked"),Ye()}),(s=i.logoutButton)==null||s.addEventListener("click",c=>{c.preventDefault(),console.log("Logout button clicked"),ne()}),Y(y,c=>{var l,h,u,g,m,f;c?((l=i.signupButton)==null||l.classList.add("hidden"),(h=i.loginButton)==null||h.classList.add("hidden"),(u=i.logoutButton)==null||u.classList.remove("hidden"),i.searchButton.disabled=!1,i.depositButton.disabled=!1,i.withdrawButton.disabled=!1,i.toggleHistoryButton.disabled=!1,i.buyHashButton.disabled=!1):((g=i.signupButton)==null||g.classList.remove("hidden"),(m=i.loginButton)==null||m.classList.remove("hidden"),(f=i.logoutButton)==null||f.classList.add("hidden"),i.searchButton.disabled=!0,i.depositButton.disabled=!0,i.withdrawButton.disabled=!0,i.toggleHistoryButton.disabled=!0,i.buyHashButton.disabled=!0,T())});const a=document.getElementById("publishForm");a&&a.addEventListener("submit",async c=>{c.preventDefault();const l=document.getElementById("modalTitleInput").value,h=document.getElementById("modalDescriptionInput").value,u=document.getElementById("modalTagsInput").value,g=document.getElementById("modalContentInput").value,m=document.getElementById("modalFileInput");await window.publishSnippet(l,h,u,g,m)})}else console.log("Not on index.html, skipping index.html-specific setup");window.logout=ne,window.publishSnippet=Ze,window.buySnippet=pe,window.buySnippetByHash=Xe,window.toggleTransactionHistory=ze,window.flagSnippet=tt,window.handleSignup=Ke,window.becomeNode=nt,window.deposit=Je,window.withdraw=Ve,window.redirectToPublish=Me,window.searchSnippets=je,window.copyHash=st,window.openBuyModal=He});
